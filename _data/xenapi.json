[ { "name": "session",
"description": "A session",
"fields": [ 
  { "name": "uuid",
    "description": "Unique identifier/object reference",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Unique identifier/object reference" } ] }, 
  { "name": "this_host",
    "description": "Currently connected host",
    "type": "host ref",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Currently connected host" } ] }, 
  { "name": "this_user",
    "description": "Currently connected user",
    "type": "user ref",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Currently connected user" } ] }, 
  { "name": "last_active",
    "description": "Timestamp for last time session was active",
    "type": "datetime",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Timestamp for last time session was active" } ] }, 
  { "name": "pool",
    "description": "True if this session relates to a intra-pool login, false otherwise",
    "type": "bool",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "True if this session relates to a intra-pool login, false otherwise" } ] }, 
  { "name": "other_config",
    "description": "additional configuration",
    "type": "(string -> string) map",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "miami",
        "description": "additional configuration" } ],
    "default": "{}" }, 
  { "name": "is_local_superuser",
    "description": "true iff this session was created using local superuser credentials",
    "type": "bool",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "george",
        "description": "true iff this session was created using local superuser credentials" } ],
    "default": "false" }, 
  { "name": "subject",
    "description": "references the subject instance that created the session. If a session instance has is_local_superuser set, then the value of this field is undefined.",
    "type": "subject ref",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "george",
        "description": "references the subject instance that created the session. If a session instance has is_local_superuser set, then the value of this field is undefined." } ],
    "default": "OpaqueRef:NULL" }, 
  { "name": "validation_time",
    "description": "time when session was last validated",
    "type": "datetime",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "george",
        "description": "time when session was last validated" } ],
    "default": "19700101T00:00:00Z" }, 
  { "name": "auth_user_sid",
    "description": "the subject identifier of the user that was externally authenticated. If a session instance has is_local_superuser set, then the value of this field is undefined.",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "george",
        "description": "the subject identifier of the user that was externally authenticated. If a session instance has is_local_superuser set, then the value of this field is undefined." } ],
    "default": "\"\"" }, 
  { "name": "auth_user_name",
    "description": "the subject name of the user that was externally authenticated. If a session instance has is_local_superuser set, then the value of this field is undefined.",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "midnight-ride",
        "description": "the subject name of the user that was externally authenticated. If a session instance has is_local_superuser set, then the value of this field is undefined." } ],
    "default": "\"\"" }, 
  { "name": "rbac_permissions",
    "description": "list with all RBAC permissions for this session",
    "type": "string set",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "midnight-ride",
        "description": "list with all RBAC permissions for this session" } ],
    "default": "{}" }, 
  { "name": "tasks",
    "description": "list of tasks created using the current session",
    "type": "task ref set",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "midnight-ride",
        "description": "list of tasks created using the current session" } ] }, 
  { "name": "parent",
    "description": "references the parent session that created this session",
    "type": "session ref",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "midnight-ride",
        "description": "references the parent session that created this session" } ],
    "default": "OpaqueRef:NULL" }, 
  { "name": "originator",
    "description": "a key string provided by a API user to distinguish itself from other users sharing the same login name",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "clearwater",
        "description": "a key string provided by a API user to distinguish itself from other users sharing the same login name" } ],
    "default": "\"\"" } ],
"messages": [ 
  { "name": "logout_subject_identifier",
    "description": "Log out all sessions associated to a user subject-identifier, except the session associated with the context calling this function",
    "result": [ "void" ],
    "params": [ 
      { "type": "string",
        "name": "subject_identifier",
        "doc": "User subject-identifier of the sessions to be destroyed" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "george",
        "description": "Log out all sessions associated to a user subject-identifier, except the session associated with the context calling this function" } ] }, 
  { "name": "get_all_subject_identifiers",
    "description": "Return a list of all the user subject-identifiers of all existing sessions",
    "result": [ "string set", "The list of user subject-identifiers of all existing sessions" ],
    "params": [  ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin", "vm-operator", "read-only" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "george",
        "description": "Return a list of all the user subject-identifiers of all existing sessions" } ] }, 
  { "name": "local_logout",
    "description": "Log out of local session.",
    "result": [ "void" ],
    "params": [  ],
    "errors": [  ],
    "roles": [ "pool-admin" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "miami",
        "description": "Log out of local session." } ] }, 
  { "name": "slave_local_login_with_password",
    "description": "Authenticate locally against a slave in emergency mode. Note the resulting sessions are only good for use on this host.",
    "result": [ "session ref", "ID of newly created session" ],
    "params": [ 
      { "type": "string",
        "name": "uname",
        "doc": "Username for login." }, 
      { "type": "string",
        "name": "pwd",
        "doc": "Password for login." } ],
    "errors": [  ],
    "roles": [ "pool-admin" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "miami",
        "description": "Authenticate locally against a slave in emergency mode. Note the resulting sessions are only good for use on this host." } ] }, 
  { "name": "change_password",
    "description": "Change the account password; if your session is authenticated with root priviledges then the old_pwd is validated and the new_pwd is set regardless",
    "result": [ "void" ],
    "params": [ 
      { "type": "string",
        "name": "old_pwd",
        "doc": "Old password for account" }, 
      { "type": "string",
        "name": "new_pwd",
        "doc": "New password for account" } ],
    "errors": [  ],
    "roles": [  ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Change the account password; if your session is authenticated with root priviledges then the old_pwd is validated and the new_pwd is set regardless" } ] }, 
  { "name": "logout",
    "description": "Log out of a session",
    "result": [ "void" ],
    "params": [  ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin", "vm-operator", "read-only" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Log out of a session" } ] }, 
  { "name": "login_with_password",
    "description": "Attempt to authenticate the user, returning a session reference if successful",
    "result": [ "session ref", "reference of newly created session" ],
    "params": [ 
      { "type": "string",
        "name": "uname",
        "doc": "Username for login." }, 
      { "type": "string",
        "name": "pwd",
        "doc": "Password for login." }, 
      { "type": "string",
        "name": "version",
        "doc": "Client API version." }, 
      { "type": "string",
        "name": "originator",
        "doc": "Key string for distinguishing different API users sharing the same login name." } ],
    "errors": [ 
      { "name": "SESSION_AUTHENTICATION_FAILED",
        "doc": "The credentials given by the user are incorrect, so access has been denied, and you have not been issued a session handle." }, 
      { "name": "HOST_IS_SLAVE",
        "doc": "You cannot make regular API calls directly on a slave. Please pass API calls via the master host." } ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin", "vm-operator", "read-only" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Attempt to authenticate the user, returning a session reference if successful" } ] } ],
"enums": [  ],
"lifecycle": [ 
  { "transition": "published",
    "release": "rio",
    "description": "A session" } ] }, { "name": "auth",
"description": "Management of remote authentication services",
"fields": [  ],
"messages": [ 
  { "name": "get_group_membership",
    "description": "This calls queries the external directory service to obtain the transitively-closed set of groups that the the subject_identifier is member of.",
    "result": [ "string set", "set of subject_identifiers that provides the group membership of subject_identifier passed as argument, it contains, recursively, all groups a subject_identifier is member of." ],
    "params": [ 
      { "type": "string",
        "name": "subject_identifier",
        "doc": "A string containing the subject_identifier, unique in the external directory service" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin", "vm-operator", "read-only" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "george",
        "description": "This calls queries the external directory service to obtain the transitively-closed set of groups that the the subject_identifier is member of." } ] }, 
  { "name": "get_subject_information_from_identifier",
    "description": "This call queries the external directory service to obtain the user information (e.g. username, organization etc) from the specified subject_identifier",
    "result": [ "(string -> string) map", "key-value pairs containing at least a key called subject_name" ],
    "params": [ 
      { "type": "string",
        "name": "subject_identifier",
        "doc": "A string containing the subject_identifier, unique in the external directory service" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin", "vm-operator", "read-only" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "george",
        "description": "This call queries the external directory service to obtain the user information (e.g. username, organization etc) from the specified subject_identifier" } ] }, 
  { "name": "get_subject_identifier",
    "description": "This call queries the external directory service to obtain the subject_identifier as a string from the human-readable subject_name",
    "result": [ "string", "the subject_identifier obtained from the external directory service" ],
    "params": [ 
      { "type": "string",
        "name": "subject_name",
        "doc": "The human-readable subject_name, such as a username or a groupname" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin", "vm-operator", "read-only" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "george",
        "description": "This call queries the external directory service to obtain the subject_identifier as a string from the human-readable subject_name" } ] } ],
"enums": [  ],
"lifecycle": [ 
  { "transition": "published",
    "release": "george",
    "description": "Management of remote authentication services" } ] }, { "name": "subject",
"description": "A user or group that can log in xapi",
"fields": [ 
  { "name": "uuid",
    "description": "Unique identifier/object reference",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Unique identifier/object reference" } ] }, 
  { "name": "subject_identifier",
    "description": "the subject identifier, unique in the external directory service",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "george",
        "description": "the subject identifier, unique in the external directory service" } ],
    "default": "\"\"" }, 
  { "name": "other_config",
    "description": "additional configuration",
    "type": "(string -> string) map",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "george",
        "description": "additional configuration" } ],
    "default": "{}" }, 
  { "name": "roles",
    "description": "the roles associated with this subject",
    "type": "role ref set",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "midnight-ride",
        "description": "the roles associated with this subject" } ],
    "default": "{OpaqueRef:0165f154-ba3e-034e-6b27-5d271af109ba}" } ],
"messages": [ 
  { "name": "get_permissions_name_label",
    "description": "This call returns a list of permission names given a subject",
    "result": [ "string set", "a list of permission names" ],
    "params": [ 
      { "type": "subject ref",
        "name": "self",
        "doc": "The subject whose permissions will be retrieved" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin", "vm-operator", "read-only" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "midnight-ride",
        "description": "This call returns a list of permission names given a subject" } ] }, 
  { "name": "remove_from_roles",
    "description": "This call removes a role from a subject",
    "result": [ "void" ],
    "params": [ 
      { "type": "subject ref",
        "name": "self",
        "doc": "The subject from whom we want to remove the role" }, 
      { "type": "role ref",
        "name": "role",
        "doc": "The unique role reference in the subject's roles field" } ],
    "errors": [  ],
    "roles": [ "pool-admin" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "midnight-ride",
        "description": "This call removes a role from a subject" } ] }, 
  { "name": "add_to_roles",
    "description": "This call adds a new role to a subject",
    "result": [ "void" ],
    "params": [ 
      { "type": "subject ref",
        "name": "self",
        "doc": "The subject who we want to add the role to" }, 
      { "type": "role ref",
        "name": "role",
        "doc": "The unique role reference" } ],
    "errors": [  ],
    "roles": [ "pool-admin" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "midnight-ride",
        "description": "This call adds a new role to a subject" } ] } ],
"enums": [  ],
"lifecycle": [ 
  { "transition": "published",
    "release": "george",
    "description": "A user or group that can log in xapi" } ] }, { "name": "role",
"description": "A set of permissions associated with a subject",
"fields": [ 
  { "name": "uuid",
    "description": "Unique identifier/object reference",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Unique identifier/object reference" } ] }, 
  { "name": "label",
    "description": "a short user-friendly name for the role",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "midnight-ride",
        "description": "a short user-friendly name for the role" } ],
    "default": "\"\"" }, 
  { "name": "description",
    "description": "what this role is for",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "midnight-ride",
        "description": "what this role is for" } ],
    "default": "\"\"" }, 
  { "name": "subroles",
    "description": "a list of pointers to other roles or permissions",
    "type": "role ref set",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "midnight-ride",
        "description": "a list of pointers to other roles or permissions" } ],
    "default": "{}" } ],
"messages": [ 
  { "name": "get_by_permission_name_label",
    "description": "This call returns a list of roles given a permission name",
    "result": [ "role ref set", "a list of references to roles" ],
    "params": [ 
      { "type": "string",
        "name": "label",
        "doc": "The short friendly name of the role" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin", "vm-operator", "read-only" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "midnight-ride",
        "description": "This call returns a list of roles given a permission name" } ] }, 
  { "name": "get_by_permission",
    "description": "This call returns a list of roles given a permission",
    "result": [ "role ref set", "a list of references to roles" ],
    "params": [ 
      { "type": "role ref",
        "name": "permission",
        "doc": "a reference to a permission" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin", "vm-operator", "read-only" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "midnight-ride",
        "description": "This call returns a list of roles given a permission" } ] }, 
  { "name": "get_permissions_name_label",
    "description": "This call returns a list of permission names given a role",
    "result": [ "string set", "a list of permission names" ],
    "params": [ 
      { "type": "role ref",
        "name": "self",
        "doc": "a reference to a role" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin", "vm-operator", "read-only" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "midnight-ride",
        "description": "This call returns a list of permission names given a role" } ] }, 
  { "name": "get_permissions",
    "description": "This call returns a list of permissions given a role",
    "result": [ "role ref set", "a list of permissions" ],
    "params": [ 
      { "type": "role ref",
        "name": "self",
        "doc": "a reference to a role" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin", "vm-operator", "read-only" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "midnight-ride",
        "description": "This call returns a list of permissions given a role" } ] } ],
"enums": [  ],
"lifecycle": [ 
  { "transition": "published",
    "release": "midnight-ride",
    "description": "A set of permissions associated with a subject" } ] }, { "name": "task",
"description": "A long-running asynchronous task",
"fields": [ 
  { "name": "uuid",
    "description": "Unique identifier/object reference",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Unique identifier/object reference" } ] }, 
  { "name": "label",
    "description": "a human-readable name",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "a human-readable name" } ],
    "default": "\"\"" }, 
  { "name": "description",
    "description": "a notes field containing human-readable description",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "a notes field containing human-readable description" } ],
    "default": "\"\"" }, 
  { "name": "allowed_operations",
    "description": "list of the operations allowed in this state. This list is advisory only and the server state may have changed by the time this field is read by a client.",
    "type": "enum task_allowed_operations set",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "list of the operations allowed in this state. This list is advisory only and the server state may have changed by the time this field is read by a client." } ] }, 
  { "name": "current_operations",
    "description": "links each of the running tasks using this object (by reference) to a current_operation enum which describes the nature of the task.",
    "type": "(string -> enum task_allowed_operations) map",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "links each of the running tasks using this object (by reference) to a current_operation enum which describes the nature of the task." } ] }, 
  { "name": "created",
    "description": "Time task was created",
    "type": "datetime",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Time task was created" } ] }, 
  { "name": "finished",
    "description": "Time task finished (i.e. succeeded or failed). If task-status is pending, then the value of this field has no meaning",
    "type": "datetime",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Time task finished (i.e. succeeded or failed). If task-status is pending, then the value of this field has no meaning" } ] }, 
  { "name": "status",
    "description": "current status of the task",
    "type": "enum task_status_type",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "current status of the task" } ] }, 
  { "name": "resident_on",
    "description": "the host on which the task is running",
    "type": "host ref",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "the host on which the task is running" } ] }, 
  { "name": "progress",
    "description": "This field contains the estimated fraction of the task which is complete. This field should not be used to determine whether the task is complete - for this the status field of the task should be used.",
    "type": "float",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "This field contains the estimated fraction of the task which is complete. This field should not be used to determine whether the task is complete - for this the status field of the task should be used." } ] }, 
  { "name": "type",
    "description": "if the task has completed successfully, this field contains the type of the encoded result (i.e. name of the class whose reference is in the result field). Undefined otherwise.",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "if the task has completed successfully, this field contains the type of the encoded result (i.e. name of the class whose reference is in the result field). Undefined otherwise." } ] }, 
  { "name": "result",
    "description": "if the task has completed successfully, this field contains the result value (either Void or an object reference). Undefined otherwise.",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "if the task has completed successfully, this field contains the result value (either Void or an object reference). Undefined otherwise." } ] }, 
  { "name": "error_info",
    "description": "if the task has failed, this field contains the set of associated error strings. Undefined otherwise.",
    "type": "string set",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "if the task has failed, this field contains the set of associated error strings. Undefined otherwise." } ] }, 
  { "name": "other_config",
    "description": "additional configuration",
    "type": "(string -> string) map",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "miami",
        "description": "additional configuration" } ],
    "default": "{}" }, 
  { "name": "subtask_of",
    "description": "Ref pointing to the task this is a substask of.",
    "type": "task ref",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "Ref pointing to the task this is a substask of." } ],
    "default": "Null" }, 
  { "name": "subtasks",
    "description": "List pointing to all the substasks.",
    "type": "task ref set",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "List pointing to all the substasks." } ] }, 
  { "name": "backtrace",
    "description": "Function call trace for debugging.",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "dundee",
        "description": "Function call trace for debugging." } ],
    "default": "\"()\"" } ],
"messages": [ 
  { "name": "cancel",
    "description": "Request that a task be cancelled. Note that a task may fail to be cancelled and may complete or fail normally and note that, even when a task does cancel, it might take an arbitrary amount of time.",
    "result": [ "void" ],
    "params": [ 
      { "type": "task ref",
        "name": "task",
        "doc": "The task" } ],
    "errors": [ 
      { "name": "OPERATION_NOT_ALLOWED",
        "doc": "You attempted an operation that was not allowed." } ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin", "vm-operator", "read-only" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Request that a task be cancelled. Note that a task may fail to be cancelled and may complete or fail normally and note that, even when a task does cancel, it might take an arbitrary amount of time." } ] }, 
  { "name": "destroy",
    "description": "Destroy the task object",
    "result": [ "void" ],
    "params": [ 
      { "type": "task ref",
        "name": "self",
        "doc": "Reference to the task object" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin", "vm-operator", "read-only" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Destroy the task object" } ] }, 
  { "name": "create",
    "description": "Create a new task object which must be manually destroyed.",
    "result": [ "task ref", "The reference of the created task object" ],
    "params": [ 
      { "type": "string",
        "name": "label",
        "doc": "short label for the new task" }, 
      { "type": "string",
        "name": "description",
        "doc": "longer description for the new task" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin", "vm-operator", "read-only" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Create a new task object which must be manually destroyed." } ] } ],
"enums": [ 
  { "name": "task_status_type",
    "values": [ 
      { "name": "pending",
        "doc": "task is in progress" }, 
      { "name": "success",
        "doc": "task was completed successfully" }, 
      { "name": "failure",
        "doc": "task has failed" }, 
      { "name": "cancelling",
        "doc": "task is being cancelled" }, 
      { "name": "cancelled",
        "doc": "task has been cancelled" } ] }, 
  { "name": "task_allowed_operations",
    "values": [ 
      { "name": "cancel",
        "doc": "refers to the operation \"cancel\"" }, 
      { "name": "destroy",
        "doc": "refers to the operation \"destroy\"" } ] } ],
"lifecycle": [ 
  { "transition": "published",
    "release": "rio",
    "description": "A long-running asynchronous task" } ] }, { "name": "event",
"description": "Asynchronous event registration and handling",
"fields": [ 
  { "name": "id",
    "description": "An ID, monotonically increasing, and local to the current session",
    "type": "int",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "An ID, monotonically increasing, and local to the current session" } ] }, 
  { "name": "timestamp",
    "description": "The time at which the event occurred",
    "type": "datetime",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "The time at which the event occurred" } ] }, 
  { "name": "class",
    "description": "The name of the class of the object that changed",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "The name of the class of the object that changed" } ] }, 
  { "name": "operation",
    "description": "The operation that was performed",
    "type": "enum event_operation",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "The operation that was performed" } ] }, 
  { "name": "ref",
    "description": "A reference to the object that changed",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "A reference to the object that changed" } ] }, 
  { "name": "obj_uuid",
    "description": "The uuid of the object that changed",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "The uuid of the object that changed" } ] } ],
"messages": [ 
  { "name": "inject",
    "description": "Injects an artificial event on the given object and return the corresponding ID",
    "result": [ "string", "the event ID" ],
    "params": [ 
      { "type": "string",
        "name": "class",
        "doc": "class of the object" }, 
      { "type": "string",
        "name": "ref",
        "doc": "A reference to the object that will be changed." } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin", "vm-operator", "read-only" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "tampa",
        "description": "Injects an artificial event on the given object and return the corresponding ID" } ] }, 
  { "name": "get_current_id",
    "description": "Return the ID of the next event to be generated by the system",
    "result": [ "int", "the event ID" ],
    "params": [  ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin", "vm-operator", "read-only" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Return the ID of the next event to be generated by the system" } ] }, 
  { "name": "from",
    "description": "Blocking call which returns a new token and a (possibly empty) batch of events. The returned token can be used in subsequent calls to this function.",
    "result": [ "event record set", "the batch of events" ],
    "params": [ 
      { "type": "string set",
        "name": "classes",
        "doc": "register for events for the indicated classes" }, 
      { "type": "string",
        "name": "token",
        "doc": "A token representing the point from which to generate database events. The empty string represents the beginning." }, 
      { "type": "float",
        "name": "timeout",
        "doc": "Return after this many seconds if no events match" } ],
    "errors": [ 
      { "name": "SESSION_NOT_REGISTERED",
        "doc": "This session is not registered to receive events.  You must call event.register before event.next.  The session handle you are using is echoed." }, 
      { "name": "EVENTS_LOST",
        "doc": "Some events have been lost from the queue and cannot be retrieved." } ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin", "vm-operator", "read-only" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "boston",
        "description": "Blocking call which returns a new token and a (possibly empty) batch of events. The returned token can be used in subsequent calls to this function." } ] }, 
  { "name": "next",
    "description": "Blocking call which returns a (possibly empty) batch of events. This method is only recommended for legacy use. New development should use event.from which supercedes this method. ",
    "result": [ "event record set", "the batch of events" ],
    "params": [  ],
    "errors": [ 
      { "name": "SESSION_NOT_REGISTERED",
        "doc": "This session is not registered to receive events.  You must call event.register before event.next.  The session handle you are using is echoed." }, 
      { "name": "EVENTS_LOST",
        "doc": "Some events have been lost from the queue and cannot be retrieved." } ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin", "vm-operator", "read-only" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Blocking call which returns a (possibly empty) batch of events. This method is only recommended for legacy use. New development should use event.from which supercedes this method. " } ] }, 
  { "name": "unregister",
    "description": "Unregisters this session with the event system",
    "result": [ "void" ],
    "params": [ 
      { "type": "string set",
        "name": "classes",
        "doc": "remove this session's registration for the indicated classes" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin", "vm-operator", "read-only" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Unregisters this session with the event system" } ] }, 
  { "name": "register",
    "description": "Registers this session with the event system.  Specifying * as the desired class will register for all classes.",
    "result": [ "void" ],
    "params": [ 
      { "type": "string set",
        "name": "classes",
        "doc": "register for events for the indicated classes" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin", "vm-operator", "read-only" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Registers this session with the event system.  Specifying * as the desired class will register for all classes." } ] } ],
"enums": [ 
  { "name": "event_operation",
    "values": [ 
      { "name": "add",
        "doc": "An object has been created" }, 
      { "name": "del",
        "doc": "An object has been deleted" }, 
      { "name": "mod",
        "doc": "An object has been modified" } ] } ],
"lifecycle": [  ] }, { "name": "pool",
"description": "Pool-wide information",
"fields": [ 
  { "name": "uuid",
    "description": "Unique identifier/object reference",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Unique identifier/object reference" } ] }, 
  { "name": "name_label",
    "description": "Short name",
    "type": "string",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Short name" } ] }, 
  { "name": "name_description",
    "description": "Description",
    "type": "string",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Description" } ] }, 
  { "name": "master",
    "description": "The host that is pool master",
    "type": "host ref",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "The host that is pool master" } ] }, 
  { "name": "default_SR",
    "description": "Default SR for VDIs",
    "type": "SR ref",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Default SR for VDIs" } ] }, 
  { "name": "suspend_image_SR",
    "description": "The SR in which VDIs for suspend images are created",
    "type": "SR ref",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "The SR in which VDIs for suspend images are created" } ] }, 
  { "name": "crash_dump_SR",
    "description": "The SR in which VDIs for crash dumps are created",
    "type": "SR ref",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "The SR in which VDIs for crash dumps are created" } ] }, 
  { "name": "other_config",
    "description": "additional configuration",
    "type": "(string -> string) map",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "additional configuration" } ] }, 
  { "name": "ha_enabled",
    "description": "true if HA is enabled on the pool, false otherwise",
    "type": "bool",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "true if HA is enabled on the pool, false otherwise" } ],
    "default": "false" }, 
  { "name": "ha_configuration",
    "description": "The current HA configuration",
    "type": "(string -> string) map",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "The current HA configuration" } ],
    "default": "{}" }, 
  { "name": "ha_statefiles",
    "description": "HA statefile VDIs in use",
    "type": "string set",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "HA statefile VDIs in use" } ],
    "default": "{}" }, 
  { "name": "ha_host_failures_to_tolerate",
    "description": "Number of host failures to tolerate before the Pool is declared to be overcommitted",
    "type": "int",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "Number of host failures to tolerate before the Pool is declared to be overcommitted" } ],
    "default": "0" }, 
  { "name": "ha_plan_exists_for",
    "description": "Number of future host failures we have managed to find a plan for. Once this reaches zero any future host failures will cause the failure of protected VMs.",
    "type": "int",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "Number of future host failures we have managed to find a plan for. Once this reaches zero any future host failures will cause the failure of protected VMs." } ],
    "default": "0" }, 
  { "name": "ha_allow_overcommit",
    "description": "If set to false then operations which would cause the Pool to become overcommitted will be blocked.",
    "type": "bool",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "If set to false then operations which would cause the Pool to become overcommitted will be blocked." } ],
    "default": "false" }, 
  { "name": "ha_overcommitted",
    "description": "True if the Pool is considered to be overcommitted i.e. if there exist insufficient physical resources to tolerate the configured number of host failures",
    "type": "bool",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "True if the Pool is considered to be overcommitted i.e. if there exist insufficient physical resources to tolerate the configured number of host failures" } ],
    "default": "false" }, 
  { "name": "blobs",
    "description": "Binary blobs associated with this pool",
    "type": "(string -> blob ref) map",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "Binary blobs associated with this pool" } ],
    "default": "{}" }, 
  { "name": "tags",
    "description": "user-specified tags for categorization purposes",
    "type": "string set",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "user-specified tags for categorization purposes" } ],
    "default": "{}" }, 
  { "name": "gui_config",
    "description": "gui-specific configuration for pool",
    "type": "(string -> string) map",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "gui-specific configuration for pool" } ],
    "default": "{}" }, 
  { "name": "wlb_url",
    "description": "Url for the configured workload balancing host",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "george",
        "description": "Url for the configured workload balancing host" } ],
    "default": "\"\"" }, 
  { "name": "wlb_username",
    "description": "Username for accessing the workload balancing host",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "george",
        "description": "Username for accessing the workload balancing host" } ],
    "default": "\"\"" }, 
  { "name": "wlb_enabled",
    "description": "true if workload balancing is enabled on the pool, false otherwise",
    "type": "bool",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "george",
        "description": "true if workload balancing is enabled on the pool, false otherwise" } ],
    "default": "false" }, 
  { "name": "wlb_verify_cert",
    "description": "true if communication with the WLB server should enforce SSL certificate verification.",
    "type": "bool",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "george",
        "description": "true if communication with the WLB server should enforce SSL certificate verification." } ],
    "default": "false" }, 
  { "name": "redo_log_enabled",
    "description": "true a redo-log is to be used other than when HA is enabled, false otherwise",
    "type": "bool",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "midnight-ride",
        "description": "true a redo-log is to be used other than when HA is enabled, false otherwise" } ],
    "default": "false" }, 
  { "name": "redo_log_vdi",
    "description": "indicates the VDI to use for the redo-log other than when HA is enabled",
    "type": "VDI ref",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "midnight-ride",
        "description": "indicates the VDI to use for the redo-log other than when HA is enabled" } ],
    "default": "OpaqueRef:NULL" }, 
  { "name": "vswitch_controller",
    "description": "address of the vswitch controller",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "midnight-ride",
        "description": "address of the vswitch controller" } ],
    "default": "\"\"" }, 
  { "name": "restrictions",
    "description": "Pool-wide restrictions currently in effect",
    "type": "(string -> string) map",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "midnight-ride",
        "description": "Pool-wide restrictions currently in effect" } ],
    "default": "{}" }, 
  { "name": "metadata_VDIs",
    "description": "The set of currently known metadata VDIs for this pool",
    "type": "VDI ref set",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "boston",
        "description": "The set of currently known metadata VDIs for this pool" } ] } ],
"messages": [ 
  { "name": "apply_edition",
    "description": "Apply an edition to all hosts in the pool",
    "result": [ "void" ],
    "params": [ 
      { "type": "pool ref",
        "name": "self",
        "doc": "Reference to the pool" }, 
      { "type": "string",
        "name": "edition",
        "doc": "The requested edition" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "clearwater",
        "description": "Apply an edition to all hosts in the pool" } ] }, 
  { "name": "get_license_state",
    "description": "This call returns the license state for the pool",
    "result": [ "(string -> string) map", "The pool's license state" ],
    "params": [ 
      { "type": "pool ref",
        "name": "self",
        "doc": "Reference to the pool" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin", "vm-operator", "read-only" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "clearwater",
        "description": "This call returns the license state for the pool" } ] }, 
  { "name": "disable_local_storage_caching",
    "description": "This call disables pool-wide local storage caching",
    "result": [ "void" ],
    "params": [ 
      { "type": "pool ref",
        "name": "self",
        "doc": "Reference to the pool" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "cowley",
        "description": "This call disables pool-wide local storage caching" } ] }, 
  { "name": "enable_local_storage_caching",
    "description": "This call attempts to enable pool-wide local storage caching",
    "result": [ "void" ],
    "params": [ 
      { "type": "pool ref",
        "name": "self",
        "doc": "Reference to the pool" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "cowley",
        "description": "This call attempts to enable pool-wide local storage caching" } ] }, 
  { "name": "test_archive_target",
    "description": "This call tests if a location is valid",
    "result": [ "string", "An XMLRPC result" ],
    "params": [ 
      { "type": "pool ref",
        "name": "self",
        "doc": "Reference to the pool" }, 
      { "type": "(string -> string) map",
        "name": "config",
        "doc": "Location config settings to test" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "cowley",
        "description": "This call tests if a location is valid" } ] }, 
  { "name": "set_vswitch_controller",
    "description": "Set the IP address of the vswitch controller.",
    "result": [ "void" ],
    "params": [ 
      { "type": "string",
        "name": "address",
        "doc": "IP address of the vswitch controller." } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "midnight-ride",
        "description": "Set the IP address of the vswitch controller." }, 
      { "transition": "extended",
        "release": "cowley",
        "description": "Allow to be set to the empty string (no controller is used)." } ] }, 
  { "name": "disable_redo_log",
    "description": "Disable the redo log if in use, unless HA is enabled.",
    "result": [ "void" ],
    "params": [  ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "midnight-ride",
        "description": "Disable the redo log if in use, unless HA is enabled." } ] }, 
  { "name": "enable_redo_log",
    "description": "Enable the redo log on the given SR and start using it, unless HA is enabled.",
    "result": [ "void" ],
    "params": [ 
      { "type": "SR ref",
        "name": "sr",
        "doc": "SR to hold the redo log." } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "midnight-ride",
        "description": "Enable the redo log on the given SR and start using it, unless HA is enabled." } ] }, 
  { "name": "certificate_sync",
    "description": "Sync SSL certificates from master to slaves.",
    "result": [ "void" ],
    "params": [  ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "george",
        "description": "Sync SSL certificates from master to slaves." } ] }, 
  { "name": "crl_list",
    "description": "List all installed SSL certificate revocation lists.",
    "result": [ "string set", "All installed CRLs" ],
    "params": [  ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "george",
        "description": "List all installed SSL certificate revocation lists." } ] }, 
  { "name": "crl_uninstall",
    "description": "Remove an SSL certificate revocation list.",
    "result": [ "void" ],
    "params": [ 
      { "type": "string",
        "name": "name",
        "doc": "The CRL name" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "george",
        "description": "Remove an SSL certificate revocation list." } ] }, 
  { "name": "crl_install",
    "description": "Install an SSL certificate revocation list, pool-wide.",
    "result": [ "void" ],
    "params": [ 
      { "type": "string",
        "name": "name",
        "doc": "A name to give the CRL" }, 
      { "type": "string",
        "name": "cert",
        "doc": "The CRL" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "george",
        "description": "Install an SSL certificate revocation list, pool-wide." } ] }, 
  { "name": "certificate_list",
    "description": "List all installed SSL certificates.",
    "result": [ "string set", "All installed certificates" ],
    "params": [  ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "george",
        "description": "List all installed SSL certificates." } ] }, 
  { "name": "certificate_uninstall",
    "description": "Remove an SSL certificate.",
    "result": [ "void" ],
    "params": [ 
      { "type": "string",
        "name": "name",
        "doc": "The certificate name" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "george",
        "description": "Remove an SSL certificate." } ] }, 
  { "name": "certificate_install",
    "description": "Install an SSL certificate pool-wide.",
    "result": [ "void" ],
    "params": [ 
      { "type": "string",
        "name": "name",
        "doc": "A name to give the certificate" }, 
      { "type": "string",
        "name": "cert",
        "doc": "The certificate" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "george",
        "description": "Install an SSL certificate pool-wide." } ] }, 
  { "name": "send_test_post",
    "description": "Send the given body to the given host and port, using HTTPS, and print the response.  This is used for debugging the SSL layer.",
    "result": [ "string", "The response" ],
    "params": [ 
      { "type": "string",
        "name": "host",
        "doc": "" }, 
      { "type": "int",
        "name": "port",
        "doc": "" }, 
      { "type": "string",
        "name": "body",
        "doc": "" } ],
    "errors": [  ],
    "roles": [ "pool-admin" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "george",
        "description": "Send the given body to the given host and port, using HTTPS, and print the response.  This is used for debugging the SSL layer." } ] }, 
  { "name": "retrieve_wlb_recommendations",
    "description": "Retrieves vm migrate recommendations for the pool from the workload balancing server",
    "result": [ "(VM ref -> string set) map", "The list of vm migration recommendations" ],
    "params": [  ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin", "vm-operator", "read-only" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "george",
        "description": "Retrieves vm migrate recommendations for the pool from the workload balancing server" } ] }, 
  { "name": "retrieve_wlb_configuration",
    "description": "Retrieves the pool optimization criteria from the workload balancing server",
    "result": [ "(string -> string) map", "The configuration used in optimizing this pool" ],
    "params": [  ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin", "vm-operator", "read-only" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "george",
        "description": "Retrieves the pool optimization criteria from the workload balancing server" } ] }, 
  { "name": "send_wlb_configuration",
    "description": "Sets the pool optimization criteria for the workload balancing server",
    "result": [ "void" ],
    "params": [ 
      { "type": "(string -> string) map",
        "name": "config",
        "doc": "The configuration to use in optimizing this pool" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "george",
        "description": "Sets the pool optimization criteria for the workload balancing server" } ] }, 
  { "name": "deconfigure_wlb",
    "description": "Permanently deconfigures workload balancing monitoring on this pool",
    "result": [ "void" ],
    "params": [  ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "george",
        "description": "Permanently deconfigures workload balancing monitoring on this pool" } ] }, 
  { "name": "initialize_wlb",
    "description": "Initializes workload balancing monitoring on this pool with the specified wlb server",
    "result": [ "void" ],
    "params": [ 
      { "type": "string",
        "name": "wlb_url",
        "doc": "The ip address and port to use when accessing the wlb server" }, 
      { "type": "string",
        "name": "wlb_username",
        "doc": "The username used to authenticate with the wlb server" }, 
      { "type": "string",
        "name": "wlb_password",
        "doc": "The password used to authenticate with the wlb server" }, 
      { "type": "string",
        "name": "xenserver_username",
        "doc": "The usernamed used by the wlb server to authenticate with the xenserver" }, 
      { "type": "string",
        "name": "xenserver_password",
        "doc": "The password used by the wlb server to authenticate with the xenserver" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "george",
        "description": "Initializes workload balancing monitoring on this pool with the specified wlb server" } ] }, 
  { "name": "detect_nonhomogeneous_external_auth",
    "description": "This call asynchronously detects if the external authentication configuration in any slave is different from that in the master and raises appropriate alerts",
    "result": [ "void" ],
    "params": [ 
      { "type": "pool ref",
        "name": "pool",
        "doc": "The pool where to detect non-homogeneous external authentication configuration" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "george",
        "description": "This call asynchronously detects if the external authentication configuration in any slave is different from that in the master and raises appropriate alerts" } ] }, 
  { "name": "disable_external_auth",
    "description": "This call disables external authentication on all the hosts of the pool",
    "result": [ "void" ],
    "params": [ 
      { "type": "pool ref",
        "name": "pool",
        "doc": "The pool whose external authentication should be disabled" }, 
      { "type": "(string -> string) map",
        "name": "config",
        "doc": "Optional parameters as a list of key-values containing the configuration data" } ],
    "errors": [  ],
    "roles": [ "pool-admin" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "george",
        "description": "This call disables external authentication on all the hosts of the pool" } ] }, 
  { "name": "enable_external_auth",
    "description": "This call enables external authentication on all the hosts of the pool",
    "result": [ "void" ],
    "params": [ 
      { "type": "pool ref",
        "name": "pool",
        "doc": "The pool whose external authentication should be enabled" }, 
      { "type": "(string -> string) map",
        "name": "config",
        "doc": "A list of key-values containing the configuration data" }, 
      { "type": "string",
        "name": "service_name",
        "doc": "The name of the service" }, 
      { "type": "string",
        "name": "auth_type",
        "doc": "The type of authentication (e.g. AD for Active Directory)" } ],
    "errors": [  ],
    "roles": [ "pool-admin" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "george",
        "description": "This call enables external authentication on all the hosts of the pool" } ] }, 
  { "name": "create_new_blob",
    "description": "Create a placeholder for a named binary blob of data that is associated with this pool",
    "result": [ "blob ref", "The reference of the blob, needed for populating its data" ],
    "params": [ 
      { "type": "pool ref",
        "name": "pool",
        "doc": "The pool" }, 
      { "type": "string",
        "name": "name",
        "doc": "The name associated with the blob" }, 
      { "type": "string",
        "name": "mime_type",
        "doc": "The mime type for the data. Empty string translates to application/octet-stream" }, 
      { "type": "bool",
        "name": "public",
        "doc": "True if the blob should be publicly available" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "Create a placeholder for a named binary blob of data that is associated with this pool" } ] }, 
  { "name": "set_ha_host_failures_to_tolerate",
    "description": "Set the maximum number of host failures to consider in the HA VM restart planner",
    "result": [ "void" ],
    "params": [ 
      { "type": "pool ref",
        "name": "self",
        "doc": "The pool" }, 
      { "type": "int",
        "name": "value",
        "doc": "New number of host failures to consider" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "Set the maximum number of host failures to consider in the HA VM restart planner" } ] }, 
  { "name": "ha_compute_vm_failover_plan",
    "description": "Return a VM failover plan assuming a given subset of hosts fail",
    "result": [ "(VM ref -> (string -> string) map) map", "VM failover plan: a map of VM to host to restart the host on" ],
    "params": [ 
      { "type": "host ref set",
        "name": "failed_hosts",
        "doc": "The set of hosts to assume have failed" }, 
      { "type": "VM ref set",
        "name": "failed_vms",
        "doc": "The set of VMs to restart" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "Return a VM failover plan assuming a given subset of hosts fail" } ] }, 
  { "name": "ha_compute_hypothetical_max_host_failures_to_tolerate",
    "description": "Returns the maximum number of host failures we could tolerate before we would be unable to restart the provided VMs",
    "result": [ "int", "maximum value for ha_host_failures_to_tolerate given provided configuration" ],
    "params": [ 
      { "type": "(VM ref -> string) map",
        "name": "configuration",
        "doc": "Map of protected VM reference to restart priority" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin", "vm-operator", "read-only" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "Returns the maximum number of host failures we could tolerate before we would be unable to restart the provided VMs" } ] }, 
  { "name": "ha_compute_max_host_failures_to_tolerate",
    "description": "Returns the maximum number of host failures we could tolerate before we would be unable to restart configured VMs",
    "result": [ "int", "maximum value for ha_host_failures_to_tolerate given current configuration" ],
    "params": [  ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "Returns the maximum number of host failures we could tolerate before we would be unable to restart configured VMs" } ] }, 
  { "name": "ha_failover_plan_exists",
    "description": "Returns true if a VM failover plan exists for up to 'n' host failures",
    "result": [ "bool", "true if a failover plan exists for the supplied number of host failures" ],
    "params": [ 
      { "type": "int",
        "name": "n",
        "doc": "The number of host failures to plan for" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "Returns true if a VM failover plan exists for up to 'n' host failures" } ] }, 
  { "name": "ha_prevent_restarts_for",
    "description": "When this call returns the VM restart logic will not run for the requested number of seconds. If the argument is zero then the restart thread is immediately unblocked",
    "result": [ "void" ],
    "params": [ 
      { "type": "int",
        "name": "seconds",
        "doc": "The number of seconds to block the restart thread for" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando-update-1",
        "description": "When this call returns the VM restart logic will not run for the requested number of seconds. If the argument is zero then the restart thread is immediately unblocked" } ] }, 
  { "name": "designate_new_master",
    "description": "Perform an orderly handover of the role of master to the referenced host.",
    "result": [ "void" ],
    "params": [ 
      { "type": "host ref",
        "name": "host",
        "doc": "The host who should become the new master" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "miami",
        "description": "Perform an orderly handover of the role of master to the referenced host." } ] }, 
  { "name": "sync_database",
    "description": "Forcibly synchronise the database now",
    "result": [ "void" ],
    "params": [  ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Forcibly synchronise the database now" } ] }, 
  { "name": "disable_ha",
    "description": "Turn off High Availability mode",
    "result": [ "void" ],
    "params": [  ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "miami",
        "description": "Turn off High Availability mode" } ] }, 
  { "name": "enable_ha",
    "description": "Turn on High Availability mode",
    "result": [ "void" ],
    "params": [ 
      { "type": "SR ref set",
        "name": "heartbeat_srs",
        "doc": "Set of SRs to use for storage heartbeating." }, 
      { "type": "(string -> string) map",
        "name": "configuration",
        "doc": "Detailed HA configuration to apply" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "miami",
        "description": "Turn on High Availability mode" } ] }, 
  { "name": "create_VLAN_from_PIF",
    "description": "Create a pool-wide VLAN by taking the PIF.",
    "result": [ "PIF ref set", "The references of the created PIF objects" ],
    "params": [ 
      { "type": "PIF ref",
        "name": "pif",
        "doc": "physical interface on any particular host, that identifies the PIF on which to create the (pool-wide) VLAN interface" }, 
      { "type": "network ref",
        "name": "network",
        "doc": "network to which this interface should be connected" }, 
      { "type": "int",
        "name": "VLAN",
        "doc": "VLAN tag for the new interface" } ],
    "errors": [ 
      { "name": "VLAN_TAG_INVALID",
        "doc": "You tried to create a VLAN, but the tag you gave was invalid -- it must be between 0 and 4094.  The parameter echoes the VLAN tag you gave." } ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Create a pool-wide VLAN by taking the PIF." } ] }, 
  { "name": "create_VLAN",
    "description": "Create PIFs, mapping a network to the same physical interface/VLAN on each host. This call is deprecated: use Pool.create_VLAN_from_PIF instead.",
    "result": [ "PIF ref set", "The references of the created PIF objects" ],
    "params": [ 
      { "type": "string",
        "name": "device",
        "doc": "physical interface on which to create the VLAN interface" }, 
      { "type": "network ref",
        "name": "network",
        "doc": "network to which this interface should be connected" }, 
      { "type": "int",
        "name": "VLAN",
        "doc": "VLAN tag for the new interface" } ],
    "errors": [ 
      { "name": "VLAN_TAG_INVALID",
        "doc": "You tried to create a VLAN, but the tag you gave was invalid -- it must be between 0 and 4094.  The parameter echoes the VLAN tag you gave." } ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Create PIFs, mapping a network to the same physical interface/VLAN on each host. This call is deprecated: use Pool.create_VLAN_from_PIF instead." } ] }, 
  { "name": "recover_slaves",
    "description": "Instruct a pool master, M, to try and contact its slaves and, if slaves are in emergency mode, reset their master address to M.",
    "result": [ "host ref set", "list of hosts whose master address were successfully reset" ],
    "params": [  ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Instruct a pool master, M, to try and contact its slaves and, if slaves are in emergency mode, reset their master address to M." } ] }, 
  { "name": "emergency_reset_master",
    "description": "Instruct a slave already in a pool that the master has changed",
    "result": [ "void" ],
    "params": [ 
      { "type": "string",
        "name": "master_address",
        "doc": "The hostname of the master" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Instruct a slave already in a pool that the master has changed" } ] }, 
  { "name": "emergency_transition_to_master",
    "description": "Instruct host that's currently a slave to transition to being master",
    "result": [ "void" ],
    "params": [  ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Instruct host that's currently a slave to transition to being master" } ] }, 
  { "name": "eject",
    "description": "Instruct a pool master to eject a host from the pool",
    "result": [ "void" ],
    "params": [ 
      { "type": "host ref",
        "name": "host",
        "doc": "The host to eject" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Instruct a pool master to eject a host from the pool" } ] }, 
  { "name": "join_force",
    "description": "Instruct host to join a new pool",
    "result": [ "void" ],
    "params": [ 
      { "type": "string",
        "name": "master_address",
        "doc": "The hostname of the master of the pool to join" }, 
      { "type": "string",
        "name": "master_username",
        "doc": "The username of the master (for initial authentication)" }, 
      { "type": "string",
        "name": "master_password",
        "doc": "The password for the master (for initial authentication)" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Instruct host to join a new pool" } ] }, 
  { "name": "join",
    "description": "Instruct host to join a new pool",
    "result": [ "void" ],
    "params": [ 
      { "type": "string",
        "name": "master_address",
        "doc": "The hostname of the master of the pool to join" }, 
      { "type": "string",
        "name": "master_username",
        "doc": "The username of the master (for initial authentication)" }, 
      { "type": "string",
        "name": "master_password",
        "doc": "The password for the master (for initial authentication)" } ],
    "errors": [ 
      { "name": "JOINING_HOST_CANNOT_CONTAIN_SHARED_SRS",
        "doc": "The host joining the pool cannot contain any shared storage." } ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Instruct host to join a new pool" } ] } ],
"enums": [  ],
"lifecycle": [ 
  { "transition": "published",
    "release": "rio",
    "description": "Pool-wide information" } ] }, { "name": "pool_patch",
"description": "Pool-wide patches",
"fields": [ 
  { "name": "uuid",
    "description": "Unique identifier/object reference",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Unique identifier/object reference" } ] }, 
  { "name": "label",
    "description": "a human-readable name",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "a human-readable name" } ],
    "default": "\"\"" }, 
  { "name": "description",
    "description": "a notes field containing human-readable description",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "a notes field containing human-readable description" } ],
    "default": "\"\"" }, 
  { "name": "version",
    "description": "Patch version number",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "miami",
        "description": "Patch version number" } ],
    "default": "\"\"" }, 
  { "name": "size",
    "description": "Size of the patch",
    "type": "int",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "miami",
        "description": "Size of the patch" } ],
    "default": "0" }, 
  { "name": "pool_applied",
    "description": "This patch should be applied across the entire pool",
    "type": "bool",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "miami",
        "description": "This patch should be applied across the entire pool" } ],
    "default": "false" }, 
  { "name": "host_patches",
    "description": "This hosts this patch is applied to.",
    "type": "host_patch ref set",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "miami",
        "description": "This hosts this patch is applied to." } ] }, 
  { "name": "after_apply_guidance",
    "description": "What the client should do after this patch has been applied.",
    "type": "enum after_apply_guidance set",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "miami",
        "description": "What the client should do after this patch has been applied." } ],
    "default": "{}" }, 
  { "name": "other_config",
    "description": "additional configuration",
    "type": "(string -> string) map",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "miami",
        "description": "additional configuration" } ],
    "default": "{}" } ],
"messages": [ 
  { "name": "clean_on_host",
    "description": "Removes the patch's files from the specified host",
    "result": [ "void" ],
    "params": [ 
      { "type": "pool_patch ref",
        "name": "self",
        "doc": "The patch to clean up" }, 
      { "type": "host ref",
        "name": "host",
        "doc": "The host on which to clean the patch" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "tampa",
        "description": "Removes the patch's files from the specified host" } ] }, 
  { "name": "destroy",
    "description": "Removes the patch's files from all hosts in the pool, and removes the database entries.  Only works on unapplied patches.",
    "result": [ "void" ],
    "params": [ 
      { "type": "pool_patch ref",
        "name": "self",
        "doc": "The patch to destroy" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "miami",
        "description": "Removes the patch's files from all hosts in the pool, and removes the database entries.  Only works on unapplied patches." } ] }, 
  { "name": "pool_clean",
    "description": "Removes the patch's files from all hosts in the pool, but does not remove the database entries",
    "result": [ "void" ],
    "params": [ 
      { "type": "pool_patch ref",
        "name": "self",
        "doc": "The patch to clean up" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "tampa",
        "description": "Removes the patch's files from all hosts in the pool, but does not remove the database entries" } ] }, 
  { "name": "clean",
    "description": "Removes the patch's files from the server",
    "result": [ "void" ],
    "params": [ 
      { "type": "pool_patch ref",
        "name": "self",
        "doc": "The patch to clean up" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "miami",
        "description": "Removes the patch's files from the server" } ] }, 
  { "name": "precheck",
    "description": "Execute the precheck stage of the selected patch on a host and return its output",
    "result": [ "string", "the output of the patch prechecks" ],
    "params": [ 
      { "type": "pool_patch ref",
        "name": "self",
        "doc": "The patch whose prechecks will be run" }, 
      { "type": "host ref",
        "name": "host",
        "doc": "The host to run the prechecks on" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "miami",
        "description": "Execute the precheck stage of the selected patch on a host and return its output" } ] }, 
  { "name": "pool_apply",
    "description": "Apply the selected patch to all hosts in the pool and return a map of host_ref -> patch output",
    "result": [ "void" ],
    "params": [ 
      { "type": "pool_patch ref",
        "name": "self",
        "doc": "The patch to apply" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "miami",
        "description": "Apply the selected patch to all hosts in the pool and return a map of host_ref -> patch output" } ] }, 
  { "name": "apply",
    "description": "Apply the selected patch to a host and return its output",
    "result": [ "string", "the output of the patch application process" ],
    "params": [ 
      { "type": "pool_patch ref",
        "name": "self",
        "doc": "The patch to apply" }, 
      { "type": "host ref",
        "name": "host",
        "doc": "The host to apply the patch too" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "miami",
        "description": "Apply the selected patch to a host and return its output" } ] } ],
"enums": [ 
  { "name": "after_apply_guidance",
    "values": [ 
      { "name": "restartHVM",
        "doc": "This patch requires HVM guests to be restarted once applied." }, 
      { "name": "restartPV",
        "doc": "This patch requires PV guests to be restarted once applied." }, 
      { "name": "restartHost",
        "doc": "This patch requires the host to be restarted once applied." }, 
      { "name": "restartXAPI",
        "doc": "This patch requires XAPI to be restarted once applied." } ] } ],
"lifecycle": [ 
  { "transition": "published",
    "release": "miami",
    "description": "Pool-wide patches" } ] }, { "name": "VM",
"description": "A virtual machine (or 'guest').",
"fields": [ 
  { "name": "uuid",
    "description": "Unique identifier/object reference",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Unique identifier/object reference" } ] }, 
  { "name": "allowed_operations",
    "description": "list of the operations allowed in this state. This list is advisory only and the server state may have changed by the time this field is read by a client.",
    "type": "enum vm_operations set",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "list of the operations allowed in this state. This list is advisory only and the server state may have changed by the time this field is read by a client." } ] }, 
  { "name": "current_operations",
    "description": "links each of the running tasks using this object (by reference) to a current_operation enum which describes the nature of the task.",
    "type": "(string -> enum vm_operations) map",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "links each of the running tasks using this object (by reference) to a current_operation enum which describes the nature of the task." } ] }, 
  { "name": "power_state",
    "description": "Current power state of the machine",
    "type": "enum vm_power_state",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Current power state of the machine" } ] }, 
  { "name": "label",
    "description": "a human-readable name",
    "type": "string",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "a human-readable name" } ],
    "default": "\"\"" }, 
  { "name": "description",
    "description": "a notes field containing human-readable description",
    "type": "string",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "a notes field containing human-readable description" } ],
    "default": "\"\"" }, 
  { "name": "user_version",
    "description": "a user version number for this machine",
    "type": "int",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "a user version number for this machine" } ] }, 
  { "name": "is_a_template",
    "description": "true if this is a template. Template VMs can never be started, they are used only for cloning other VMs",
    "type": "bool",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "true if this is a template. Template VMs can never be started, they are used only for cloning other VMs" } ] }, 
  { "name": "suspend_VDI",
    "description": "The VDI that a suspend image is stored on. (Only has meaning if VM is currently suspended)",
    "type": "VDI ref",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "The VDI that a suspend image is stored on. (Only has meaning if VM is currently suspended)" } ] }, 
  { "name": "resident_on",
    "description": "the host the VM is currently resident on",
    "type": "host ref",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "the host the VM is currently resident on" } ] }, 
  { "name": "affinity",
    "description": "a host which the VM has some affinity for (or NULL). This is used as a hint to the start call when it decides where to run the VM. Implementations are free to ignore this field.",
    "type": "host ref",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "a host which the VM has some affinity for (or NULL). This is used as a hint to the start call when it decides where to run the VM. Implementations are free to ignore this field." } ] }, 
  { "name": "overhead",
    "description": "Virtualization memory overhead (bytes).",
    "type": "int",
    "qualifier": "read only",
    "tag": "memory",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Virtualization memory overhead (bytes)." } ],
    "default": "0" }, 
  { "name": "target",
    "description": "Dynamically-set memory target (bytes). The value of this field indicates the current target for memory available to this VM.",
    "type": "int",
    "qualifier": "read only",
    "tag": "memory",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Dynamically-set memory target (bytes). The value of this field indicates the current target for memory available to this VM." }, 
      { "transition": "deprecated",
        "release": "midnight-ride",
        "description": "" } ],
    "default": "0" }, 
  { "name": "static_max",
    "description": "Statically-set (i.e. absolute) maximum (bytes). The value of this field at VM start time acts as a hard limit of the amount of memory a guest can use. New values only take effect on reboot.",
    "type": "int",
    "qualifier": "read only",
    "tag": "memory",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Statically-set (i.e. absolute) maximum (bytes). The value of this field at VM start time acts as a hard limit of the amount of memory a guest can use. New values only take effect on reboot." } ] }, 
  { "name": "dynamic_max",
    "description": "Dynamic maximum (bytes)",
    "type": "int",
    "qualifier": "read only",
    "tag": "memory",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Dynamic maximum (bytes)" } ] }, 
  { "name": "dynamic_min",
    "description": "Dynamic minimum (bytes)",
    "type": "int",
    "qualifier": "read only",
    "tag": "memory",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Dynamic minimum (bytes)" } ] }, 
  { "name": "static_min",
    "description": "Statically-set (i.e. absolute) mininum (bytes). The value of this field indicates the least amount of memory this VM can boot with without crashing.",
    "type": "int",
    "qualifier": "read only",
    "tag": "memory",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Statically-set (i.e. absolute) mininum (bytes). The value of this field indicates the least amount of memory this VM can boot with without crashing." } ] }, 
  { "name": "params",
    "description": "configuration parameters for the selected VCPU policy",
    "type": "(string -> string) map",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "configuration parameters for the selected VCPU policy" } ] }, 
  { "name": "max",
    "description": "Max number of VCPUs",
    "type": "int",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Max number of VCPUs" } ] }, 
  { "name": "at_startup",
    "description": "Boot number of VCPUs",
    "type": "int",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Boot number of VCPUs" } ] }, 
  { "name": "after_shutdown",
    "description": "action to take after the guest has shutdown itself",
    "type": "enum on_normal_exit",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "action to take after the guest has shutdown itself" } ] }, 
  { "name": "after_reboot",
    "description": "action to take after the guest has rebooted itself",
    "type": "enum on_normal_exit",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "action to take after the guest has rebooted itself" } ] }, 
  { "name": "after_crash",
    "description": "action to take if the guest crashes",
    "type": "enum on_crash_behaviour",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "action to take if the guest crashes" } ] }, 
  { "name": "consoles",
    "description": "virtual console devices",
    "type": "console ref set",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "virtual console devices" } ] }, 
  { "name": "VIFs",
    "description": "virtual network interfaces",
    "type": "VIF ref set",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "virtual network interfaces" } ] }, 
  { "name": "VBDs",
    "description": "virtual block devices",
    "type": "VBD ref set",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "virtual block devices" } ] }, 
  { "name": "crash_dumps",
    "description": "crash dumps associated with this VM",
    "type": "crashdump ref set",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "crash dumps associated with this VM" } ] }, 
  { "name": "VTPMs",
    "description": "virtual TPMs",
    "type": "VTPM ref set",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "virtual TPMs" } ] }, 
  { "name": "bootloader",
    "description": "name of or path to bootloader",
    "type": "string",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "name of or path to bootloader" } ] }, 
  { "name": "kernel",
    "description": "path to the kernel",
    "type": "string",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "path to the kernel" } ] }, 
  { "name": "ramdisk",
    "description": "path to the initrd",
    "type": "string",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "path to the initrd" } ] }, 
  { "name": "args",
    "description": "kernel command-line arguments",
    "type": "string",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "kernel command-line arguments" } ] }, 
  { "name": "bootloader_args",
    "description": "miscellaneous arguments for the bootloader",
    "type": "string",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "miscellaneous arguments for the bootloader" } ] }, 
  { "name": "legacy_args",
    "description": "to make Zurich guests boot",
    "type": "string",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "to make Zurich guests boot" } ] }, 
  { "name": "boot_policy",
    "description": "HVM boot policy",
    "type": "string",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "HVM boot policy" } ] }, 
  { "name": "boot_params",
    "description": "HVM boot params",
    "type": "(string -> string) map",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "HVM boot params" } ] }, 
  { "name": "shadow_multiplier",
    "description": "multiplier applied to the amount of shadow that will be made available to the guest",
    "type": "float",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "miami",
        "description": "multiplier applied to the amount of shadow that will be made available to the guest" } ],
    "default": "1." }, 
  { "name": "platform",
    "description": "platform-specific configuration",
    "type": "(string -> string) map",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "platform-specific configuration" } ] }, 
  { "name": "PCI_bus",
    "description": "PCI bus path for pass-through devices",
    "type": "string",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "PCI bus path for pass-through devices" }, 
      { "transition": "deprecated",
        "release": "boston",
        "description": "Field was never used" } ] }, 
  { "name": "other_config",
    "description": "additional configuration",
    "type": "(string -> string) map",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "additional configuration" } ] }, 
  { "name": "domid",
    "description": "domain ID (if available, -1 otherwise)",
    "type": "int",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "domain ID (if available, -1 otherwise)" } ] }, 
  { "name": "domarch",
    "description": "Domain architecture (if available, null string otherwise)",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Domain architecture (if available, null string otherwise)" } ] }, 
  { "name": "last_boot_CPU_flags",
    "description": "describes the CPU flags on which the VM was last booted",
    "type": "(string -> string) map",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "describes the CPU flags on which the VM was last booted" } ] }, 
  { "name": "is_control_domain",
    "description": "true if this is a control domain (domain 0 or a driver domain)",
    "type": "bool",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "true if this is a control domain (domain 0 or a driver domain)" } ] }, 
  { "name": "metrics",
    "description": "metrics associated with this VM",
    "type": "VM_metrics ref",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "metrics associated with this VM" } ] }, 
  { "name": "guest_metrics",
    "description": "metrics associated with the running guest",
    "type": "VM_guest_metrics ref",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "metrics associated with the running guest" } ] }, 
  { "name": "last_booted_record",
    "description": "marshalled value containing VM record at time of last boot, updated dynamically to reflect the runtime state of the domain",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "miami",
        "description": "marshalled value containing VM record at time of last boot, updated dynamically to reflect the runtime state of the domain" } ],
    "default": "\"\"" }, 
  { "name": "recommendations",
    "description": "An XML specification of recommended values and ranges for properties of this VM",
    "type": "string",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "An XML specification of recommended values and ranges for properties of this VM" } ] }, 
  { "name": "xenstore_data",
    "description": "data to be inserted into the xenstore tree (/local/domain/<domid>/vm-data) after the VM is created.",
    "type": "(string -> string) map",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "miami",
        "description": "data to be inserted into the xenstore tree (/local/domain/<domid>/vm-data) after the VM is created." } ],
    "default": "{}" }, 
  { "name": "ha_always_run",
    "description": "if true then the system will attempt to keep the VM running as much as possible.",
    "type": "bool",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "if true then the system will attempt to keep the VM running as much as possible." }, 
      { "transition": "deprecated",
        "release": "boston",
        "description": "" } ],
    "default": "false" }, 
  { "name": "ha_restart_priority",
    "description": "has possible values: \"best-effort\" meaning \"try to restart this VM if possible but don't consider the Pool to be overcommitted if this is not possible\"; \"restart\" meaning \"this VM should be restarted\"; \"\" meaning \"do not try to restart this VM\"",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "has possible values: \"best-effort\" meaning \"try to restart this VM if possible but don't consider the Pool to be overcommitted if this is not possible\"; \"restart\" meaning \"this VM should be restarted\"; \"\" meaning \"do not try to restart this VM\"" } ],
    "default": "\"\"" }, 
  { "name": "is_a_snapshot",
    "description": "true if this is a snapshot. Snapshotted VMs can never be started, they are used only for cloning other VMs",
    "type": "bool",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "true if this is a snapshot. Snapshotted VMs can never be started, they are used only for cloning other VMs" } ],
    "default": "false" }, 
  { "name": "snapshot_of",
    "description": "Ref pointing to the VM this snapshot is of.",
    "type": "VM ref",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "Ref pointing to the VM this snapshot is of." } ],
    "default": "Null" }, 
  { "name": "snapshots",
    "description": "List pointing to all the VM snapshots.",
    "type": "VM ref set",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "List pointing to all the VM snapshots." } ] }, 
  { "name": "snapshot_time",
    "description": "Date/time when this snapshot was created.",
    "type": "datetime",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "Date/time when this snapshot was created." } ],
    "default": "19700101T00:00:00Z" }, 
  { "name": "transportable_snapshot_id",
    "description": "Transportable ID of the snapshot VM",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "Transportable ID of the snapshot VM" } ],
    "default": "\"\"" }, 
  { "name": "blobs",
    "description": "Binary blobs associated with this VM",
    "type": "(string -> blob ref) map",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "Binary blobs associated with this VM" } ],
    "default": "{}" }, 
  { "name": "tags",
    "description": "user-specified tags for categorization purposes",
    "type": "string set",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "user-specified tags for categorization purposes" } ],
    "default": "{}" }, 
  { "name": "blocked_operations",
    "description": "List of operations which have been explicitly blocked and an error code",
    "type": "(enum vm_operations -> string) map",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "List of operations which have been explicitly blocked and an error code" } ],
    "default": "{}" }, 
  { "name": "snapshot_info",
    "description": "Human-readable information concerning this snapshot",
    "type": "(string -> string) map",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "midnight-ride",
        "description": "Human-readable information concerning this snapshot" } ],
    "default": "{}" }, 
  { "name": "snapshot_metadata",
    "description": "Encoded information about the VM's metadata this is a snapshot of",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "midnight-ride",
        "description": "Encoded information about the VM's metadata this is a snapshot of" } ],
    "default": "\"\"" }, 
  { "name": "parent",
    "description": "Ref pointing to the parent of this VM",
    "type": "VM ref",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "midnight-ride",
        "description": "Ref pointing to the parent of this VM" } ],
    "default": "Null" }, 
  { "name": "children",
    "description": "List pointing to all the children of this VM",
    "type": "VM ref set",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "midnight-ride",
        "description": "List pointing to all the children of this VM" } ] }, 
  { "name": "bios_strings",
    "description": "BIOS strings",
    "type": "(string -> string) map",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "midnight-ride",
        "description": "BIOS strings" } ],
    "default": "{}" }, 
  { "name": "protection_policy",
    "description": "Ref pointing to a protection policy for this VM",
    "type": "VMPP ref",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "cowley",
        "description": "" }, 
      { "transition": "deprecated",
        "release": "clearwater",
        "description": "The VMPR feature was removed" } ],
    "default": "OpaqueRef:NULL" }, 
  { "name": "is_snapshot_from_vmpp",
    "description": "true if this snapshot was created by the protection policy",
    "type": "bool",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "cowley",
        "description": "" }, 
      { "transition": "deprecated",
        "release": "clearwater",
        "description": "The VMPR feature was removed" } ],
    "default": "false" }, 
  { "name": "appliance",
    "description": "the appliance to which this VM belongs",
    "type": "VM_appliance ref",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "the appliance to which this VM belongs" } ],
    "default": "OpaqueRef:NULL" }, 
  { "name": "start_delay",
    "description": "The delay to wait before proceeding to the next order in the startup sequence (seconds)",
    "type": "int",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "boston",
        "description": "The delay to wait before proceeding to the next order in the startup sequence (seconds)" } ],
    "default": "0" }, 
  { "name": "shutdown_delay",
    "description": "The delay to wait before proceeding to the next order in the shutdown sequence (seconds)",
    "type": "int",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "boston",
        "description": "The delay to wait before proceeding to the next order in the shutdown sequence (seconds)" } ],
    "default": "0" }, 
  { "name": "order",
    "description": "The point in the startup or shutdown sequence at which this VM will be started",
    "type": "int",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "boston",
        "description": "The point in the startup or shutdown sequence at which this VM will be started" } ],
    "default": "0" }, 
  { "name": "VGPUs",
    "description": "Virtual GPUs",
    "type": "VGPU ref set",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "boston",
        "description": "" } ] }, 
  { "name": "attached_PCIs",
    "description": "Currently passed-through PCI devices",
    "type": "PCI ref set",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "boston",
        "description": "" } ] }, 
  { "name": "suspend_SR",
    "description": "The SR on which a suspend image is stored",
    "type": "SR ref",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "boston",
        "description": "The SR on which a suspend image is stored" } ],
    "default": "OpaqueRef:NULL" }, 
  { "name": "version",
    "description": "The number of times this VM has been recovered",
    "type": "int",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "boston",
        "description": "The number of times this VM has been recovered" } ],
    "default": "0" }, 
  { "name": "generation_id",
    "description": "Generation ID of the VM",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "clearwater",
        "description": "Generation ID of the VM" } ],
    "default": "\"0:0\"" } ],
"messages": [ 
  { "name": "call_plugin",
    "description": "Call a XenAPI plugin on this vm",
    "result": [ "string", "Result from the plugin" ],
    "params": [ 
      { "type": "VM ref",
        "name": "vm",
        "doc": "The vm" }, 
      { "type": "string",
        "name": "plugin",
        "doc": "The name of the plugin" }, 
      { "type": "string",
        "name": "fn",
        "doc": "The name of the function within the plugin" }, 
      { "type": "(string -> string) map",
        "name": "args",
        "doc": "Arguments for the function" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin", "vm-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "cream",
        "description": "Call a XenAPI plugin on this vm" } ] }, 
  { "name": "query_services",
    "description": "Query the system services advertised by this VM and register them. This can only be applied to a system domain.",
    "result": [ "(string -> string) map", "map of service type to name" ],
    "params": [ 
      { "type": "VM ref",
        "name": "self",
        "doc": "The VM" } ],
    "errors": [  ],
    "roles": [ "pool-admin" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "tampa",
        "description": "Query the system services advertised by this VM and register them. This can only be applied to a system domain." } ] }, 
  { "name": "set_appliance",
    "description": "Assign this VM to an appliance.",
    "result": [ "void" ],
    "params": [ 
      { "type": "VM ref",
        "name": "self",
        "doc": "The VM to assign to an appliance." }, 
      { "type": "VM_appliance ref",
        "name": "value",
        "doc": "The appliance to which this VM should be assigned." } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "boston",
        "description": "Assign this VM to an appliance." } ] }, 
  { "name": "import_convert",
    "description": "Import using a conversion service.",
    "result": [ "void" ],
    "params": [ 
      { "type": "string",
        "name": "type",
        "doc": "Type of the conversion" }, 
      { "type": "string",
        "name": "username",
        "doc": "Admin username on the host" }, 
      { "type": "string",
        "name": "password",
        "doc": "Password on the host" }, 
      { "type": "SR ref",
        "name": "sr",
        "doc": "The destination SR" }, 
      { "type": "(string -> string) map",
        "name": "remote_config",
        "doc": "Remote configuration options" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "tampa",
        "description": "Import using a conversion service." } ] }, 
  { "name": "recover",
    "description": "Recover the VM",
    "result": [ "void" ],
    "params": [ 
      { "type": "VM ref",
        "name": "self",
        "doc": "The VM to recover" }, 
      { "type": "session ref",
        "name": "session_to",
        "doc": "The session to which the VM is to be recovered." }, 
      { "type": "bool",
        "name": "force",
        "doc": "Whether the VM should replace newer versions of itself." } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin", "vm-operator", "read-only" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "boston",
        "description": "Recover the VM" } ] }, 
  { "name": "get_SRs_required_for_recovery",
    "description": "List all the SR's that are required for the VM to be recovered",
    "result": [ "SR ref set", "refs for SRs required to recover the VM" ],
    "params": [ 
      { "type": "VM ref",
        "name": "self",
        "doc": "The VM for which the SRs have to be recovered" }, 
      { "type": "session ref",
        "name": "session_to",
        "doc": "The session to which the SRs of the VM have to be recovered." } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin", "vm-operator", "read-only" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "creedence",
        "description": "List all the SR's that are required for the VM to be recovered" } ] }, 
  { "name": "assert_can_be_recovered",
    "description": "Assert whether all SRs required to recover this VM are available.",
    "result": [ "void" ],
    "params": [ 
      { "type": "VM ref",
        "name": "self",
        "doc": "The VM to recover" }, 
      { "type": "session ref",
        "name": "session_to",
        "doc": "The session to which the VM is to be recovered." } ],
    "errors": [ 
      { "name": "VM_IS_PART_OF_AN_APPLIANCE",
        "doc": "This operation is not allowed as the VM is part of an appliance." }, 
      { "name": "VM_REQUIRES_SR",
        "doc": "You attempted to run a VM on a host which doesn't have access to an SR needed by the VM. The VM has at least one VBD attached to a VDI in the SR." } ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin", "vm-operator", "read-only" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "boston",
        "description": "Assert whether all SRs required to recover this VM are available." } ] }, 
  { "name": "set_suspend_VDI",
    "description": "Set this VM's suspend VDI, which must be indentical to its current one",
    "result": [ "void" ],
    "params": [ 
      { "type": "VM ref",
        "name": "self",
        "doc": "The VM" }, 
      { "type": "VDI ref",
        "name": "value",
        "doc": "The suspend VDI uuid" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "boston",
        "description": "Set this VM's suspend VDI, which must be indentical to its current one" } ] }, 
  { "name": "set_order",
    "description": "Set this VM's boot order",
    "result": [ "void" ],
    "params": [ 
      { "type": "VM ref",
        "name": "self",
        "doc": "The VM" }, 
      { "type": "int",
        "name": "value",
        "doc": "This VM's boot order" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "boston",
        "description": "Set this VM's boot order" } ] }, 
  { "name": "set_shutdown_delay",
    "description": "Set this VM's shutdown delay in seconds",
    "result": [ "void" ],
    "params": [ 
      { "type": "VM ref",
        "name": "self",
        "doc": "The VM" }, 
      { "type": "int",
        "name": "value",
        "doc": "This VM's shutdown delay in seconds" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "boston",
        "description": "Set this VM's shutdown delay in seconds" } ] }, 
  { "name": "set_start_delay",
    "description": "Set this VM's start delay in seconds",
    "result": [ "void" ],
    "params": [ 
      { "type": "VM ref",
        "name": "self",
        "doc": "The VM" }, 
      { "type": "int",
        "name": "value",
        "doc": "This VM's start delay in seconds" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "boston",
        "description": "Set this VM's start delay in seconds" } ] }, 
  { "name": "set_protection_policy",
    "description": "Set the value of the protection_policy field",
    "result": [ "void" ],
    "params": [ 
      { "type": "VM ref",
        "name": "self",
        "doc": "The VM" }, 
      { "type": "VMPP ref",
        "name": "value",
        "doc": "The value" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "Set the value of the protection_policy field" } ] }, 
  { "name": "copy_bios_strings",
    "description": "Copy the BIOS strings from the given host to this VM",
    "result": [ "void" ],
    "params": [ 
      { "type": "VM ref",
        "name": "vm",
        "doc": "The VM to modify" }, 
      { "type": "host ref",
        "name": "host",
        "doc": "The host to copy the BIOS strings from" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "midnight-ride",
        "description": "Copy the BIOS strings from the given host to this VM" } ] }, 
  { "name": "retrieve_wlb_recommendations",
    "description": "Returns mapping of hosts to ratings, indicating the suitability of starting the VM at that location according to wlb. Rating is replaced with an error if the VM cannot boot there.",
    "result": [ "(host ref -> string set) map", "The potential hosts and their corresponding recommendations or errors" ],
    "params": [ 
      { "type": "VM ref",
        "name": "vm",
        "doc": "The VM" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin", "vm-operator", "read-only" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "george",
        "description": "Returns mapping of hosts to ratings, indicating the suitability of starting the VM at that location according to wlb. Rating is replaced with an error if the VM cannot boot there." } ] }, 
  { "name": "assert_agile",
    "description": "Returns an error if the VM is not considered agile e.g. because it is tied to a resource local to a host",
    "result": [ "void" ],
    "params": [ 
      { "type": "VM ref",
        "name": "self",
        "doc": "The VM" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin", "vm-operator", "read-only" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "Returns an error if the VM is not considered agile e.g. because it is tied to a resource local to a host" } ] }, 
  { "name": "create_new_blob",
    "description": "Create a placeholder for a named binary blob of data that is associated with this VM",
    "result": [ "blob ref", "The reference of the blob, needed for populating its data" ],
    "params": [ 
      { "type": "VM ref",
        "name": "vm",
        "doc": "The VM" }, 
      { "type": "string",
        "name": "name",
        "doc": "The name associated with the blob" }, 
      { "type": "string",
        "name": "mime_type",
        "doc": "The mime type for the data. Empty string translates to application/octet-stream" }, 
      { "type": "bool",
        "name": "public",
        "doc": "True if the blob should be publicly available" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "Create a placeholder for a named binary blob of data that is associated with this VM" } ] }, 
  { "name": "assert_can_boot_here",
    "description": "Returns an error if the VM could not boot on this host for some reason",
    "result": [ "void" ],
    "params": [ 
      { "type": "VM ref",
        "name": "self",
        "doc": "The VM" }, 
      { "type": "host ref",
        "name": "host",
        "doc": "The host" } ],
    "errors": [ 
      { "name": "HOST_NOT_ENOUGH_FREE_MEMORY",
        "doc": "Not enough host memory is available to perform this operation" }, 
      { "name": "VM_REQUIRES_SR",
        "doc": "You attempted to run a VM on a host which doesn't have access to an SR needed by the VM. The VM has at least one VBD attached to a VDI in the SR." }, 
      { "name": "VM_HOST_INCOMPATIBLE_VERSION",
        "doc": "This VM operation cannot be performed on an older-versioned host during an upgrade." } ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin", "vm-operator", "read-only" ],
    "tag": "memory",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Returns an error if the VM could not boot on this host for some reason" } ] }, 
  { "name": "get_possible_hosts",
    "description": "Return the list of hosts on which this VM may run.",
    "result": [ "host ref set", "The possible hosts" ],
    "params": [ 
      { "type": "VM ref",
        "name": "vm",
        "doc": "The VM" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin", "vm-operator", "read-only" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Return the list of hosts on which this VM may run." } ] }, 
  { "name": "get_allowed_VIF_devices",
    "description": "Returns a list of the allowed values that a VIF device field can take",
    "result": [ "string set", "The allowed values" ],
    "params": [ 
      { "type": "VM ref",
        "name": "vm",
        "doc": "The VM to query" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin", "vm-operator", "read-only" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Returns a list of the allowed values that a VIF device field can take" } ] }, 
  { "name": "get_allowed_VBD_devices",
    "description": "Returns a list of the allowed values that a VBD device field can take",
    "result": [ "string set", "The allowed values" ],
    "params": [ 
      { "type": "VM ref",
        "name": "vm",
        "doc": "The VM to query" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin", "vm-operator", "read-only" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Returns a list of the allowed values that a VBD device field can take" } ] }, 
  { "name": "update_allowed_operations",
    "description": "Recomputes the list of acceptable operations",
    "result": [ "void" ],
    "params": [ 
      { "type": "VM ref",
        "name": "self",
        "doc": "reference to the object" } ],
    "errors": [  ],
    "roles": [ "pool-admin" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Recomputes the list of acceptable operations" } ] }, 
  { "name": "assert_operation_valid",
    "description": "Check to see whether this operation is acceptable in the current state of the system, raising an error if the operation is invalid for some reason",
    "result": [ "void" ],
    "params": [ 
      { "type": "VM ref",
        "name": "self",
        "doc": "reference to the object" }, 
      { "type": "enum vm_operations",
        "name": "op",
        "doc": "proposed operation" } ],
    "errors": [  ],
    "roles": [ "pool-admin" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Check to see whether this operation is acceptable in the current state of the system, raising an error if the operation is invalid for some reason" } ] }, 
  { "name": "forget_data_source_archives",
    "description": "Forget the recorded statistics related to the specified data source",
    "result": [ "void" ],
    "params": [ 
      { "type": "VM ref",
        "name": "self",
        "doc": "The VM" }, 
      { "type": "string",
        "name": "data_source",
        "doc": "The data source whose archives are to be forgotten" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "Forget the recorded statistics related to the specified data source" } ] }, 
  { "name": "query_data_source",
    "description": "Query the latest value of the specified data source",
    "result": [ "float", "The latest value, averaged over the last 5 seconds" ],
    "params": [ 
      { "type": "VM ref",
        "name": "self",
        "doc": "The VM" }, 
      { "type": "string",
        "name": "data_source",
        "doc": "The data source to query" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin", "vm-operator", "read-only" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "Query the latest value of the specified data source" } ] }, 
  { "name": "record_data_source",
    "description": "Start recording the specified data source",
    "result": [ "void" ],
    "params": [ 
      { "type": "VM ref",
        "name": "self",
        "doc": "The VM" }, 
      { "type": "string",
        "name": "data_source",
        "doc": "The data source to record" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "Start recording the specified data source" } ] }, 
  { "name": "get_data_sources",
    "description": "",
    "result": [ "data_source record set", "A set of data sources" ],
    "params": [ 
      { "type": "VM ref",
        "name": "self",
        "doc": "The VM to interrogate" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin", "vm-operator", "read-only" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "" } ] }, 
  { "name": "get_boot_record",
    "description": "Returns a record describing the VM's dynamic state, initialised when the VM boots and updated to reflect runtime configuration changes e.g. CPU hotplug",
    "result": [ "VM record", "A record describing the VM" ],
    "params": [ 
      { "type": "VM ref",
        "name": "self",
        "doc": "The VM whose boot-time state to return" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin", "vm-operator", "read-only" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Returns a record describing the VM's dynamic state, initialised when the VM boots and updated to reflect runtime configuration changes e.g. CPU hotplug" } ] }, 
  { "name": "assert_can_migrate",
    "description": "Assert whether a VM can be migrated to the specified destination.",
    "result": [ "void" ],
    "params": [ 
      { "type": "VM ref",
        "name": "vm",
        "doc": "The VM" }, 
      { "type": "(string -> string) map",
        "name": "dest",
        "doc": "The result of a VM.migrate_receive call." }, 
      { "type": "bool",
        "name": "live",
        "doc": "Live migration" }, 
      { "type": "(VDI ref -> SR ref) map",
        "name": "vdi_map",
        "doc": "Map of source VDI to destination SR" }, 
      { "type": "(VIF ref -> network ref) map",
        "name": "vif_map",
        "doc": "Map of source VIF to destination network" }, 
      { "type": "(string -> string) map",
        "name": "options",
        "doc": "Other parameters" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "tampa",
        "description": "Assert whether a VM can be migrated to the specified destination." } ] }, 
  { "name": "migrate_send",
    "description": "Migrate the VM to another host.  This can only be called when the specified VM is in the Running state.",
    "result": [ "void" ],
    "params": [ 
      { "type": "VM ref",
        "name": "vm",
        "doc": "The VM" }, 
      { "type": "(string -> string) map",
        "name": "dest",
        "doc": "The result of a Host.migrate_receive call." }, 
      { "type": "bool",
        "name": "live",
        "doc": "Live migration" }, 
      { "type": "(VDI ref -> SR ref) map",
        "name": "vdi_map",
        "doc": "Map of source VDI to destination SR" }, 
      { "type": "(VIF ref -> network ref) map",
        "name": "vif_map",
        "doc": "Map of source VIF to destination network" }, 
      { "type": "(string -> string) map",
        "name": "options",
        "doc": "Other parameters" } ],
    "errors": [ 
      { "name": "VM_BAD_POWER_STATE",
        "doc": "You attempted an operation on a VM that was not in an appropriate power state at the time; for example, you attempted to start a VM that was already running.  The parameters returned are the VM's handle, and the expected and actual VM state at the time of the call." } ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "tampa",
        "description": "Migrate the VM to another host.  This can only be called when the specified VM is in the Running state." } ] }, 
  { "name": "maximise_memory",
    "description": "Returns the maximum amount of guest memory which will fit, together with overheads, in the supplied amount of physical memory. If 'exact' is true then an exact calculation is performed using the VM's current settings. If 'exact' is false then a more conservative approximation is used",
    "result": [ "int", "The maximum possible static-max" ],
    "params": [ 
      { "type": "VM ref",
        "name": "self",
        "doc": "The VM" }, 
      { "type": "int",
        "name": "total",
        "doc": "Total amount of physical RAM to fit within" }, 
      { "type": "bool",
        "name": "approximate",
        "doc": "If false the limit is calculated with the guest's current exact configuration. Otherwise a more approximate calculation is performed" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin", "vm-operator", "read-only" ],
    "tag": "memory",
    "lifecycle": [ 
      { "transition": "published",
        "release": "miami",
        "description": "Returns the maximum amount of guest memory which will fit, together with overheads, in the supplied amount of physical memory. If 'exact' is true then an exact calculation is performed using the VM's current settings. If 'exact' is false then a more conservative approximation is used" } ] }, 
  { "name": "send_trigger",
    "description": "Send the named trigger to this VM.  This can only be called when the specified VM is in the Running state.",
    "result": [ "void" ],
    "params": [ 
      { "type": "VM ref",
        "name": "vm",
        "doc": "The VM" }, 
      { "type": "string",
        "name": "trigger",
        "doc": "The trigger to send" } ],
    "errors": [ 
      { "name": "VM_BAD_POWER_STATE",
        "doc": "You attempted an operation on a VM that was not in an appropriate power state at the time; for example, you attempted to start a VM that was already running.  The parameters returned are the VM's handle, and the expected and actual VM state at the time of the call." } ],
    "roles": [ "pool-admin" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Send the named trigger to this VM.  This can only be called when the specified VM is in the Running state." } ] }, 
  { "name": "send_sysrq",
    "description": "Send the given key as a sysrq to this VM.  The key is specified as a single character (a String of length 1).  This can only be called when the specified VM is in the Running state.",
    "result": [ "void" ],
    "params": [ 
      { "type": "VM ref",
        "name": "vm",
        "doc": "The VM" }, 
      { "type": "string",
        "name": "key",
        "doc": "The key to send" } ],
    "errors": [ 
      { "name": "VM_BAD_POWER_STATE",
        "doc": "You attempted an operation on a VM that was not in an appropriate power state at the time; for example, you attempted to start a VM that was already running.  The parameters returned are the VM's handle, and the expected and actual VM state at the time of the call." } ],
    "roles": [ "pool-admin" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Send the given key as a sysrq to this VM.  The key is specified as a single character (a String of length 1).  This can only be called when the specified VM is in the Running state." } ] }, 
  { "name": "set_VCPUs_at_startup",
    "description": "Set the number of startup VCPUs for a halted VM",
    "result": [ "void" ],
    "params": [ 
      { "type": "VM ref",
        "name": "self",
        "doc": "The VM" }, 
      { "type": "int",
        "name": "value",
        "doc": "The new maximum number of VCPUs" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "midnight-ride",
        "description": "Set the number of startup VCPUs for a halted VM" } ] }, 
  { "name": "set_VCPUs_max",
    "description": "Set the maximum number of VCPUs for a halted VM",
    "result": [ "void" ],
    "params": [ 
      { "type": "VM ref",
        "name": "self",
        "doc": "The VM" }, 
      { "type": "int",
        "name": "value",
        "doc": "The new maximum number of VCPUs" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "midnight-ride",
        "description": "Set the maximum number of VCPUs for a halted VM" } ] }, 
  { "name": "set_shadow_multiplier_live",
    "description": "Set the shadow memory multiplier on a running VM",
    "result": [ "void" ],
    "params": [ 
      { "type": "VM ref",
        "name": "self",
        "doc": "The VM" }, 
      { "type": "float",
        "name": "multiplier",
        "doc": "The new shadow memory multiplier to set" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Set the shadow memory multiplier on a running VM" } ] }, 
  { "name": "set_HVM_shadow_multiplier",
    "description": "Set the shadow memory multiplier on a halted VM",
    "result": [ "void" ],
    "params": [ 
      { "type": "VM ref",
        "name": "self",
        "doc": "The VM" }, 
      { "type": "float",
        "name": "value",
        "doc": "The new shadow memory multiplier to set" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "midnight-ride",
        "description": "Set the shadow memory multiplier on a halted VM" } ] }, 
  { "name": "get_cooperative",
    "description": "Return true if the VM is currently 'co-operative' i.e. is expected to reach a balloon target and actually has done",
    "result": [ "bool", "true if the VM is currently 'co-operative'; false otherwise" ],
    "params": [ 
      { "type": "VM ref",
        "name": "self",
        "doc": "The VM" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin", "vm-operator", "read-only" ],
    "tag": "memory",
    "lifecycle": [ 
      { "transition": "published",
        "release": "midnight-ride",
        "description": "Return true if the VM is currently 'co-operative' i.e. is expected to reach a balloon target and actually has done" }, 
      { "transition": "deprecated",
        "release": "tampa",
        "description": "" } ] }, 
  { "name": "wait_memory_target_live",
    "description": "Wait for a running VM to reach its current memory target",
    "result": [ "void" ],
    "params": [ 
      { "type": "VM ref",
        "name": "self",
        "doc": "The VM" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin", "vm-operator", "read-only" ],
    "tag": "memory",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "Wait for a running VM to reach its current memory target" }, 
      { "transition": "deprecated",
        "release": "midnight-ride",
        "description": "" } ] }, 
  { "name": "set_memory_target_live",
    "description": "Set the memory target for a running VM",
    "result": [ "void" ],
    "params": [ 
      { "type": "VM ref",
        "name": "self",
        "doc": "The VM" }, 
      { "type": "int",
        "name": "target",
        "doc": "The target in bytes" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin" ],
    "tag": "memory",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Set the memory target for a running VM" }, 
      { "transition": "deprecated",
        "release": "midnight-ride",
        "description": "" } ] }, 
  { "name": "set_memory_limits",
    "description": "Set the memory limits of this VM.",
    "result": [ "void" ],
    "params": [ 
      { "type": "VM ref",
        "name": "self",
        "doc": "The VM" }, 
      { "type": "int",
        "name": "static_min",
        "doc": "The new value of memory_static_min." }, 
      { "type": "int",
        "name": "static_max",
        "doc": "The new value of memory_static_max." }, 
      { "type": "int",
        "name": "dynamic_min",
        "doc": "The new value of memory_dynamic_min." }, 
      { "type": "int",
        "name": "dynamic_max",
        "doc": "The new value of memory_dynamic_max." } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin" ],
    "tag": "memory",
    "lifecycle": [ 
      { "transition": "published",
        "release": "midnight-ride",
        "description": "Set the memory limits of this VM." } ] }, 
  { "name": "set_memory_static_range",
    "description": "Set the static (ie boot-time) range of virtual memory that the VM is allowed to use.",
    "result": [ "void" ],
    "params": [ 
      { "type": "VM ref",
        "name": "self",
        "doc": "The VM" }, 
      { "type": "int",
        "name": "min",
        "doc": "The new minimum value" }, 
      { "type": "int",
        "name": "max",
        "doc": "The new maximum value" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin" ],
    "tag": "memory",
    "lifecycle": [ 
      { "transition": "published",
        "release": "midnight-ride",
        "description": "Set the static (ie boot-time) range of virtual memory that the VM is allowed to use." } ] }, 
  { "name": "set_memory_static_min",
    "description": "Set the value of the memory_static_min field",
    "result": [ "void" ],
    "params": [ 
      { "type": "VM ref",
        "name": "self",
        "doc": "The VM to modify" }, 
      { "type": "int",
        "name": "value",
        "doc": "The new value of memory_static_min" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin" ],
    "tag": "memory",
    "lifecycle": [ 
      { "transition": "published",
        "release": "midnight-ride",
        "description": "Set the value of the memory_static_min field" } ] }, 
  { "name": "set_memory_static_max",
    "description": "Set the value of the memory_static_max field",
    "result": [ "void" ],
    "params": [ 
      { "type": "VM ref",
        "name": "self",
        "doc": "The VM to modify" }, 
      { "type": "int",
        "name": "value",
        "doc": "The new value of memory_static_max" } ],
    "errors": [ 
      { "name": "HA_OPERATION_WOULD_BREAK_FAILOVER_PLAN",
        "doc": "This operation cannot be performed because it would invalidate VM failover planning such that the system would be unable to guarantee to restart protected VMs after a Host failure." } ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin" ],
    "tag": "memory",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "Set the value of the memory_static_max field" } ] }, 
  { "name": "set_memory_dynamic_range",
    "description": "Set the minimum and maximum amounts of physical memory the VM is allowed to use.",
    "result": [ "void" ],
    "params": [ 
      { "type": "VM ref",
        "name": "self",
        "doc": "The VM" }, 
      { "type": "int",
        "name": "min",
        "doc": "The new minimum value" }, 
      { "type": "int",
        "name": "max",
        "doc": "The new maximum value" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin" ],
    "tag": "memory",
    "lifecycle": [ 
      { "transition": "published",
        "release": "midnight-ride",
        "description": "Set the minimum and maximum amounts of physical memory the VM is allowed to use." } ] }, 
  { "name": "set_memory_dynamic_min",
    "description": "Set the value of the memory_dynamic_min field",
    "result": [ "void" ],
    "params": [ 
      { "type": "VM ref",
        "name": "self",
        "doc": "The VM to modify" }, 
      { "type": "int",
        "name": "value",
        "doc": "The new value of memory_dynamic_min" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin" ],
    "tag": "memory",
    "lifecycle": [ 
      { "transition": "published",
        "release": "midnight-ride",
        "description": "Set the value of the memory_dynamic_min field" } ] }, 
  { "name": "set_memory_dynamic_max",
    "description": "Set the value of the memory_dynamic_max field",
    "result": [ "void" ],
    "params": [ 
      { "type": "VM ref",
        "name": "self",
        "doc": "The VM to modify" }, 
      { "type": "int",
        "name": "value",
        "doc": "The new value of memory_dynamic_max" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin" ],
    "tag": "memory",
    "lifecycle": [ 
      { "transition": "published",
        "release": "midnight-ride",
        "description": "Set the value of the memory_dynamic_max field" } ] }, 
  { "name": "compute_memory_overhead",
    "description": "Computes the virtualization memory overhead of a VM.",
    "result": [ "int", "the virtualization memory overhead of the VM." ],
    "params": [ 
      { "type": "VM ref",
        "name": "vm",
        "doc": "The VM for which to compute the memory overhead" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin", "vm-operator", "read-only" ],
    "tag": "memory",
    "lifecycle": [ 
      { "transition": "published",
        "release": "midnight-ride",
        "description": "Computes the virtualization memory overhead of a VM." } ] }, 
  { "name": "set_ha_always_run",
    "description": "Set the value of the ha_always_run",
    "result": [ "void" ],
    "params": [ 
      { "type": "VM ref",
        "name": "self",
        "doc": "The VM" }, 
      { "type": "bool",
        "name": "value",
        "doc": "The value" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "Set the value of the ha_always_run" }, 
      { "transition": "deprecated",
        "release": "boston",
        "description": "" } ] }, 
  { "name": "set_ha_restart_priority",
    "description": "Set the value of the ha_restart_priority field",
    "result": [ "void" ],
    "params": [ 
      { "type": "VM ref",
        "name": "self",
        "doc": "The VM" }, 
      { "type": "string",
        "name": "value",
        "doc": "The value" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "Set the value of the ha_restart_priority field" } ] }, 
  { "name": "add_to_VCPUs_params_live",
    "description": "Add the given key-value pair to VM.VCPUs_params, and apply that value on the running VM",
    "result": [ "void" ],
    "params": [ 
      { "type": "VM ref",
        "name": "self",
        "doc": "The VM" }, 
      { "type": "string",
        "name": "key",
        "doc": "The key" }, 
      { "type": "string",
        "name": "value",
        "doc": "The value" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Add the given key-value pair to VM.VCPUs_params, and apply that value on the running VM" } ] }, 
  { "name": "set_VCPUs_number_live",
    "description": "Set the number of VCPUs for a running VM",
    "result": [ "void" ],
    "params": [ 
      { "type": "VM ref",
        "name": "self",
        "doc": "The VM" }, 
      { "type": "int",
        "name": "nvcpu",
        "doc": "The number of VCPUs" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Set the number of VCPUs for a running VM" } ] }, 
  { "name": "pool_migrate",
    "description": "Migrate a VM to another Host. This can only be called when the specified VM is in the Running state.",
    "result": [ "void" ],
    "params": [ 
      { "type": "VM ref",
        "name": "vm",
        "doc": "The VM to migrate" }, 
      { "type": "host ref",
        "name": "host",
        "doc": "The target host" }, 
      { "type": "(string -> string) map",
        "name": "options",
        "doc": "Extra configuration operations" } ],
    "errors": [ 
      { "name": "VM_BAD_POWER_STATE",
        "doc": "You attempted an operation on a VM that was not in an appropriate power state at the time; for example, you attempted to start a VM that was already running.  The parameters returned are the VM's handle, and the expected and actual VM state at the time of the call." }, 
      { "name": "OTHER_OPERATION_IN_PROGRESS",
        "doc": "Another operation involving the object is currently in progress" }, 
      { "name": "VM_IS_TEMPLATE",
        "doc": "The operation attempted is not valid for a template VM" }, 
      { "name": "OPERATION_NOT_ALLOWED",
        "doc": "You attempted an operation that was not allowed." }, 
      { "name": "VM_MIGRATE_FAILED",
        "doc": "An error occurred during the migration process." } ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Migrate a VM to another Host. This can only be called when the specified VM is in the Running state." } ] }, 
  { "name": "resume_on",
    "description": "Awaken the specified VM and resume it on a particular Host.  This can only be called when the specified VM is in the Suspended state.",
    "result": [ "void" ],
    "params": [ 
      { "type": "VM ref",
        "name": "vm",
        "doc": "The VM to resume" }, 
      { "type": "host ref",
        "name": "host",
        "doc": "The Host on which to resume the VM" }, 
      { "type": "bool",
        "name": "start_paused",
        "doc": "Resume VM in paused state if set to true." }, 
      { "type": "bool",
        "name": "force",
        "doc": "Attempt to force the VM to resume. If this flag is false then the VM may fail pre-resume safety checks (e.g. if the CPU the VM was running on looks substantially different to the current one)" } ],
    "errors": [ 
      { "name": "VM_BAD_POWER_STATE",
        "doc": "You attempted an operation on a VM that was not in an appropriate power state at the time; for example, you attempted to start a VM that was already running.  The parameters returned are the VM's handle, and the expected and actual VM state at the time of the call." }, 
      { "name": "OPERATION_NOT_ALLOWED",
        "doc": "You attempted an operation that was not allowed." }, 
      { "name": "VM_IS_TEMPLATE",
        "doc": "The operation attempted is not valid for a template VM" } ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Awaken the specified VM and resume it on a particular Host.  This can only be called when the specified VM is in the Suspended state." } ] }, 
  { "name": "resume",
    "description": "Awaken the specified VM and resume it.  This can only be called when the specified VM is in the Suspended state.",
    "result": [ "void" ],
    "params": [ 
      { "type": "VM ref",
        "name": "vm",
        "doc": "The VM to resume" }, 
      { "type": "bool",
        "name": "start_paused",
        "doc": "Resume VM in paused state if set to true." }, 
      { "type": "bool",
        "name": "force",
        "doc": "Attempt to force the VM to resume. If this flag is false then the VM may fail pre-resume safety checks (e.g. if the CPU the VM was running on looks substantially different to the current one)" } ],
    "errors": [ 
      { "name": "VM_BAD_POWER_STATE",
        "doc": "You attempted an operation on a VM that was not in an appropriate power state at the time; for example, you attempted to start a VM that was already running.  The parameters returned are the VM's handle, and the expected and actual VM state at the time of the call." }, 
      { "name": "OPERATION_NOT_ALLOWED",
        "doc": "You attempted an operation that was not allowed." }, 
      { "name": "VM_IS_TEMPLATE",
        "doc": "The operation attempted is not valid for a template VM" } ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin", "vm-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Awaken the specified VM and resume it.  This can only be called when the specified VM is in the Suspended state." } ] }, 
  { "name": "suspend",
    "description": "Suspend the specified VM to disk.  This can only be called when the specified VM is in the Running state.",
    "result": [ "void" ],
    "params": [ 
      { "type": "VM ref",
        "name": "vm",
        "doc": "The VM to suspend" } ],
    "errors": [ 
      { "name": "VM_BAD_POWER_STATE",
        "doc": "You attempted an operation on a VM that was not in an appropriate power state at the time; for example, you attempted to start a VM that was already running.  The parameters returned are the VM's handle, and the expected and actual VM state at the time of the call." }, 
      { "name": "OTHER_OPERATION_IN_PROGRESS",
        "doc": "Another operation involving the object is currently in progress" }, 
      { "name": "OPERATION_NOT_ALLOWED",
        "doc": "You attempted an operation that was not allowed." }, 
      { "name": "VM_IS_TEMPLATE",
        "doc": "The operation attempted is not valid for a template VM" } ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin", "vm-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Suspend the specified VM to disk.  This can only be called when the specified VM is in the Running state." } ] }, 
  { "name": "hard_reboot",
    "description": "Stop executing the specified VM without attempting a clean shutdown and immediately restart the VM.",
    "result": [ "void" ],
    "params": [ 
      { "type": "VM ref",
        "name": "vm",
        "doc": "The VM to reboot" } ],
    "errors": [ 
      { "name": "VM_BAD_POWER_STATE",
        "doc": "You attempted an operation on a VM that was not in an appropriate power state at the time; for example, you attempted to start a VM that was already running.  The parameters returned are the VM's handle, and the expected and actual VM state at the time of the call." }, 
      { "name": "OTHER_OPERATION_IN_PROGRESS",
        "doc": "Another operation involving the object is currently in progress" }, 
      { "name": "OPERATION_NOT_ALLOWED",
        "doc": "You attempted an operation that was not allowed." }, 
      { "name": "VM_IS_TEMPLATE",
        "doc": "The operation attempted is not valid for a template VM" } ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin", "vm-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Stop executing the specified VM without attempting a clean shutdown and immediately restart the VM." } ] }, 
  { "name": "power_state_reset",
    "description": "Reset the power-state of the VM to halted in the database only. (Used to recover from slave failures in pooling scenarios by resetting the power-states of VMs running on dead slaves to halted.) This is a potentially dangerous operation; use with care.",
    "result": [ "void" ],
    "params": [ 
      { "type": "VM ref",
        "name": "vm",
        "doc": "The VM to reset" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Reset the power-state of the VM to halted in the database only. (Used to recover from slave failures in pooling scenarios by resetting the power-states of VMs running on dead slaves to halted.) This is a potentially dangerous operation; use with care." } ] }, 
  { "name": "hard_shutdown",
    "description": "Stop executing the specified VM without attempting a clean shutdown.",
    "result": [ "void" ],
    "params": [ 
      { "type": "VM ref",
        "name": "vm",
        "doc": "The VM to destroy" } ],
    "errors": [ 
      { "name": "VM_BAD_POWER_STATE",
        "doc": "You attempted an operation on a VM that was not in an appropriate power state at the time; for example, you attempted to start a VM that was already running.  The parameters returned are the VM's handle, and the expected and actual VM state at the time of the call." }, 
      { "name": "OTHER_OPERATION_IN_PROGRESS",
        "doc": "Another operation involving the object is currently in progress" }, 
      { "name": "OPERATION_NOT_ALLOWED",
        "doc": "You attempted an operation that was not allowed." }, 
      { "name": "VM_IS_TEMPLATE",
        "doc": "The operation attempted is not valid for a template VM" } ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin", "vm-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Stop executing the specified VM without attempting a clean shutdown." } ] }, 
  { "name": "clean_reboot",
    "description": "Attempt to cleanly shutdown the specified VM (Note: this may not be supported---e.g. if a guest agent is not installed). This can only be called when the specified VM is in the Running state.",
    "result": [ "void" ],
    "params": [ 
      { "type": "VM ref",
        "name": "vm",
        "doc": "The VM to shutdown" } ],
    "errors": [ 
      { "name": "VM_BAD_POWER_STATE",
        "doc": "You attempted an operation on a VM that was not in an appropriate power state at the time; for example, you attempted to start a VM that was already running.  The parameters returned are the VM's handle, and the expected and actual VM state at the time of the call." }, 
      { "name": "OTHER_OPERATION_IN_PROGRESS",
        "doc": "Another operation involving the object is currently in progress" }, 
      { "name": "OPERATION_NOT_ALLOWED",
        "doc": "You attempted an operation that was not allowed." }, 
      { "name": "VM_IS_TEMPLATE",
        "doc": "The operation attempted is not valid for a template VM" } ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin", "vm-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Attempt to cleanly shutdown the specified VM (Note: this may not be supported---e.g. if a guest agent is not installed). This can only be called when the specified VM is in the Running state." } ] }, 
  { "name": "shutdown",
    "description": "Attempts to first clean shutdown a VM and if it should fail then perform a hard shutdown on it.",
    "result": [ "void" ],
    "params": [ 
      { "type": "VM ref",
        "name": "vm",
        "doc": "The VM to shutdown" } ],
    "errors": [ 
      { "name": "VM_BAD_POWER_STATE",
        "doc": "You attempted an operation on a VM that was not in an appropriate power state at the time; for example, you attempted to start a VM that was already running.  The parameters returned are the VM's handle, and the expected and actual VM state at the time of the call." }, 
      { "name": "OTHER_OPERATION_IN_PROGRESS",
        "doc": "Another operation involving the object is currently in progress" }, 
      { "name": "OPERATION_NOT_ALLOWED",
        "doc": "You attempted an operation that was not allowed." }, 
      { "name": "VM_IS_TEMPLATE",
        "doc": "The operation attempted is not valid for a template VM" } ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin", "vm-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "clearwater",
        "description": "Attempts to first clean shutdown a VM and if it should fail then perform a hard shutdown on it." } ] }, 
  { "name": "clean_shutdown",
    "description": "Attempt to cleanly shutdown the specified VM. (Note: this may not be supported---e.g. if a guest agent is not installed). This can only be called when the specified VM is in the Running state.",
    "result": [ "void" ],
    "params": [ 
      { "type": "VM ref",
        "name": "vm",
        "doc": "The VM to shutdown" } ],
    "errors": [ 
      { "name": "VM_BAD_POWER_STATE",
        "doc": "You attempted an operation on a VM that was not in an appropriate power state at the time; for example, you attempted to start a VM that was already running.  The parameters returned are the VM's handle, and the expected and actual VM state at the time of the call." }, 
      { "name": "OTHER_OPERATION_IN_PROGRESS",
        "doc": "Another operation involving the object is currently in progress" }, 
      { "name": "OPERATION_NOT_ALLOWED",
        "doc": "You attempted an operation that was not allowed." }, 
      { "name": "VM_IS_TEMPLATE",
        "doc": "The operation attempted is not valid for a template VM" } ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin", "vm-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Attempt to cleanly shutdown the specified VM. (Note: this may not be supported---e.g. if a guest agent is not installed). This can only be called when the specified VM is in the Running state." } ] }, 
  { "name": "unpause",
    "description": "Resume the specified VM. This can only be called when the specified VM is in the Paused state.",
    "result": [ "void" ],
    "params": [ 
      { "type": "VM ref",
        "name": "vm",
        "doc": "The VM to unpause" } ],
    "errors": [ 
      { "name": "VM_BAD_POWER_STATE",
        "doc": "You attempted an operation on a VM that was not in an appropriate power state at the time; for example, you attempted to start a VM that was already running.  The parameters returned are the VM's handle, and the expected and actual VM state at the time of the call." }, 
      { "name": "OPERATION_NOT_ALLOWED",
        "doc": "You attempted an operation that was not allowed." }, 
      { "name": "VM_IS_TEMPLATE",
        "doc": "The operation attempted is not valid for a template VM" } ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin", "vm-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Resume the specified VM. This can only be called when the specified VM is in the Paused state." } ] }, 
  { "name": "pause",
    "description": "Pause the specified VM. This can only be called when the specified VM is in the Running state.",
    "result": [ "void" ],
    "params": [ 
      { "type": "VM ref",
        "name": "vm",
        "doc": "The VM to pause" } ],
    "errors": [ 
      { "name": "VM_BAD_POWER_STATE",
        "doc": "You attempted an operation on a VM that was not in an appropriate power state at the time; for example, you attempted to start a VM that was already running.  The parameters returned are the VM's handle, and the expected and actual VM state at the time of the call." }, 
      { "name": "OTHER_OPERATION_IN_PROGRESS",
        "doc": "Another operation involving the object is currently in progress" }, 
      { "name": "OPERATION_NOT_ALLOWED",
        "doc": "You attempted an operation that was not allowed." }, 
      { "name": "VM_IS_TEMPLATE",
        "doc": "The operation attempted is not valid for a template VM" } ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin", "vm-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Pause the specified VM. This can only be called when the specified VM is in the Running state." } ] }, 
  { "name": "start_on",
    "description": "Start the specified VM on a particular host.  This function can only be called with the VM is in the Halted State.",
    "result": [ "void" ],
    "params": [ 
      { "type": "VM ref",
        "name": "vm",
        "doc": "The VM to start" }, 
      { "type": "host ref",
        "name": "host",
        "doc": "The Host on which to start the VM" }, 
      { "type": "bool",
        "name": "start_paused",
        "doc": "Instantiate VM in paused state if set to true." }, 
      { "type": "bool",
        "name": "force",
        "doc": "Attempt to force the VM to start. If this flag is false then the VM may fail pre-boot safety checks (e.g. if the CPU the VM last booted on looks substantially different to the current one)" } ],
    "errors": [ 
      { "name": "VM_BAD_POWER_STATE",
        "doc": "You attempted an operation on a VM that was not in an appropriate power state at the time; for example, you attempted to start a VM that was already running.  The parameters returned are the VM's handle, and the expected and actual VM state at the time of the call." }, 
      { "name": "VM_IS_TEMPLATE",
        "doc": "The operation attempted is not valid for a template VM" }, 
      { "name": "OTHER_OPERATION_IN_PROGRESS",
        "doc": "Another operation involving the object is currently in progress" }, 
      { "name": "OPERATION_NOT_ALLOWED",
        "doc": "You attempted an operation that was not allowed." }, 
      { "name": "BOOTLOADER_FAILED",
        "doc": "The bootloader returned an error" }, 
      { "name": "UNKNOWN_BOOTLOADER",
        "doc": "The requested bootloader is unknown" } ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Start the specified VM on a particular host.  This function can only be called with the VM is in the Halted State." } ] }, 
  { "name": "start",
    "description": "Start the specified VM.  This function can only be called with the VM is in the Halted State.",
    "result": [ "void" ],
    "params": [ 
      { "type": "VM ref",
        "name": "vm",
        "doc": "The VM to start" }, 
      { "type": "bool",
        "name": "start_paused",
        "doc": "Instantiate VM in paused state if set to true." }, 
      { "type": "bool",
        "name": "force",
        "doc": "Attempt to force the VM to start. If this flag is false then the VM may fail pre-boot safety checks (e.g. if the CPU the VM last booted on looks substantially different to the current one)" } ],
    "errors": [ 
      { "name": "VM_BAD_POWER_STATE",
        "doc": "You attempted an operation on a VM that was not in an appropriate power state at the time; for example, you attempted to start a VM that was already running.  The parameters returned are the VM's handle, and the expected and actual VM state at the time of the call." }, 
      { "name": "VM_HVM_REQUIRED",
        "doc": "HVM is required for this operation" }, 
      { "name": "VM_IS_TEMPLATE",
        "doc": "The operation attempted is not valid for a template VM" }, 
      { "name": "OTHER_OPERATION_IN_PROGRESS",
        "doc": "Another operation involving the object is currently in progress" }, 
      { "name": "OPERATION_NOT_ALLOWED",
        "doc": "You attempted an operation that was not allowed." }, 
      { "name": "BOOTLOADER_FAILED",
        "doc": "The bootloader returned an error" }, 
      { "name": "UNKNOWN_BOOTLOADER",
        "doc": "The requested bootloader is unknown" }, 
      { "name": "NO_HOSTS_AVAILABLE",
        "doc": "There were no hosts available to complete the specified operation." }, 
      { "name": "LICENCE_RESTRICTION",
        "doc": "This operation is not allowed under your license.  Please contact your support representative." } ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin", "vm-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Start the specified VM.  This function can only be called with the VM is in the Halted State." } ] }, 
  { "name": "provision",
    "description": "Inspects the disk configuration contained within the VM's other_config, creates VDIs and VBDs and then executes any applicable post-install script.",
    "result": [ "void" ],
    "params": [ 
      { "type": "VM ref",
        "name": "vm",
        "doc": "The VM to be provisioned" } ],
    "errors": [ 
      { "name": "VM_BAD_POWER_STATE",
        "doc": "You attempted an operation on a VM that was not in an appropriate power state at the time; for example, you attempted to start a VM that was already running.  The parameters returned are the VM's handle, and the expected and actual VM state at the time of the call." }, 
      { "name": "SR_FULL",
        "doc": "The SR is full. Requested new size exceeds the maximum size" }, 
      { "name": "OPERATION_NOT_ALLOWED",
        "doc": "You attempted an operation that was not allowed." } ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Inspects the disk configuration contained within the VM's other_config, creates VDIs and VBDs and then executes any applicable post-install script." } ] }, 
  { "name": "checkpoint",
    "description": "Checkpoints the specified VM, making a new VM. Checkpoint automatically exploits the capabilities of the underlying storage repository in which the VM's disk images are stored (e.g. Copy on Write) and saves the memory image as well.",
    "result": [ "VM ref", "The reference of the newly created VM." ],
    "params": [ 
      { "type": "VM ref",
        "name": "vm",
        "doc": "The VM to be checkpointed" }, 
      { "type": "string",
        "name": "new_name",
        "doc": "The name of the checkpointed VM" } ],
    "errors": [ 
      { "name": "VM_BAD_POWER_STATE",
        "doc": "You attempted an operation on a VM that was not in an appropriate power state at the time; for example, you attempted to start a VM that was already running.  The parameters returned are the VM's handle, and the expected and actual VM state at the time of the call." }, 
      { "name": "SR_FULL",
        "doc": "The SR is full. Requested new size exceeds the maximum size" }, 
      { "name": "OPERATION_NOT_ALLOWED",
        "doc": "You attempted an operation that was not allowed." }, 
      { "name": "VM_CHECKPOINT_SUSPEND_FAILED",
        "doc": "An error occured while saving the memory image of the specified virtual machine" }, 
      { "name": "VM_CHECKPOINT_RESUME_FAILED",
        "doc": "An error occured while restoring the memory image of the specified virtual machine" } ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "midnight-ride",
        "description": "Checkpoints the specified VM, making a new VM. Checkpoint automatically exploits the capabilities of the underlying storage repository in which the VM's disk images are stored (e.g. Copy on Write) and saves the memory image as well." } ] }, 
  { "name": "revert",
    "description": "Reverts the specified VM to a previous state.",
    "result": [ "void" ],
    "params": [ 
      { "type": "VM ref",
        "name": "snapshot",
        "doc": "The snapshotted state that we revert to" } ],
    "errors": [ 
      { "name": "VM_BAD_POWER_STATE",
        "doc": "You attempted an operation on a VM that was not in an appropriate power state at the time; for example, you attempted to start a VM that was already running.  The parameters returned are the VM's handle, and the expected and actual VM state at the time of the call." }, 
      { "name": "OPERATION_NOT_ALLOWED",
        "doc": "You attempted an operation that was not allowed." }, 
      { "name": "SR_FULL",
        "doc": "The SR is full. Requested new size exceeds the maximum size" }, 
      { "name": "VM_REVERT_FAILED",
        "doc": "An error occured while reverting the specified virtual machine to the specified snapshot" } ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin" ],
    "tag": "snapshots",
    "lifecycle": [ 
      { "transition": "published",
        "release": "midnight-ride",
        "description": "Reverts the specified VM to a previous state." } ] }, 
  { "name": "copy",
    "description": "Copied the specified VM, making a new VM. Unlike clone, copy does not exploits the capabilities of the underlying storage repository in which the VM's disk images are stored. Instead, copy guarantees that the disk images of the newly created VM will be 'full disks' - i.e. not part of a CoW chain.  This function can only be called when the VM is in the Halted State.",
    "result": [ "VM ref", "The reference of the newly created VM." ],
    "params": [ 
      { "type": "VM ref",
        "name": "vm",
        "doc": "The VM to be copied" }, 
      { "type": "string",
        "name": "new_name",
        "doc": "The name of the copied VM" }, 
      { "type": "SR ref",
        "name": "sr",
        "doc": "An SR to copy all the VM's disks into (if an invalid reference then it uses the existing SRs)" } ],
    "errors": [ 
      { "name": "VM_BAD_POWER_STATE",
        "doc": "You attempted an operation on a VM that was not in an appropriate power state at the time; for example, you attempted to start a VM that was already running.  The parameters returned are the VM's handle, and the expected and actual VM state at the time of the call." }, 
      { "name": "SR_FULL",
        "doc": "The SR is full. Requested new size exceeds the maximum size" }, 
      { "name": "OPERATION_NOT_ALLOWED",
        "doc": "You attempted an operation that was not allowed." } ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Copies a VM to an SR. There must be a host that can see both the source and destination SRs simultaneously" }, 
      { "transition": "extended",
        "release": "cowley",
        "description": "The copy can now be performed between any two SRs." } ] }, 
  { "name": "clone",
    "description": "Clones the specified VM, making a new VM. Clone automatically exploits the capabilities of the underlying storage repository in which the VM's disk images are stored (e.g. Copy on Write).   This function can only be called when the VM is in the Halted State.",
    "result": [ "VM ref", "The reference of the newly created VM." ],
    "params": [ 
      { "type": "VM ref",
        "name": "vm",
        "doc": "The VM to be cloned" }, 
      { "type": "string",
        "name": "new_name",
        "doc": "The name of the cloned VM" } ],
    "errors": [ 
      { "name": "VM_BAD_POWER_STATE",
        "doc": "You attempted an operation on a VM that was not in an appropriate power state at the time; for example, you attempted to start a VM that was already running.  The parameters returned are the VM's handle, and the expected and actual VM state at the time of the call." }, 
      { "name": "SR_FULL",
        "doc": "The SR is full. Requested new size exceeds the maximum size" }, 
      { "name": "OPERATION_NOT_ALLOWED",
        "doc": "You attempted an operation that was not allowed." } ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Clones the specified VM, making a new VM. Clone automatically exploits the capabilities of the underlying storage repository in which the VM's disk images are stored (e.g. Copy on Write).   This function can only be called when the VM is in the Halted State." } ] }, 
  { "name": "snapshot_with_quiesce",
    "description": "Snapshots the specified VM with quiesce, making a new VM. Snapshot automatically exploits the capabilities of the underlying storage repository in which the VM's disk images are stored (e.g. Copy on Write).",
    "result": [ "VM ref", "The reference of the newly created VM." ],
    "params": [ 
      { "type": "VM ref",
        "name": "vm",
        "doc": "The VM to be snapshotted" }, 
      { "type": "string",
        "name": "new_name",
        "doc": "The name of the snapshotted VM" } ],
    "errors": [ 
      { "name": "VM_BAD_POWER_STATE",
        "doc": "You attempted an operation on a VM that was not in an appropriate power state at the time; for example, you attempted to start a VM that was already running.  The parameters returned are the VM's handle, and the expected and actual VM state at the time of the call." }, 
      { "name": "SR_FULL",
        "doc": "The SR is full. Requested new size exceeds the maximum size" }, 
      { "name": "OPERATION_NOT_ALLOWED",
        "doc": "You attempted an operation that was not allowed." }, 
      { "name": "VM_SNAPSHOT_WITH_QUIESCE_FAILED",
        "doc": "The quiesced-snapshot operation failed for an unexpected reason" }, 
      { "name": "VM_SNAPSHOT_WITH_QUIESCE_TIMEOUT",
        "doc": "The VSS plug-in has timed out" }, 
      { "name": "VM_SNAPSHOT_WITH_QUIESCE_PLUGIN_DEOS_NOT_RESPOND",
        "doc": "The VSS plug-in cannot be contacted" }, 
      { "name": "VM_SNAPSHOT_WITH_QUIESCE_NOT_SUPPORTED",
        "doc": "The VSS plug-in is not installed on this virtual machine" } ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "Snapshots the specified VM with quiesce, making a new VM. Snapshot automatically exploits the capabilities of the underlying storage repository in which the VM's disk images are stored (e.g. Copy on Write)." } ] }, 
  { "name": "snapshot",
    "description": "Snapshots the specified VM, making a new VM. Snapshot automatically exploits the capabilities of the underlying storage repository in which the VM's disk images are stored (e.g. Copy on Write).",
    "result": [ "VM ref", "The reference of the newly created VM." ],
    "params": [ 
      { "type": "VM ref",
        "name": "vm",
        "doc": "The VM to be snapshotted" }, 
      { "type": "string",
        "name": "new_name",
        "doc": "The name of the snapshotted VM" } ],
    "errors": [ 
      { "name": "VM_BAD_POWER_STATE",
        "doc": "You attempted an operation on a VM that was not in an appropriate power state at the time; for example, you attempted to start a VM that was already running.  The parameters returned are the VM's handle, and the expected and actual VM state at the time of the call." }, 
      { "name": "SR_FULL",
        "doc": "The SR is full. Requested new size exceeds the maximum size" }, 
      { "name": "OPERATION_NOT_ALLOWED",
        "doc": "You attempted an operation that was not allowed." } ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin" ],
    "tag": "snapshots",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "Snapshots the specified VM, making a new VM. Snapshot automatically exploits the capabilities of the underlying storage repository in which the VM's disk images are stored (e.g. Copy on Write)." } ] } ],
"enums": [ 
  { "name": "on_crash_behaviour",
    "values": [ 
      { "name": "destroy",
        "doc": "destroy the VM state" }, 
      { "name": "coredump_and_destroy",
        "doc": "record a coredump and then destroy the VM state" }, 
      { "name": "restart",
        "doc": "restart the VM" }, 
      { "name": "coredump_and_restart",
        "doc": "record a coredump and then restart the VM" }, 
      { "name": "preserve",
        "doc": "leave the crashed VM paused" }, 
      { "name": "rename_restart",
        "doc": "rename the crashed VM and start a new copy" } ] }, 
  { "name": "on_normal_exit",
    "values": [ 
      { "name": "destroy",
        "doc": "destroy the VM state" }, 
      { "name": "restart",
        "doc": "restart the VM" } ] }, 
  { "name": "vm_power_state",
    "values": [ 
      { "name": "Halted",
        "doc": "VM is offline and not using any resources" }, 
      { "name": "Paused",
        "doc": "All resources have been allocated but the VM itself is paused and its vCPUs are not running" }, 
      { "name": "Running",
        "doc": "Running" }, 
      { "name": "Suspended",
        "doc": "VM state has been saved to disk and it is nolonger running. Note that disks remain in-use while the VM is suspended." } ] }, 
  { "name": "vm_operations",
    "values": [ 
      { "name": "snapshot",
        "doc": "refers to the operation \"snapshot\"" }, 
      { "name": "clone",
        "doc": "refers to the operation \"clone\"" }, 
      { "name": "copy",
        "doc": "refers to the operation \"copy\"" }, 
      { "name": "create_template",
        "doc": "refers to the operation \"create_template\"" }, 
      { "name": "revert",
        "doc": "refers to the operation \"revert\"" }, 
      { "name": "checkpoint",
        "doc": "refers to the operation \"checkpoint\"" }, 
      { "name": "snapshot_with_quiesce",
        "doc": "refers to the operation \"snapshot_with_quiesce\"" }, 
      { "name": "provision",
        "doc": "refers to the operation \"provision\"" }, 
      { "name": "start",
        "doc": "refers to the operation \"start\"" }, 
      { "name": "start_on",
        "doc": "refers to the operation \"start_on\"" }, 
      { "name": "pause",
        "doc": "refers to the operation \"pause\"" }, 
      { "name": "unpause",
        "doc": "refers to the operation \"unpause\"" }, 
      { "name": "clean_shutdown",
        "doc": "refers to the operation \"clean_shutdown\"" }, 
      { "name": "clean_reboot",
        "doc": "refers to the operation \"clean_reboot\"" }, 
      { "name": "hard_shutdown",
        "doc": "refers to the operation \"hard_shutdown\"" }, 
      { "name": "power_state_reset",
        "doc": "refers to the operation \"power_state_reset\"" }, 
      { "name": "hard_reboot",
        "doc": "refers to the operation \"hard_reboot\"" }, 
      { "name": "suspend",
        "doc": "refers to the operation \"suspend\"" }, 
      { "name": "csvm",
        "doc": "refers to the operation \"csvm\"" }, 
      { "name": "resume",
        "doc": "refers to the operation \"resume\"" }, 
      { "name": "resume_on",
        "doc": "refers to the operation \"resume_on\"" }, 
      { "name": "pool_migrate",
        "doc": "refers to the operation \"pool_migrate\"" }, 
      { "name": "migrate_send",
        "doc": "refers to the operation \"migrate_send\"" }, 
      { "name": "get_boot_record",
        "doc": "refers to the operation \"get_boot_record\"" }, 
      { "name": "send_sysrq",
        "doc": "refers to the operation \"send_sysrq\"" }, 
      { "name": "send_trigger",
        "doc": "refers to the operation \"send_trigger\"" }, 
      { "name": "query_services",
        "doc": "refers to the operation \"query_services\"" }, 
      { "name": "shutdown",
        "doc": "refers to the operation \"shutdown\"" }, 
      { "name": "call_plugin",
        "doc": "refers to the operation \"call_plugin\"" }, 
      { "name": "changing_memory_live",
        "doc": "Changing the memory settings" }, 
      { "name": "awaiting_memory_live",
        "doc": "Waiting for the memory settings to change" }, 
      { "name": "changing_dynamic_range",
        "doc": "Changing the memory dynamic range" }, 
      { "name": "changing_static_range",
        "doc": "Changing the memory static range" }, 
      { "name": "changing_memory_limits",
        "doc": "Changing the memory limits" }, 
      { "name": "changing_shadow_memory",
        "doc": "Changing the shadow memory for a halted VM." }, 
      { "name": "changing_shadow_memory_live",
        "doc": "Changing the shadow memory for a running VM." }, 
      { "name": "changing_VCPUs",
        "doc": "Changing VCPU settings for a halted VM." }, 
      { "name": "changing_VCPUs_live",
        "doc": "Changing VCPU settings for a running VM." }, 
      { "name": "assert_operation_valid",
        "doc": "" }, 
      { "name": "data_source_op",
        "doc": "Add, remove, query or list data sources" }, 
      { "name": "update_allowed_operations",
        "doc": "" }, 
      { "name": "make_into_template",
        "doc": "Turning this VM into a template" }, 
      { "name": "import",
        "doc": "importing a VM from a network stream" }, 
      { "name": "export",
        "doc": "exporting a VM to a network stream" }, 
      { "name": "metadata_export",
        "doc": "exporting VM metadata to a network stream" }, 
      { "name": "reverting",
        "doc": "Reverting the VM to a previous snapshotted state" }, 
      { "name": "destroy",
        "doc": "refers to the act of uninstalling the VM" } ] } ],
"lifecycle": [ 
  { "transition": "published",
    "release": "rio",
    "description": "A virtual machine (or 'guest')." } ] }, { "name": "VM_metrics",
"description": "The metrics associated with a VM",
"fields": [ 
  { "name": "uuid",
    "description": "Unique identifier/object reference",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Unique identifier/object reference" } ] }, 
  { "name": "actual",
    "description": "Guest's actual memory (bytes)",
    "type": "int",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Guest's actual memory (bytes)" } ] }, 
  { "name": "number",
    "description": "Current number of VCPUs",
    "type": "int",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Current number of VCPUs" } ] }, 
  { "name": "utilisation",
    "description": "Utilisation for all of guest's current VCPUs",
    "type": "(int -> float) map",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Utilisation for all of guest's current VCPUs" } ] }, 
  { "name": "CPU",
    "description": "VCPU to PCPU map",
    "type": "(int -> int) map",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "VCPU to PCPU map" } ] }, 
  { "name": "params",
    "description": "The live equivalent to VM.VCPUs_params",
    "type": "(string -> string) map",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "The live equivalent to VM.VCPUs_params" } ] }, 
  { "name": "flags",
    "description": "CPU flags (blocked,online,running)",
    "type": "(int -> string set) map",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "CPU flags (blocked,online,running)" } ] }, 
  { "name": "state",
    "description": "The state of the guest, eg blocked, dying etc",
    "type": "string set",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "The state of the guest, eg blocked, dying etc" } ] }, 
  { "name": "start_time",
    "description": "Time at which this VM was last booted",
    "type": "datetime",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Time at which this VM was last booted" } ] }, 
  { "name": "install_time",
    "description": "Time at which the VM was installed",
    "type": "datetime",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Time at which the VM was installed" } ] }, 
  { "name": "last_updated",
    "description": "Time at which this information was last updated",
    "type": "datetime",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Time at which this information was last updated" } ] }, 
  { "name": "other_config",
    "description": "additional configuration",
    "type": "(string -> string) map",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "additional configuration" } ],
    "default": "{}" } ],
"messages": [  ],
"enums": [  ],
"lifecycle": [ 
  { "transition": "published",
    "release": "rio",
    "description": "The metrics associated with a VM" } ] }, { "name": "VM_guest_metrics",
"description": "The metrics reported by the guest (as opposed to inferred from outside)",
"fields": [ 
  { "name": "uuid",
    "description": "Unique identifier/object reference",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Unique identifier/object reference" } ] }, 
  { "name": "os_version",
    "description": "version of the OS",
    "type": "(string -> string) map",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "version of the OS" } ] }, 
  { "name": "PV_drivers_version",
    "description": "version of the PV drivers",
    "type": "(string -> string) map",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "version of the PV drivers" } ] }, 
  { "name": "PV_drivers_up_to_date",
    "description": "true if the PV drivers appear to be up to date",
    "type": "bool",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "true if the PV drivers appear to be up to date" } ] }, 
  { "name": "memory",
    "description": "This field exists but has no data. Use the memory and memory_internal_free RRD data-sources instead.",
    "type": "(string -> string) map",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "free/used/total" }, 
      { "transition": "removed",
        "release": "george",
        "description": "Disabled in favour of the RRDs, to improve scalability" } ] }, 
  { "name": "disks",
    "description": "This field exists but has no data.",
    "type": "(string -> string) map",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Disk configuration/free space" }, 
      { "transition": "removed",
        "release": "orlando",
        "description": "No data" } ] }, 
  { "name": "networks",
    "description": "network configuration",
    "type": "(string -> string) map",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "network configuration" } ] }, 
  { "name": "other",
    "description": "anything else",
    "type": "(string -> string) map",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "anything else" } ] }, 
  { "name": "last_updated",
    "description": "Time at which this information was last updated",
    "type": "datetime",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Time at which this information was last updated" } ] }, 
  { "name": "other_config",
    "description": "additional configuration",
    "type": "(string -> string) map",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "additional configuration" } ],
    "default": "{}" }, 
  { "name": "live",
    "description": "True if the guest is sending heartbeat messages via the guest agent",
    "type": "bool",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "True if the guest is sending heartbeat messages via the guest agent" } ],
    "default": "false" } ],
"messages": [  ],
"enums": [  ],
"lifecycle": [ 
  { "transition": "published",
    "release": "rio",
    "description": "The metrics reported by the guest (as opposed to inferred from outside)" } ] }, { "name": "VMPP",
"description": "VM Protection Policy",
"fields": [ 
  { "name": "uuid",
    "description": "Unique identifier/object reference",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "cowley",
        "description": "" }, 
      { "transition": "removed",
        "release": "clearwater",
        "description": "The VMPR feature was removed" } ] }, 
  { "name": "label",
    "description": "a human-readable name",
    "type": "string",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "a human-readable name" } ],
    "default": "\"\"" }, 
  { "name": "description",
    "description": "a notes field containing human-readable description",
    "type": "string",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "a notes field containing human-readable description" } ],
    "default": "\"\"" }, 
  { "name": "is_policy_enabled",
    "description": "enable or disable this policy",
    "type": "bool",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "cowley",
        "description": "" }, 
      { "transition": "removed",
        "release": "clearwater",
        "description": "The VMPR feature was removed" } ],
    "default": "true" }, 
  { "name": "backup_type",
    "description": "type of the backup sub-policy",
    "type": "enum vmpp_backup_type",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "cowley",
        "description": "" }, 
      { "transition": "removed",
        "release": "clearwater",
        "description": "The VMPR feature was removed" } ],
    "default": "snapshot" }, 
  { "name": "backup_retention_value",
    "description": "maximum number of backups that should be stored at any time",
    "type": "int",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "cowley",
        "description": "" }, 
      { "transition": "removed",
        "release": "clearwater",
        "description": "The VMPR feature was removed" } ],
    "default": "7" }, 
  { "name": "backup_frequency",
    "description": "frequency of the backup schedule",
    "type": "enum vmpp_backup_frequency",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "cowley",
        "description": "" }, 
      { "transition": "removed",
        "release": "clearwater",
        "description": "The VMPR feature was removed" } ],
    "default": "daily" }, 
  { "name": "backup_schedule",
    "description": "schedule of the backup containing 'hour', 'min', 'days'. Date/time-related information is in XenServer Local Timezone",
    "type": "(string -> string) map",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "cowley",
        "description": "" }, 
      { "transition": "removed",
        "release": "clearwater",
        "description": "The VMPR feature was removed" } ],
    "default": "{}" }, 
  { "name": "is_backup_running",
    "description": "true if this protection policy's backup is running",
    "type": "bool",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "cowley",
        "description": "" }, 
      { "transition": "removed",
        "release": "clearwater",
        "description": "The VMPR feature was removed" } ] }, 
  { "name": "backup_last_run_time",
    "description": "time of the last backup",
    "type": "datetime",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "cowley",
        "description": "" }, 
      { "transition": "removed",
        "release": "clearwater",
        "description": "The VMPR feature was removed" } ],
    "default": "19700101T00:00:00Z" }, 
  { "name": "archive_target_type",
    "description": "type of the archive target config",
    "type": "enum vmpp_archive_target_type",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "cowley",
        "description": "" }, 
      { "transition": "removed",
        "release": "clearwater",
        "description": "The VMPR feature was removed" } ],
    "default": "none" }, 
  { "name": "archive_target_config",
    "description": "configuration for the archive, including its 'location', 'username', 'password'",
    "type": "(string -> string) map",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "cowley",
        "description": "" }, 
      { "transition": "removed",
        "release": "clearwater",
        "description": "The VMPR feature was removed" } ],
    "default": "{}" }, 
  { "name": "archive_frequency",
    "description": "frequency of the archive schedule",
    "type": "enum vmpp_archive_frequency",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "cowley",
        "description": "" }, 
      { "transition": "removed",
        "release": "clearwater",
        "description": "The VMPR feature was removed" } ],
    "default": "never" }, 
  { "name": "archive_schedule",
    "description": "schedule of the archive containing 'hour', 'min', 'days'. Date/time-related information is in XenServer Local Timezone",
    "type": "(string -> string) map",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "cowley",
        "description": "" }, 
      { "transition": "removed",
        "release": "clearwater",
        "description": "The VMPR feature was removed" } ],
    "default": "{}" }, 
  { "name": "is_archive_running",
    "description": "true if this protection policy's archive is running",
    "type": "bool",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "cowley",
        "description": "" }, 
      { "transition": "removed",
        "release": "clearwater",
        "description": "The VMPR feature was removed" } ] }, 
  { "name": "archive_last_run_time",
    "description": "time of the last archive",
    "type": "datetime",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "cowley",
        "description": "" }, 
      { "transition": "removed",
        "release": "clearwater",
        "description": "The VMPR feature was removed" } ],
    "default": "19700101T00:00:00Z" }, 
  { "name": "VMs",
    "description": "all VMs attached to this protection policy",
    "type": "VM ref set",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "cowley",
        "description": "" }, 
      { "transition": "removed",
        "release": "clearwater",
        "description": "The VMPR feature was removed" } ] }, 
  { "name": "is_alarm_enabled",
    "description": "true if alarm is enabled for this policy",
    "type": "bool",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "cowley",
        "description": "" }, 
      { "transition": "removed",
        "release": "clearwater",
        "description": "The VMPR feature was removed" } ],
    "default": "false" }, 
  { "name": "alarm_config",
    "description": "configuration for the alarm",
    "type": "(string -> string) map",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "cowley",
        "description": "" }, 
      { "transition": "removed",
        "release": "clearwater",
        "description": "The VMPR feature was removed" } ],
    "default": "{}" }, 
  { "name": "recent_alerts",
    "description": "recent alerts",
    "type": "string set",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "cowley",
        "description": "" }, 
      { "transition": "removed",
        "release": "clearwater",
        "description": "The VMPR feature was removed" } ],
    "default": "{}" } ],
"messages": [ 
  { "name": "set_archive_last_run_time",
    "description": "",
    "result": [ "void" ],
    "params": [ 
      { "type": "VMPP ref",
        "name": "self",
        "doc": "The protection policy" }, 
      { "type": "datetime",
        "name": "value",
        "doc": "the value to set" } ],
    "errors": [  ],
    "roles": [  ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "cowley",
        "description": "" }, 
      { "transition": "removed",
        "release": "clearwater",
        "description": "The VMPR feature was removed" } ] }, 
  { "name": "set_backup_last_run_time",
    "description": "",
    "result": [ "void" ],
    "params": [ 
      { "type": "VMPP ref",
        "name": "self",
        "doc": "The protection policy" }, 
      { "type": "datetime",
        "name": "value",
        "doc": "the value to set" } ],
    "errors": [  ],
    "roles": [  ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "cowley",
        "description": "" }, 
      { "transition": "removed",
        "release": "clearwater",
        "description": "The VMPR feature was removed" } ] }, 
  { "name": "remove_from_alarm_config",
    "description": "",
    "result": [ "void" ],
    "params": [ 
      { "type": "VMPP ref",
        "name": "self",
        "doc": "The protection policy" }, 
      { "type": "string",
        "name": "key",
        "doc": "the key to remove" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "cowley",
        "description": "" }, 
      { "transition": "removed",
        "release": "clearwater",
        "description": "The VMPR feature was removed" } ] }, 
  { "name": "remove_from_archive_schedule",
    "description": "",
    "result": [ "void" ],
    "params": [ 
      { "type": "VMPP ref",
        "name": "self",
        "doc": "The protection policy" }, 
      { "type": "string",
        "name": "key",
        "doc": "the key to remove" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "cowley",
        "description": "" }, 
      { "transition": "removed",
        "release": "clearwater",
        "description": "The VMPR feature was removed" } ] }, 
  { "name": "remove_from_archive_target_config",
    "description": "",
    "result": [ "void" ],
    "params": [ 
      { "type": "VMPP ref",
        "name": "self",
        "doc": "The protection policy" }, 
      { "type": "string",
        "name": "key",
        "doc": "the key to remove" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "cowley",
        "description": "" }, 
      { "transition": "removed",
        "release": "clearwater",
        "description": "The VMPR feature was removed" } ] }, 
  { "name": "remove_from_backup_schedule",
    "description": "",
    "result": [ "void" ],
    "params": [ 
      { "type": "VMPP ref",
        "name": "self",
        "doc": "The protection policy" }, 
      { "type": "string",
        "name": "key",
        "doc": "the key to remove" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "cowley",
        "description": "" }, 
      { "transition": "removed",
        "release": "clearwater",
        "description": "The VMPR feature was removed" } ] }, 
  { "name": "add_to_alarm_config",
    "description": "",
    "result": [ "void" ],
    "params": [ 
      { "type": "VMPP ref",
        "name": "self",
        "doc": "The protection policy" }, 
      { "type": "string",
        "name": "key",
        "doc": "the key to add" }, 
      { "type": "string",
        "name": "value",
        "doc": "the value to add" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "cowley",
        "description": "" }, 
      { "transition": "removed",
        "release": "clearwater",
        "description": "The VMPR feature was removed" } ] }, 
  { "name": "add_to_archive_schedule",
    "description": "",
    "result": [ "void" ],
    "params": [ 
      { "type": "VMPP ref",
        "name": "self",
        "doc": "The protection policy" }, 
      { "type": "string",
        "name": "key",
        "doc": "the key to add" }, 
      { "type": "string",
        "name": "value",
        "doc": "the value to add" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "cowley",
        "description": "" }, 
      { "transition": "removed",
        "release": "clearwater",
        "description": "The VMPR feature was removed" } ] }, 
  { "name": "add_to_archive_target_config",
    "description": "",
    "result": [ "void" ],
    "params": [ 
      { "type": "VMPP ref",
        "name": "self",
        "doc": "The protection policy" }, 
      { "type": "string",
        "name": "key",
        "doc": "the key to add" }, 
      { "type": "string",
        "name": "value",
        "doc": "the value to add" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "cowley",
        "description": "" }, 
      { "transition": "removed",
        "release": "clearwater",
        "description": "The VMPR feature was removed" } ] }, 
  { "name": "add_to_backup_schedule",
    "description": "",
    "result": [ "void" ],
    "params": [ 
      { "type": "VMPP ref",
        "name": "self",
        "doc": "The protection policy" }, 
      { "type": "string",
        "name": "key",
        "doc": "the key to add" }, 
      { "type": "string",
        "name": "value",
        "doc": "the value to add" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "cowley",
        "description": "" }, 
      { "transition": "removed",
        "release": "clearwater",
        "description": "The VMPR feature was removed" } ] }, 
  { "name": "set_alarm_config",
    "description": "",
    "result": [ "void" ],
    "params": [ 
      { "type": "VMPP ref",
        "name": "self",
        "doc": "The protection policy" }, 
      { "type": "(string -> string) map",
        "name": "value",
        "doc": "the value to set" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "cowley",
        "description": "" }, 
      { "transition": "removed",
        "release": "clearwater",
        "description": "The VMPR feature was removed" } ] }, 
  { "name": "set_is_alarm_enabled",
    "description": "Set the value of the is_alarm_enabled field",
    "result": [ "void" ],
    "params": [ 
      { "type": "VMPP ref",
        "name": "self",
        "doc": "The protection policy" }, 
      { "type": "bool",
        "name": "value",
        "doc": "true if alarm is enabled for this policy" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "cowley",
        "description": "" }, 
      { "transition": "removed",
        "release": "clearwater",
        "description": "The VMPR feature was removed" } ] }, 
  { "name": "set_archive_target_config",
    "description": "",
    "result": [ "void" ],
    "params": [ 
      { "type": "VMPP ref",
        "name": "self",
        "doc": "The protection policy" }, 
      { "type": "(string -> string) map",
        "name": "value",
        "doc": "the value to set" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "cowley",
        "description": "" }, 
      { "transition": "removed",
        "release": "clearwater",
        "description": "The VMPR feature was removed" } ] }, 
  { "name": "set_archive_target_type",
    "description": "Set the value of the archive_target_config_type field",
    "result": [ "void" ],
    "params": [ 
      { "type": "VMPP ref",
        "name": "self",
        "doc": "The protection policy" }, 
      { "type": "enum vmpp_archive_target_type",
        "name": "value",
        "doc": "the archive target config type" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "cowley",
        "description": "" }, 
      { "transition": "removed",
        "release": "clearwater",
        "description": "The VMPR feature was removed" } ] }, 
  { "name": "set_archive_schedule",
    "description": "",
    "result": [ "void" ],
    "params": [ 
      { "type": "VMPP ref",
        "name": "self",
        "doc": "The protection policy" }, 
      { "type": "(string -> string) map",
        "name": "value",
        "doc": "the value to set" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "cowley",
        "description": "" }, 
      { "transition": "removed",
        "release": "clearwater",
        "description": "The VMPR feature was removed" } ] }, 
  { "name": "set_archive_frequency",
    "description": "Set the value of the archive_frequency field",
    "result": [ "void" ],
    "params": [ 
      { "type": "VMPP ref",
        "name": "self",
        "doc": "The protection policy" }, 
      { "type": "enum vmpp_archive_frequency",
        "name": "value",
        "doc": "the archive frequency" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "cowley",
        "description": "" }, 
      { "transition": "removed",
        "release": "clearwater",
        "description": "The VMPR feature was removed" } ] }, 
  { "name": "set_backup_schedule",
    "description": "",
    "result": [ "void" ],
    "params": [ 
      { "type": "VMPP ref",
        "name": "self",
        "doc": "The protection policy" }, 
      { "type": "(string -> string) map",
        "name": "value",
        "doc": "the value to set" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "cowley",
        "description": "" }, 
      { "transition": "removed",
        "release": "clearwater",
        "description": "The VMPR feature was removed" } ] }, 
  { "name": "set_backup_frequency",
    "description": "Set the value of the backup_frequency field",
    "result": [ "void" ],
    "params": [ 
      { "type": "VMPP ref",
        "name": "self",
        "doc": "The protection policy" }, 
      { "type": "enum vmpp_backup_frequency",
        "name": "value",
        "doc": "the backup frequency" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "cowley",
        "description": "" }, 
      { "transition": "removed",
        "release": "clearwater",
        "description": "The VMPR feature was removed" } ] }, 
  { "name": "set_backup_retention_value",
    "description": "",
    "result": [ "void" ],
    "params": [ 
      { "type": "VMPP ref",
        "name": "self",
        "doc": "The protection policy" }, 
      { "type": "int",
        "name": "value",
        "doc": "the value to set" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "cowley",
        "description": "" }, 
      { "transition": "removed",
        "release": "clearwater",
        "description": "The VMPR feature was removed" } ] }, 
  { "name": "get_alerts",
    "description": "This call fetches a history of alerts for a given protection policy",
    "result": [ "string set", "A list of alerts encoded in xml" ],
    "params": [ 
      { "type": "VMPP ref",
        "name": "vmpp",
        "doc": "The protection policy" }, 
      { "type": "int",
        "name": "hours_from_now",
        "doc": "how many hours in the past the oldest record to fetch is" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "cowley",
        "description": "" }, 
      { "transition": "removed",
        "release": "clearwater",
        "description": "The VMPR feature was removed" } ] }, 
  { "name": "archive_now",
    "description": "This call archives the snapshot provided as a parameter",
    "result": [ "string", "An XMLRPC result" ],
    "params": [ 
      { "type": "VM ref",
        "name": "snapshot",
        "doc": "The snapshot to archive" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "cowley",
        "description": "" }, 
      { "transition": "removed",
        "release": "clearwater",
        "description": "The VMPR feature was removed" } ] }, 
  { "name": "protect_now",
    "description": "This call executes the protection policy immediately",
    "result": [ "string", "An XMLRPC result" ],
    "params": [ 
      { "type": "VMPP ref",
        "name": "vmpp",
        "doc": "The protection policy to execute" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "cowley",
        "description": "" }, 
      { "transition": "removed",
        "release": "clearwater",
        "description": "The VMPR feature was removed" } ] } ],
"enums": [ 
  { "name": "vmpp_backup_type",
    "values": [ 
      { "name": "snapshot",
        "doc": "The backup is a snapshot" }, 
      { "name": "checkpoint",
        "doc": "The backup is a checkpoint" } ] }, 
  { "name": "vmpp_backup_frequency",
    "values": [ 
      { "name": "hourly",
        "doc": "Hourly backups" }, 
      { "name": "daily",
        "doc": "Daily backups" }, 
      { "name": "weekly",
        "doc": "Weekly backups" } ] }, 
  { "name": "vmpp_archive_frequency",
    "values": [ 
      { "name": "never",
        "doc": "Never archive" }, 
      { "name": "always_after_backup",
        "doc": "Archive after backup" }, 
      { "name": "daily",
        "doc": "Daily archives" }, 
      { "name": "weekly",
        "doc": "Weekly backups" } ] }, 
  { "name": "vmpp_archive_target_type",
    "values": [ 
      { "name": "none",
        "doc": "No target config" }, 
      { "name": "cifs",
        "doc": "CIFS target config" }, 
      { "name": "nfs",
        "doc": "NFS target config" } ] } ],
"lifecycle": [ 
  { "transition": "published",
    "release": "cowley",
    "description": "" }, 
  { "transition": "removed",
    "release": "clearwater",
    "description": "The VMPR feature was removed" } ] }, { "name": "VM_appliance",
"description": "VM appliance",
"fields": [ 
  { "name": "uuid",
    "description": "Unique identifier/object reference",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Unique identifier/object reference" } ] }, 
  { "name": "label",
    "description": "a human-readable name",
    "type": "string",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "a human-readable name" } ],
    "default": "\"\"" }, 
  { "name": "description",
    "description": "a notes field containing human-readable description",
    "type": "string",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "a notes field containing human-readable description" } ],
    "default": "\"\"" }, 
  { "name": "allowed_operations",
    "description": "list of the operations allowed in this state. This list is advisory only and the server state may have changed by the time this field is read by a client.",
    "type": "enum vm_appliance_operation set",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "list of the operations allowed in this state. This list is advisory only and the server state may have changed by the time this field is read by a client." } ] }, 
  { "name": "current_operations",
    "description": "links each of the running tasks using this object (by reference) to a current_operation enum which describes the nature of the task.",
    "type": "(string -> enum vm_appliance_operation) map",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "links each of the running tasks using this object (by reference) to a current_operation enum which describes the nature of the task." } ] }, 
  { "name": "VMs",
    "description": "all VMs in this appliance",
    "type": "VM ref set",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "all VMs in this appliance" } ] } ],
"messages": [ 
  { "name": "recover",
    "description": "Recover the VM appliance",
    "result": [ "void" ],
    "params": [ 
      { "type": "VM_appliance ref",
        "name": "self",
        "doc": "The VM appliance to recover" }, 
      { "type": "session ref",
        "name": "session_to",
        "doc": "The session to which the VM appliance is to be recovered." }, 
      { "type": "bool",
        "name": "force",
        "doc": "Whether the VMs should replace newer versions of themselves." } ],
    "errors": [ 
      { "name": "VM_REQUIRES_SR",
        "doc": "You attempted to run a VM on a host which doesn't have access to an SR needed by the VM. The VM has at least one VBD attached to a VDI in the SR." } ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin", "vm-operator", "read-only" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "boston",
        "description": "Recover the VM appliance" } ] }, 
  { "name": "get_SRs_required_for_recovery",
    "description": "Get the list of SRs required by the VM appliance to recover.",
    "result": [ "SR ref set", "refs for SRs required to recover the VM" ],
    "params": [ 
      { "type": "VM_appliance ref",
        "name": "self",
        "doc": "The VM appliance for which the required list of SRs has to be recovered." }, 
      { "type": "session ref",
        "name": "session_to",
        "doc": "The session to which the list of SRs have to be recovered ." } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin", "vm-operator", "read-only" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "creedence",
        "description": "Get the list of SRs required by the VM appliance to recover." } ] }, 
  { "name": "assert_can_be_recovered",
    "description": "Assert whether all SRs required to recover this VM appliance are available.",
    "result": [ "void" ],
    "params": [ 
      { "type": "VM_appliance ref",
        "name": "self",
        "doc": "The VM appliance to recover" }, 
      { "type": "session ref",
        "name": "session_to",
        "doc": "The session to which the VM appliance is to be recovered." } ],
    "errors": [ 
      { "name": "VM_REQUIRES_SR",
        "doc": "You attempted to run a VM on a host which doesn't have access to an SR needed by the VM. The VM has at least one VBD attached to a VDI in the SR." } ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin", "vm-operator", "read-only" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "boston",
        "description": "Assert whether all SRs required to recover this VM appliance are available." } ] }, 
  { "name": "shutdown",
    "description": "For each VM in the appliance, try to shut it down cleanly. If this fails, perform a hard shutdown of the VM.",
    "result": [ "void" ],
    "params": [ 
      { "type": "VM_appliance ref",
        "name": "self",
        "doc": "The VM appliance" } ],
    "errors": [ 
      { "name": "OPERATION_PARTIALLY_FAILED",
        "doc": "Some VMs belonging to the appliance threw an exception while carrying out the specified operation" } ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "boston",
        "description": "For each VM in the appliance, try to shut it down cleanly. If this fails, perform a hard shutdown of the VM." } ] }, 
  { "name": "hard_shutdown",
    "description": "Perform a hard shutdown of all the VMs in the appliance",
    "result": [ "void" ],
    "params": [ 
      { "type": "VM_appliance ref",
        "name": "self",
        "doc": "The VM appliance" } ],
    "errors": [ 
      { "name": "OPERATION_PARTIALLY_FAILED",
        "doc": "Some VMs belonging to the appliance threw an exception while carrying out the specified operation" } ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "boston",
        "description": "Perform a hard shutdown of all the VMs in the appliance" } ] }, 
  { "name": "clean_shutdown",
    "description": "Perform a clean shutdown of all the VMs in the appliance",
    "result": [ "void" ],
    "params": [ 
      { "type": "VM_appliance ref",
        "name": "self",
        "doc": "The VM appliance" } ],
    "errors": [ 
      { "name": "OPERATION_PARTIALLY_FAILED",
        "doc": "Some VMs belonging to the appliance threw an exception while carrying out the specified operation" } ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "boston",
        "description": "Perform a clean shutdown of all the VMs in the appliance" } ] }, 
  { "name": "start",
    "description": "Start all VMs in the appliance",
    "result": [ "void" ],
    "params": [ 
      { "type": "VM_appliance ref",
        "name": "self",
        "doc": "The VM appliance" }, 
      { "type": "bool",
        "name": "paused",
        "doc": "Instantiate all VMs belonging to this appliance in paused state if set to true." } ],
    "errors": [ 
      { "name": "OPERATION_PARTIALLY_FAILED",
        "doc": "Some VMs belonging to the appliance threw an exception while carrying out the specified operation" } ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "boston",
        "description": "Start all VMs in the appliance" } ] } ],
"enums": [ 
  { "name": "vm_appliance_operation",
    "values": [ 
      { "name": "start",
        "doc": "Start" }, 
      { "name": "clean_shutdown",
        "doc": "Clean shutdown" }, 
      { "name": "hard_shutdown",
        "doc": "Hard shutdown" }, 
      { "name": "shutdown",
        "doc": "Shutdown" } ] } ],
"lifecycle": [ 
  { "transition": "published",
    "release": "boston",
    "description": "VM appliance" } ] }, { "name": "DR_task",
"description": "DR task",
"fields": [ 
  { "name": "uuid",
    "description": "Unique identifier/object reference",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Unique identifier/object reference" } ] }, 
  { "name": "introduced_SRs",
    "description": "All SRs introduced by this appliance",
    "type": "SR ref set",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "All SRs introduced by this appliance" } ] } ],
"messages": [ 
  { "name": "destroy",
    "description": "Destroy the disaster recovery task, detaching and forgetting any SRs introduced which are no longer required",
    "result": [ "void" ],
    "params": [ 
      { "type": "DR_task ref",
        "name": "self",
        "doc": "The disaster recovery task to destroy" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "boston",
        "description": "Destroy the disaster recovery task, detaching and forgetting any SRs introduced which are no longer required" } ] }, 
  { "name": "create",
    "description": "Create a disaster recovery task which will query the supplied list of devices",
    "result": [ "DR_task ref", "The reference to the created task" ],
    "params": [ 
      { "type": "string",
        "name": "type",
        "doc": "The SR driver type of the SRs to introduce" }, 
      { "type": "(string -> string) map",
        "name": "device_config",
        "doc": "The device configuration of the SRs to introduce" }, 
      { "type": "string set",
        "name": "whitelist",
        "doc": "The devices to use for disaster recovery" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "boston",
        "description": "Create a disaster recovery task which will query the supplied list of devices" } ] } ],
"enums": [  ],
"lifecycle": [ 
  { "transition": "published",
    "release": "boston",
    "description": "DR task" } ] }, { "name": "host",
"description": "A physical host",
"fields": [ 
  { "name": "uuid",
    "description": "Unique identifier/object reference",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Unique identifier/object reference" } ] }, 
  { "name": "label",
    "description": "a human-readable name",
    "type": "string",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "a human-readable name" } ],
    "default": "\"\"" }, 
  { "name": "description",
    "description": "a notes field containing human-readable description",
    "type": "string",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "a notes field containing human-readable description" } ],
    "default": "\"\"" }, 
  { "name": "overhead",
    "description": "Virtualization memory overhead (bytes).",
    "type": "int",
    "qualifier": "read only",
    "tag": "memory",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Virtualization memory overhead (bytes)." } ],
    "default": "0" }, 
  { "name": "allowed_operations",
    "description": "list of the operations allowed in this state. This list is advisory only and the server state may have changed by the time this field is read by a client.",
    "type": "enum host_allowed_operations set",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "list of the operations allowed in this state. This list is advisory only and the server state may have changed by the time this field is read by a client." } ] }, 
  { "name": "current_operations",
    "description": "links each of the running tasks using this object (by reference) to a current_operation enum which describes the nature of the task.",
    "type": "(string -> enum host_allowed_operations) map",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "links each of the running tasks using this object (by reference) to a current_operation enum which describes the nature of the task." } ] }, 
  { "name": "major",
    "description": "major version number",
    "type": "int",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "major version number" } ] }, 
  { "name": "minor",
    "description": "minor version number",
    "type": "int",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "minor version number" } ] }, 
  { "name": "vendor",
    "description": "identification of vendor",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "identification of vendor" } ] }, 
  { "name": "vendor_implementation",
    "description": "details of vendor implementation",
    "type": "(string -> string) map",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "details of vendor implementation" } ] }, 
  { "name": "enabled",
    "description": "True if the host is currently enabled",
    "type": "bool",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "True if the host is currently enabled" } ] }, 
  { "name": "software_version",
    "description": "version strings",
    "type": "(string -> string) map",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "version strings" } ] }, 
  { "name": "other_config",
    "description": "additional configuration",
    "type": "(string -> string) map",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "additional configuration" } ] }, 
  { "name": "capabilities",
    "description": "Xen capabilities",
    "type": "string set",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Xen capabilities" } ] }, 
  { "name": "cpu_configuration",
    "description": "The CPU configuration on this host.  May contain keys such as \"nr_nodes\", \"sockets_per_node\", \"cores_per_socket\", or \"threads_per_core\"",
    "type": "(string -> string) map",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "The CPU configuration on this host.  May contain keys such as \"nr_nodes\", \"sockets_per_node\", \"cores_per_socket\", or \"threads_per_core\"" } ] }, 
  { "name": "sched_policy",
    "description": "Scheduler policy currently in force on this host",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Scheduler policy currently in force on this host" } ] }, 
  { "name": "supported_bootloaders",
    "description": "a list of the bootloaders installed on the machine",
    "type": "string set",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "a list of the bootloaders installed on the machine" } ] }, 
  { "name": "resident_VMs",
    "description": "list of VMs currently resident on host",
    "type": "VM ref set",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "list of VMs currently resident on host" } ] }, 
  { "name": "logging",
    "description": "logging configuration",
    "type": "(string -> string) map",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "logging configuration" } ] }, 
  { "name": "PIFs",
    "description": "physical network interfaces",
    "type": "PIF ref set",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "physical network interfaces" } ] }, 
  { "name": "suspend_image_sr",
    "description": "The SR in which VDIs for suspend images are created",
    "type": "SR ref",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "The SR in which VDIs for suspend images are created" } ] }, 
  { "name": "crash_dump_sr",
    "description": "The SR in which VDIs for crash dumps are created",
    "type": "SR ref",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "The SR in which VDIs for crash dumps are created" } ] }, 
  { "name": "crashdumps",
    "description": "Set of host crash dumps",
    "type": "host_crashdump ref set",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Set of host crash dumps" } ] }, 
  { "name": "patches",
    "description": "Set of host patches",
    "type": "host_patch ref set",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Set of host patches" } ] }, 
  { "name": "PBDs",
    "description": "physical blockdevices",
    "type": "PBD ref set",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "physical blockdevices" } ] }, 
  { "name": "host_CPUs",
    "description": "The physical CPUs on this host",
    "type": "host_cpu ref set",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "The physical CPUs on this host" } ] }, 
  { "name": "cpu_info",
    "description": "Details about the physical CPUs on this host",
    "type": "(string -> string) map",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "midnight-ride",
        "description": "Details about the physical CPUs on this host" } ],
    "default": "{}" }, 
  { "name": "hostname",
    "description": "The hostname of this host",
    "type": "string",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "The hostname of this host" } ] }, 
  { "name": "address",
    "description": "The address by which this host can be contacted from any other host in the pool",
    "type": "string",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "The address by which this host can be contacted from any other host in the pool" } ] }, 
  { "name": "metrics",
    "description": "metrics associated with this host",
    "type": "host_metrics ref",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "metrics associated with this host" } ] }, 
  { "name": "license_params",
    "description": "State of the current license",
    "type": "(string -> string) map",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "State of the current license" } ] }, 
  { "name": "ha_statefiles",
    "description": "The set of statefiles accessible from this host",
    "type": "string set",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "The set of statefiles accessible from this host" } ],
    "default": "{}" }, 
  { "name": "ha_network_peers",
    "description": "The set of hosts visible via the network from this host",
    "type": "string set",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "The set of hosts visible via the network from this host" } ],
    "default": "{}" }, 
  { "name": "blobs",
    "description": "Binary blobs associated with this host",
    "type": "(string -> blob ref) map",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "Binary blobs associated with this host" } ],
    "default": "{}" }, 
  { "name": "tags",
    "description": "user-specified tags for categorization purposes",
    "type": "string set",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "user-specified tags for categorization purposes" } ],
    "default": "{}" }, 
  { "name": "external_auth_type",
    "description": "type of external authentication service configured; empty if none configured.",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "george",
        "description": "type of external authentication service configured; empty if none configured." } ],
    "default": "\"\"" }, 
  { "name": "external_auth_service_name",
    "description": "name of external authentication service configured; empty if none configured.",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "george",
        "description": "name of external authentication service configured; empty if none configured." } ],
    "default": "\"\"" }, 
  { "name": "external_auth_configuration",
    "description": "configuration specific to external authentication service",
    "type": "(string -> string) map",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "george",
        "description": "configuration specific to external authentication service" } ],
    "default": "{}" }, 
  { "name": "edition",
    "description": "XenServer edition",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "midnight-ride",
        "description": "XenServer edition" } ],
    "default": "\"\"" }, 
  { "name": "license_server",
    "description": "Contact information of the license server",
    "type": "(string -> string) map",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "midnight-ride",
        "description": "Contact information of the license server" } ],
    "default": "{\"address\" -> \"localhost\", \"port\" -> \"27000\"}" }, 
  { "name": "bios_strings",
    "description": "BIOS strings",
    "type": "(string -> string) map",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "midnight-ride",
        "description": "BIOS strings" } ],
    "default": "{}" }, 
  { "name": "power_on_mode",
    "description": "The power on mode",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "midnight-ride",
        "description": "The power on mode" } ],
    "default": "\"\"" }, 
  { "name": "power_on_config",
    "description": "The power on config",
    "type": "(string -> string) map",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "midnight-ride",
        "description": "The power on config" } ],
    "default": "{}" }, 
  { "name": "local_cache_sr",
    "description": "The SR that is used as a local cache",
    "type": "SR ref",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "cowley",
        "description": "The SR that is used as a local cache" } ],
    "default": "OpaqueRef:NULL" }, 
  { "name": "chipset_info",
    "description": "Information about chipset features",
    "type": "(string -> string) map",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "boston",
        "description": "" } ],
    "default": "{}" }, 
  { "name": "PCIs",
    "description": "List of PCI devices in the host",
    "type": "PCI ref set",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "boston",
        "description": "" } ] }, 
  { "name": "PGPUs",
    "description": "List of physical GPUs in the host",
    "type": "PGPU ref set",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "boston",
        "description": "" } ] }, 
  { "name": "guest_VCPUs_params",
    "description": "VCPUs params to apply to all resident guests",
    "type": "(string -> string) map",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "tampa",
        "description": "VCPUs params to apply to all resident guests" } ],
    "default": "{}" }, 
  { "name": "display",
    "description": "indicates whether the host is configured to output its console to a physical display device",
    "type": "enum host_display",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "cream",
        "description": "indicates whether the host is configured to output its console to a physical display device" } ],
    "default": "enabled" } ],
"messages": [ 
  { "name": "disable_display",
    "description": "Disable console output to the physical display device next time this host boots",
    "result": [ "enum host_display", "This host's physical display usage" ],
    "params": [ 
      { "type": "host ref",
        "name": "host",
        "doc": "The host" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "cream",
        "description": "" } ] }, 
  { "name": "enable_display",
    "description": "Enable console output to the physical display device next time this host boots",
    "result": [ "enum host_display", "This host's physical display usage" ],
    "params": [ 
      { "type": "host ref",
        "name": "host",
        "doc": "The host" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "cream",
        "description": "" } ] }, 
  { "name": "declare_dead",
    "description": "Declare that a host is dead. This is a dangerous operation, and should only be called if the administrator is absolutely sure the host is definitely dead",
    "result": [ "void" ],
    "params": [ 
      { "type": "host ref",
        "name": "host",
        "doc": "The Host to declare is dead" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "clearwater",
        "description": "Declare that a host is dead. This is a dangerous operation, and should only be called if the administrator is absolutely sure the host is definitely dead" } ] }, 
  { "name": "migrate_receive",
    "description": "Prepare to receive a VM, returning a token which can be passed to VM.migrate.",
    "result": [ "(string -> string) map", "A value which should be passed to VM.migrate" ],
    "params": [ 
      { "type": "host ref",
        "name": "host",
        "doc": "The target host" }, 
      { "type": "network ref",
        "name": "network",
        "doc": "The network through which migration traffic should be received." }, 
      { "type": "(string -> string) map",
        "name": "options",
        "doc": "Extra configuration operations" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "tampa",
        "description": "Prepare to receive a VM, returning a token which can be passed to VM.migrate." } ] }, 
  { "name": "disable_local_storage_caching",
    "description": "Disable the use of a local SR for caching purposes",
    "result": [ "void" ],
    "params": [ 
      { "type": "host ref",
        "name": "host",
        "doc": "The host" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "cowley",
        "description": "Disable the use of a local SR for caching purposes" } ] }, 
  { "name": "enable_local_storage_caching",
    "description": "Enable the use of a local SR for caching purposes",
    "result": [ "void" ],
    "params": [ 
      { "type": "host ref",
        "name": "host",
        "doc": "The host" }, 
      { "type": "SR ref",
        "name": "sr",
        "doc": "The SR to use as a local cache" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "cowley",
        "description": "Enable the use of a local SR for caching purposes" } ] }, 
  { "name": "reset_cpu_features",
    "description": "Remove the feature mask, such that after a reboot all features of the CPU are enabled.",
    "result": [ "void" ],
    "params": [ 
      { "type": "host ref",
        "name": "host",
        "doc": "The host" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "midnight-ride",
        "description": "Remove the feature mask, such that after a reboot all features of the CPU are enabled." } ] }, 
  { "name": "set_cpu_features",
    "description": "Set the CPU features to be used after a reboot, if the given features string is valid.",
    "result": [ "void" ],
    "params": [ 
      { "type": "host ref",
        "name": "host",
        "doc": "The host" }, 
      { "type": "string",
        "name": "features",
        "doc": "The features string (32 hexadecimal digits)" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "midnight-ride",
        "description": "Set the CPU features to be used after a reboot, if the given features string is valid." } ] }, 
  { "name": "set_power_on_mode",
    "description": "Set the power-on-mode, host, user and password ",
    "result": [ "void" ],
    "params": [ 
      { "type": "host ref",
        "name": "self",
        "doc": "The host" }, 
      { "type": "string",
        "name": "power_on_mode",
        "doc": "power-on-mode can be empty,iLO,wake-on-lan, DRAC or other" }, 
      { "type": "(string -> string) map",
        "name": "power_on_config",
        "doc": "Power on config" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "midnight-ride",
        "description": "Set the power-on-mode, host, user and password " } ] }, 
  { "name": "refresh_pack_info",
    "description": "Refresh the list of installed Supplemental Packs.",
    "result": [ "void" ],
    "params": [ 
      { "type": "host ref",
        "name": "host",
        "doc": "The Host to modify" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "midnight-ride",
        "description": "Refresh the list of installed Supplemental Packs." } ] }, 
  { "name": "apply_edition",
    "description": "Change to another edition, or reactivate the current edition after a license has expired. This may be subject to the successful checkout of an appropriate license.",
    "result": [ "void" ],
    "params": [ 
      { "type": "host ref",
        "name": "host",
        "doc": "The host" }, 
      { "type": "string",
        "name": "edition",
        "doc": "The requested edition" }, 
      { "type": "bool",
        "name": "force",
        "doc": "Update the license params even if the apply call fails" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "midnight-ride",
        "description": "Change to another edition, or reactivate the current edition after a license has expired. This may be subject to the successful checkout of an appropriate license." } ] }, 
  { "name": "get_server_certificate",
    "description": "Get the installed server SSL certificate.",
    "result": [ "string", "The installed server SSL certificate, in PEM form." ],
    "params": [ 
      { "type": "host ref",
        "name": "host",
        "doc": "The host" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "george",
        "description": "Get the installed server SSL certificate." } ] }, 
  { "name": "retrieve_wlb_evacuate_recommendations",
    "description": "Retrieves recommended host migrations to perform when evacuating the host from the wlb server. If a VM cannot be migrated from the host the reason is listed instead of a recommendation.",
    "result": [ "(VM ref -> string set) map", "VMs and the reasons why they would block evacuation, or their target host recommended by the wlb server" ],
    "params": [ 
      { "type": "host ref",
        "name": "self",
        "doc": "The host to query" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin", "vm-operator", "read-only" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "george",
        "description": "Retrieves recommended host migrations to perform when evacuating the host from the wlb server. If a VM cannot be migrated from the host the reason is listed instead of a recommendation." } ] }, 
  { "name": "disable_external_auth",
    "description": "This call disables external authentication on the local host",
    "result": [ "void" ],
    "params": [ 
      { "type": "host ref",
        "name": "host",
        "doc": "The host whose external authentication should be disabled" }, 
      { "type": "(string -> string) map",
        "name": "config",
        "doc": "Optional parameters as a list of key-values containing the configuration data" } ],
    "errors": [  ],
    "roles": [ "pool-admin" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "george",
        "description": "This call disables external authentication on the local host" } ] }, 
  { "name": "enable_external_auth",
    "description": "This call enables external authentication on a host",
    "result": [ "void" ],
    "params": [ 
      { "type": "host ref",
        "name": "host",
        "doc": "The host whose external authentication should be enabled" }, 
      { "type": "(string -> string) map",
        "name": "config",
        "doc": "A list of key-values containing the configuration data" }, 
      { "type": "string",
        "name": "service_name",
        "doc": "The name of the service" }, 
      { "type": "string",
        "name": "auth_type",
        "doc": "The type of authentication (e.g. AD for Active Directory)" } ],
    "errors": [  ],
    "roles": [ "pool-admin" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "george",
        "description": "This call enables external authentication on a host" } ] }, 
  { "name": "get_server_localtime",
    "description": "This call queries the host's clock for the current time in the host's local timezone",
    "result": [ "datetime", "The current local time" ],
    "params": [ 
      { "type": "host ref",
        "name": "host",
        "doc": "The host whose clock should be queried" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin", "vm-operator", "read-only" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "cowley",
        "description": "This call queries the host's clock for the current time in the host's local timezone" } ] }, 
  { "name": "get_servertime",
    "description": "This call queries the host's clock for the current time",
    "result": [ "datetime", "The current time" ],
    "params": [ 
      { "type": "host ref",
        "name": "host",
        "doc": "The host whose clock should be queried" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin", "vm-operator", "read-only" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "This call queries the host's clock for the current time" } ] }, 
  { "name": "call_plugin",
    "description": "Call a XenAPI plugin on this host",
    "result": [ "string", "Result from the plugin" ],
    "params": [ 
      { "type": "host ref",
        "name": "host",
        "doc": "The host" }, 
      { "type": "string",
        "name": "plugin",
        "doc": "The name of the plugin" }, 
      { "type": "string",
        "name": "fn",
        "doc": "The name of the function within the plugin" }, 
      { "type": "(string -> string) map",
        "name": "args",
        "doc": "Arguments for the function" } ],
    "errors": [  ],
    "roles": [ "pool-admin" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "Call a XenAPI plugin on this host" } ] }, 
  { "name": "create_new_blob",
    "description": "Create a placeholder for a named binary blob of data that is associated with this host",
    "result": [ "blob ref", "The reference of the blob, needed for populating its data" ],
    "params": [ 
      { "type": "host ref",
        "name": "host",
        "doc": "The host" }, 
      { "type": "string",
        "name": "name",
        "doc": "The name associated with the blob" }, 
      { "type": "string",
        "name": "mime_type",
        "doc": "The mime type for the data. Empty string translates to application/octet-stream" }, 
      { "type": "bool",
        "name": "public",
        "doc": "True if the blob should be publicly available" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "Create a placeholder for a named binary blob of data that is associated with this host" } ] }, 
  { "name": "backup_rrds",
    "description": "This causes the RRDs to be backed up to the master",
    "result": [ "void" ],
    "params": [ 
      { "type": "host ref",
        "name": "host",
        "doc": "Schedule a backup of the RRDs of this host" }, 
      { "type": "float",
        "name": "delay",
        "doc": "Delay in seconds from when the call is received to perform the backup" } ],
    "errors": [  ],
    "roles": [ "pool-admin" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "This causes the RRDs to be backed up to the master" } ] }, 
  { "name": "sync_data",
    "description": "This causes the synchronisation of the non-database data (messages, RRDs and so on) stored on the master to be synchronised with the host",
    "result": [ "void" ],
    "params": [ 
      { "type": "host ref",
        "name": "host",
        "doc": "The host to whom the data should be sent" } ],
    "errors": [  ],
    "roles": [ "pool-admin" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "This causes the synchronisation of the non-database data (messages, RRDs and so on) stored on the master to be synchronised with the host" } ] }, 
  { "name": "compute_memory_overhead",
    "description": "Computes the virtualization memory overhead of a host.",
    "result": [ "int", "the virtualization memory overhead of the host." ],
    "params": [ 
      { "type": "host ref",
        "name": "host",
        "doc": "The host for which to compute the memory overhead" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin", "vm-operator", "read-only" ],
    "tag": "memory",
    "lifecycle": [ 
      { "transition": "published",
        "release": "midnight-ride",
        "description": "Computes the virtualization memory overhead of a host." } ] }, 
  { "name": "compute_free_memory",
    "description": "Computes the amount of free memory on the host.",
    "result": [ "int", "the amount of free memory on the host." ],
    "params": [ 
      { "type": "host ref",
        "name": "host",
        "doc": "The host to send the request to" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin", "vm-operator", "read-only" ],
    "tag": "memory",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "Computes the amount of free memory on the host." } ] }, 
  { "name": "set_hostname_live",
    "description": "Sets the host name to the specified string.  Both the API and lower-level system hostname are changed immediately.",
    "result": [ "void" ],
    "params": [ 
      { "type": "host ref",
        "name": "host",
        "doc": "The host whose host name to set" }, 
      { "type": "string",
        "name": "hostname",
        "doc": "The new host name" } ],
    "errors": [ 
      { "name": "HOST_NAME_INVALID",
        "doc": "The host name is invalid." } ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "miami",
        "description": "Sets the host name to the specified string.  Both the API and lower-level system hostname are changed immediately." } ] }, 
  { "name": "shutdown_agent",
    "description": "Shuts the agent down after a 10 second pause. WARNING: this is a dangerous operation. Any operations in progress will be aborted, and unrecoverable data loss may occur. The caller is responsible for ensuring that there are no operations in progress when this method is called.",
    "result": [ "void" ],
    "params": [  ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "Shuts the agent down after a 10 second pause. WARNING: this is a dangerous operation. Any operations in progress will be aborted, and unrecoverable data loss may occur. The caller is responsible for ensuring that there are no operations in progress when this method is called." } ] }, 
  { "name": "restart_agent",
    "description": "Restarts the agent after a 10 second pause. WARNING: this is a dangerous operation. Any operations in progress will be aborted, and unrecoverable data loss may occur. The caller is responsible for ensuring that there are no operations in progress when this method is called.",
    "result": [ "void" ],
    "params": [ 
      { "type": "host ref",
        "name": "host",
        "doc": "The Host on which you want to restart the agent" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Restarts the agent after a 10 second pause. WARNING: this is a dangerous operation. Any operations in progress will be aborted, and unrecoverable data loss may occur. The caller is responsible for ensuring that there are no operations in progress when this method is called." } ] }, 
  { "name": "get_system_status_capabilities",
    "description": "",
    "result": [ "string", "An XML fragment containing the system status capabilities." ],
    "params": [ 
      { "type": "host ref",
        "name": "host",
        "doc": "The host to interrogate" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin", "vm-operator", "read-only" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "miami",
        "description": "" } ] }, 
  { "name": "get_management_interface",
    "description": "Returns the management interface for the specified host",
    "result": [ "PIF ref", "The management interface for the host" ],
    "params": [ 
      { "type": "host ref",
        "name": "host",
        "doc": "Which host's management interface is required" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "prototyped",
        "release": "tampa",
        "description": "" } ] }, 
  { "name": "management_disable",
    "description": "Disable the management network interface",
    "result": [ "void" ],
    "params": [  ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "miami",
        "description": "Disable the management network interface" } ] }, 
  { "name": "local_management_reconfigure",
    "description": "Reconfigure the management network interface. Should only be used if Host.management_reconfigure is impossible because the network configuration is broken.",
    "result": [ "void" ],
    "params": [ 
      { "type": "string",
        "name": "interface",
        "doc": "name of the interface to use as a management interface" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "miami",
        "description": "Reconfigure the management network interface. Should only be used if Host.management_reconfigure is impossible because the network configuration is broken." } ] }, 
  { "name": "management_reconfigure",
    "description": "Reconfigure the management network interface",
    "result": [ "void" ],
    "params": [ 
      { "type": "PIF ref",
        "name": "pif",
        "doc": "reference to a PIF object corresponding to the management interface" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "miami",
        "description": "Reconfigure the management network interface" } ] }, 
  { "name": "syslog_reconfigure",
    "description": "Re-configure syslog logging",
    "result": [ "void" ],
    "params": [ 
      { "type": "host ref",
        "name": "host",
        "doc": "Tell the host to reread its Host.logging parameters and reconfigure itself accordingly" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "miami",
        "description": "Re-configure syslog logging" } ] }, 
  { "name": "evacuate",
    "description": "Migrate all VMs off of this host, where possible.",
    "result": [ "void" ],
    "params": [ 
      { "type": "host ref",
        "name": "host",
        "doc": "The host to evacuate" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "miami",
        "description": "Migrate all VMs off of this host, where possible." } ] }, 
  { "name": "get_uncooperative_resident_VMs",
    "description": "Return a set of VMs which are not co-operating with the host's memory control system",
    "result": [ "VM ref set", "VMs which are not co-operating" ],
    "params": [ 
      { "type": "host ref",
        "name": "self",
        "doc": "The host to query" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin", "vm-operator", "read-only" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "midnight-ride",
        "description": "Return a set of VMs which are not co-operating with the host's memory control system" }, 
      { "transition": "deprecated",
        "release": "tampa",
        "description": "" } ] }, 
  { "name": "get_vms_which_prevent_evacuation",
    "description": "Return a set of VMs which prevent the host being evacuated, with per-VM error codes",
    "result": [ "(VM ref -> string set) map", "VMs which block evacuation together with reasons" ],
    "params": [ 
      { "type": "host ref",
        "name": "self",
        "doc": "The host to query" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin", "vm-operator", "read-only" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "Return a set of VMs which prevent the host being evacuated, with per-VM error codes" } ] }, 
  { "name": "assert_can_evacuate",
    "description": "Check this host can be evacuated.",
    "result": [ "void" ],
    "params": [ 
      { "type": "host ref",
        "name": "host",
        "doc": "The host to evacuate" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "miami",
        "description": "Check this host can be evacuated." } ] }, 
  { "name": "forget_data_source_archives",
    "description": "Forget the recorded statistics related to the specified data source",
    "result": [ "void" ],
    "params": [ 
      { "type": "host ref",
        "name": "host",
        "doc": "The host" }, 
      { "type": "string",
        "name": "data_source",
        "doc": "The data source whose archives are to be forgotten" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "Forget the recorded statistics related to the specified data source" } ] }, 
  { "name": "query_data_source",
    "description": "Query the latest value of the specified data source",
    "result": [ "float", "The latest value, averaged over the last 5 seconds" ],
    "params": [ 
      { "type": "host ref",
        "name": "host",
        "doc": "The host" }, 
      { "type": "string",
        "name": "data_source",
        "doc": "The data source to query" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin", "vm-operator", "read-only" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "Query the latest value of the specified data source" } ] }, 
  { "name": "record_data_source",
    "description": "Start recording the specified data source",
    "result": [ "void" ],
    "params": [ 
      { "type": "host ref",
        "name": "host",
        "doc": "The host" }, 
      { "type": "string",
        "name": "data_source",
        "doc": "The data source to record" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "Start recording the specified data source" } ] }, 
  { "name": "get_data_sources",
    "description": "",
    "result": [ "data_source record set", "A set of data sources" ],
    "params": [ 
      { "type": "host ref",
        "name": "host",
        "doc": "The host to interrogate" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin", "vm-operator", "read-only" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "" } ] }, 
  { "name": "emergency_ha_disable",
    "description": "This call disables HA on the local host. This should only be used with extreme care.",
    "result": [ "void" ],
    "params": [  ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "This call disables HA on the local host. This should only be used with extreme care." } ] }, 
  { "name": "power_on",
    "description": "Attempt to power-on the host (if the capability exists).",
    "result": [ "void" ],
    "params": [ 
      { "type": "host ref",
        "name": "host",
        "doc": "The Host to power on" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "Attempt to power-on the host (if the capability exists)." } ] }, 
  { "name": "destroy",
    "description": "Destroy specified host record in database",
    "result": [ "void" ],
    "params": [ 
      { "type": "host ref",
        "name": "self",
        "doc": "The host record to remove" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Destroy specified host record in database" } ] }, 
  { "name": "license_apply",
    "description": "Apply a new license to a host",
    "result": [ "void" ],
    "params": [ 
      { "type": "host ref",
        "name": "host",
        "doc": "The host to upload the license to" }, 
      { "type": "string",
        "name": "contents",
        "doc": "The contents of the license file, base64 encoded" } ],
    "errors": [ 
      { "name": "LICENSE_PROCESSING_ERROR",
        "doc": "There was an error processing your license.  Please contact your support representative." } ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Apply a new license to a host" }, 
      { "transition": "removed",
        "release": "clearwater",
        "description": "Free licenses no longer handled by xapi" } ] }, 
  { "name": "list_methods",
    "description": "List all supported methods",
    "result": [ "string set", "The name of every supported method." ],
    "params": [  ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin", "vm-operator", "read-only" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "List all supported methods" } ] }, 
  { "name": "bugreport_upload",
    "description": "Run xen-bugtool --yestoall and upload the output to Citrix support",
    "result": [ "void" ],
    "params": [ 
      { "type": "host ref",
        "name": "host",
        "doc": "The host on which to run xen-bugtool" }, 
      { "type": "string",
        "name": "url",
        "doc": "The URL to upload to" }, 
      { "type": "(string -> string) map",
        "name": "options",
        "doc": "Extra configuration operations" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Run xen-bugtool --yestoall and upload the output to Citrix support" } ] }, 
  { "name": "send_debug_keys",
    "description": "Inject the given string as debugging keys into Xen",
    "result": [ "void" ],
    "params": [ 
      { "type": "host ref",
        "name": "host",
        "doc": "The host" }, 
      { "type": "string",
        "name": "keys",
        "doc": "The keys to send" } ],
    "errors": [  ],
    "roles": [ "pool-admin" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Inject the given string as debugging keys into Xen" } ] }, 
  { "name": "get_log",
    "description": "Get the host's log file",
    "result": [ "string", "The contents of the host's primary log file" ],
    "params": [ 
      { "type": "host ref",
        "name": "host",
        "doc": "The Host to query" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin", "vm-operator", "read-only" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Get the host's log file" } ] }, 
  { "name": "dmesg_clear",
    "description": "Get the host xen dmesg, and clear the buffer.",
    "result": [ "string", "dmesg string" ],
    "params": [ 
      { "type": "host ref",
        "name": "host",
        "doc": "The Host to query" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Get the host xen dmesg, and clear the buffer." } ] }, 
  { "name": "dmesg",
    "description": "Get the host xen dmesg.",
    "result": [ "string", "dmesg string" ],
    "params": [ 
      { "type": "host ref",
        "name": "host",
        "doc": "The Host to query" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Get the host xen dmesg." } ] }, 
  { "name": "reboot",
    "description": "Reboot the host. (This function can only be called if there are no currently running VMs on the host and it is disabled.)",
    "result": [ "void" ],
    "params": [ 
      { "type": "host ref",
        "name": "host",
        "doc": "The Host to reboot" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Reboot the host. (This function can only be called if there are no currently running VMs on the host and it is disabled.)" } ] }, 
  { "name": "shutdown",
    "description": "Shutdown the host. (This function can only be called if there are no currently running VMs on the host and it is disabled.)",
    "result": [ "void" ],
    "params": [ 
      { "type": "host ref",
        "name": "host",
        "doc": "The Host to shutdown" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Shutdown the host. (This function can only be called if there are no currently running VMs on the host and it is disabled.)" } ] }, 
  { "name": "enable",
    "description": "Puts the host into a state in which new VMs can be started.",
    "result": [ "void" ],
    "params": [ 
      { "type": "host ref",
        "name": "host",
        "doc": "The Host to enable" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Puts the host into a state in which new VMs can be started." } ] }, 
  { "name": "disable",
    "description": "Puts the host into a state in which no new VMs can be started. Currently active VMs on the host continue to execute.",
    "result": [ "void" ],
    "params": [ 
      { "type": "host ref",
        "name": "host",
        "doc": "The Host to disable" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Puts the host into a state in which no new VMs can be started. Currently active VMs on the host continue to execute." } ] } ],
"enums": [ 
  { "name": "host_allowed_operations",
    "values": [ 
      { "name": "provision",
        "doc": "Indicates this host is able to provision another VM" }, 
      { "name": "evacuate",
        "doc": "Indicates this host is evacuating" }, 
      { "name": "shutdown",
        "doc": "Indicates this host is in the process of shutting itself down" }, 
      { "name": "reboot",
        "doc": "Indicates this host is in the process of rebooting" }, 
      { "name": "power_on",
        "doc": "Indicates this host is in the process of being powered on" }, 
      { "name": "vm_start",
        "doc": "This host is starting a VM" }, 
      { "name": "vm_resume",
        "doc": "This host is resuming a VM" }, 
      { "name": "vm_migrate",
        "doc": "This host is the migration target of a VM" } ] }, 
  { "name": "host_display",
    "values": [ 
      { "name": "enabled",
        "doc": "This host is outputting its console to a physical display device" }, 
      { "name": "disable_on_reboot",
        "doc": "The host will stop outputting its console to a physical display device on next boot" }, 
      { "name": "disabled",
        "doc": "This host is not outputting its console to a physical display device" }, 
      { "name": "enable_on_reboot",
        "doc": "The host will start outputting its console to a physical display device on next boot" } ] } ],
"lifecycle": [ 
  { "transition": "published",
    "release": "rio",
    "description": "A physical host" } ] }, { "name": "host_crashdump",
"description": "Represents a host crash dump",
"fields": [ 
  { "name": "uuid",
    "description": "Unique identifier/object reference",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Unique identifier/object reference" } ] }, 
  { "name": "host",
    "description": "Host the crashdump relates to",
    "type": "host ref",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Host the crashdump relates to" } ] }, 
  { "name": "timestamp",
    "description": "Time the crash happened",
    "type": "datetime",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Time the crash happened" } ] }, 
  { "name": "size",
    "description": "Size of the crashdump",
    "type": "int",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Size of the crashdump" } ] }, 
  { "name": "other_config",
    "description": "additional configuration",
    "type": "(string -> string) map",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "miami",
        "description": "additional configuration" } ],
    "default": "{}" } ],
"messages": [ 
  { "name": "upload",
    "description": "Upload the specified host crash dump to a specified URL",
    "result": [ "void" ],
    "params": [ 
      { "type": "host_crashdump ref",
        "name": "self",
        "doc": "The host crashdump to upload" }, 
      { "type": "string",
        "name": "url",
        "doc": "The URL to upload to" }, 
      { "type": "(string -> string) map",
        "name": "options",
        "doc": "Extra configuration operations" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Upload the specified host crash dump to a specified URL" } ] }, 
  { "name": "destroy",
    "description": "Destroy specified host crash dump, removing it from the disk.",
    "result": [ "void" ],
    "params": [ 
      { "type": "host_crashdump ref",
        "name": "self",
        "doc": "The host crashdump to destroy" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Destroy specified host crash dump, removing it from the disk." } ] } ],
"enums": [  ],
"lifecycle": [ 
  { "transition": "published",
    "release": "rio",
    "description": "Represents a host crash dump" } ] }, { "name": "host_patch",
"description": "Represents a patch stored on a server",
"fields": [ 
  { "name": "uuid",
    "description": "Unique identifier/object reference",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Unique identifier/object reference" } ] }, 
  { "name": "label",
    "description": "a human-readable name",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "a human-readable name" } ],
    "default": "\"\"" }, 
  { "name": "description",
    "description": "a notes field containing human-readable description",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "a notes field containing human-readable description" } ],
    "default": "\"\"" }, 
  { "name": "version",
    "description": "Patch version number",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Patch version number" } ] }, 
  { "name": "host",
    "description": "Host the patch relates to",
    "type": "host ref",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Host the patch relates to" } ] }, 
  { "name": "applied",
    "description": "True if the patch has been applied",
    "type": "bool",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "True if the patch has been applied" } ] }, 
  { "name": "timestamp_applied",
    "description": "Time the patch was applied",
    "type": "datetime",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Time the patch was applied" } ] }, 
  { "name": "size",
    "description": "Size of the patch",
    "type": "int",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Size of the patch" } ] }, 
  { "name": "pool_patch",
    "description": "The patch applied",
    "type": "pool_patch ref",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "miami",
        "description": "The patch applied" } ],
    "default": "Null" }, 
  { "name": "other_config",
    "description": "additional configuration",
    "type": "(string -> string) map",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "miami",
        "description": "additional configuration" } ],
    "default": "{}" } ],
"messages": [ 
  { "name": "apply",
    "description": "Apply the selected patch and return its output",
    "result": [ "string", "the output of the patch application process" ],
    "params": [ 
      { "type": "host_patch ref",
        "name": "self",
        "doc": "The patch to apply" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Apply the selected patch and return its output" }, 
      { "transition": "deprecated",
        "release": "miami",
        "description": "" } ] }, 
  { "name": "destroy",
    "description": "Destroy the specified host patch, removing it from the disk. This does NOT reverse the patch",
    "result": [ "void" ],
    "params": [ 
      { "type": "host_patch ref",
        "name": "self",
        "doc": "The patch to destroy" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Destroy the specified host patch, removing it from the disk. This does NOT reverse the patch" }, 
      { "transition": "deprecated",
        "release": "miami",
        "description": "" } ] } ],
"enums": [  ],
"lifecycle": [ 
  { "transition": "published",
    "release": "rio",
    "description": "Represents a patch stored on a server" } ] }, { "name": "host_metrics",
"description": "The metrics associated with a host",
"fields": [ 
  { "name": "uuid",
    "description": "Unique identifier/object reference",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Unique identifier/object reference" } ] }, 
  { "name": "total",
    "description": "Total host memory (bytes)",
    "type": "int",
    "qualifier": "read only",
    "tag": "memory",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Total host memory (bytes)" } ] }, 
  { "name": "free",
    "description": "Free host memory (bytes)",
    "type": "int",
    "qualifier": "read only",
    "tag": "memory",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Free host memory (bytes)" }, 
      { "transition": "deprecated",
        "release": "midnight-ride",
        "description": "" } ] }, 
  { "name": "live",
    "description": "Pool master thinks this host is live",
    "type": "bool",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Pool master thinks this host is live" } ] }, 
  { "name": "last_updated",
    "description": "Time at which this information was last updated",
    "type": "datetime",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Time at which this information was last updated" } ] }, 
  { "name": "other_config",
    "description": "additional configuration",
    "type": "(string -> string) map",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "additional configuration" } ],
    "default": "{}" } ],
"messages": [  ],
"enums": [  ],
"lifecycle": [ 
  { "transition": "published",
    "release": "rio",
    "description": "The metrics associated with a host" } ] }, { "name": "host_cpu",
"description": "A physical CPU",
"fields": [ 
  { "name": "uuid",
    "description": "Unique identifier/object reference",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Unique identifier/object reference" } ] }, 
  { "name": "host",
    "description": "the host the CPU is in",
    "type": "host ref",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "the host the CPU is in" } ] }, 
  { "name": "number",
    "description": "the number of the physical CPU within the host",
    "type": "int",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "the number of the physical CPU within the host" } ] }, 
  { "name": "vendor",
    "description": "the vendor of the physical CPU",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "the vendor of the physical CPU" } ] }, 
  { "name": "speed",
    "description": "the speed of the physical CPU",
    "type": "int",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "the speed of the physical CPU" } ] }, 
  { "name": "modelname",
    "description": "the model name of the physical CPU",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "the model name of the physical CPU" } ] }, 
  { "name": "family",
    "description": "the family (number) of the physical CPU",
    "type": "int",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "the family (number) of the physical CPU" } ] }, 
  { "name": "model",
    "description": "the model number of the physical CPU",
    "type": "int",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "the model number of the physical CPU" } ] }, 
  { "name": "stepping",
    "description": "the stepping of the physical CPU",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "the stepping of the physical CPU" } ] }, 
  { "name": "flags",
    "description": "the flags of the physical CPU (a decoded version of the features field)",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "the flags of the physical CPU (a decoded version of the features field)" } ] }, 
  { "name": "features",
    "description": "the physical CPU feature bitmap",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "the physical CPU feature bitmap" } ] }, 
  { "name": "utilisation",
    "description": "the current CPU utilisation",
    "type": "float",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "the current CPU utilisation" } ] }, 
  { "name": "other_config",
    "description": "additional configuration",
    "type": "(string -> string) map",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "additional configuration" } ],
    "default": "{}" } ],
"messages": [  ],
"enums": [  ],
"lifecycle": [ 
  { "transition": "published",
    "release": "rio",
    "description": "A physical CPU" }, 
  { "transition": "deprecated",
    "release": "midnight-ride",
    "description": "Deprecated in favour of the Host.cpu_info field" } ] }, { "name": "network",
"description": "A virtual network",
"fields": [ 
  { "name": "uuid",
    "description": "Unique identifier/object reference",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Unique identifier/object reference" } ] }, 
  { "name": "label",
    "description": "a human-readable name",
    "type": "string",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "a human-readable name" } ],
    "default": "\"\"" }, 
  { "name": "description",
    "description": "a notes field containing human-readable description",
    "type": "string",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "a notes field containing human-readable description" } ],
    "default": "\"\"" }, 
  { "name": "allowed_operations",
    "description": "list of the operations allowed in this state. This list is advisory only and the server state may have changed by the time this field is read by a client.",
    "type": "enum network_operations set",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "list of the operations allowed in this state. This list is advisory only and the server state may have changed by the time this field is read by a client." } ] }, 
  { "name": "current_operations",
    "description": "links each of the running tasks using this object (by reference) to a current_operation enum which describes the nature of the task.",
    "type": "(string -> enum network_operations) map",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "links each of the running tasks using this object (by reference) to a current_operation enum which describes the nature of the task." } ] }, 
  { "name": "VIFs",
    "description": "list of connected vifs",
    "type": "VIF ref set",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "list of connected vifs" } ] }, 
  { "name": "PIFs",
    "description": "list of connected pifs",
    "type": "PIF ref set",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "list of connected pifs" } ] }, 
  { "name": "MTU",
    "description": "MTU in octets",
    "type": "int",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "midnight-ride",
        "description": "MTU in octets" } ],
    "default": "1500" }, 
  { "name": "other_config",
    "description": "additional configuration",
    "type": "(string -> string) map",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "additional configuration" } ] }, 
  { "name": "bridge",
    "description": "name of the bridge corresponding to this network on the local host",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "name of the bridge corresponding to this network on the local host" } ] }, 
  { "name": "blobs",
    "description": "Binary blobs associated with this network",
    "type": "(string -> blob ref) map",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "Binary blobs associated with this network" } ],
    "default": "{}" }, 
  { "name": "tags",
    "description": "user-specified tags for categorization purposes",
    "type": "string set",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "user-specified tags for categorization purposes" } ],
    "default": "{}" }, 
  { "name": "default_locking_mode",
    "description": "The network will use this value to determine the behaviour of all VIFs where locking_mode = default",
    "type": "enum network_default_locking_mode",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "tampa",
        "description": "The network will use this value to determine the behaviour of all VIFs where locking_mode = default" } ],
    "default": "unlocked" }, 
  { "name": "assigned_ips",
    "description": "The IP addresses assigned to VIFs on networks that have active xapi-managed DHCP",
    "type": "(VIF ref -> string) map",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "creedence",
        "description": "The IP addresses assigned to VIFs on networks that have active xapi-managed DHCP" } ],
    "default": "{}" } ],
"messages": [ 
  { "name": "set_default_locking_mode",
    "description": "Set the default locking mode for VIFs attached to this network",
    "result": [ "void" ],
    "params": [ 
      { "type": "network ref",
        "name": "network",
        "doc": "The network" }, 
      { "type": "enum network_default_locking_mode",
        "name": "value",
        "doc": "The default locking mode for VIFs attached to this network." } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "tampa",
        "description": "Set the default locking mode for VIFs attached to this network" } ] }, 
  { "name": "create_new_blob",
    "description": "Create a placeholder for a named binary blob of data that is associated with this pool",
    "result": [ "blob ref", "The reference of the blob, needed for populating its data" ],
    "params": [ 
      { "type": "network ref",
        "name": "network",
        "doc": "The network" }, 
      { "type": "string",
        "name": "name",
        "doc": "The name associated with the blob" }, 
      { "type": "string",
        "name": "mime_type",
        "doc": "The mime type for the data. Empty string translates to application/octet-stream" }, 
      { "type": "bool",
        "name": "public",
        "doc": "True if the blob should be publicly available" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "Create a placeholder for a named binary blob of data that is associated with this pool" } ] } ],
"enums": [ 
  { "name": "network_operations",
    "values": [ 
      { "name": "attaching",
        "doc": "Indicates this network is attaching to a VIF or PIF" } ] }, 
  { "name": "network_default_locking_mode",
    "values": [ 
      { "name": "unlocked",
        "doc": "Treat all VIFs on this network with locking_mode = 'default' as if they have locking_mode = 'unlocked'" }, 
      { "name": "disabled",
        "doc": "Treat all VIFs on this network with locking_mode = 'default' as if they have locking_mode = 'disabled'" } ] } ],
"lifecycle": [ 
  { "transition": "published",
    "release": "rio",
    "description": "A virtual network" } ] }, { "name": "VIF",
"description": "A virtual network interface",
"fields": [ 
  { "name": "uuid",
    "description": "Unique identifier/object reference",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Unique identifier/object reference" } ] }, 
  { "name": "allowed_operations",
    "description": "list of the operations allowed in this state. This list is advisory only and the server state may have changed by the time this field is read by a client.",
    "type": "enum vif_operations set",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "list of the operations allowed in this state. This list is advisory only and the server state may have changed by the time this field is read by a client." } ] }, 
  { "name": "current_operations",
    "description": "links each of the running tasks using this object (by reference) to a current_operation enum which describes the nature of the task.",
    "type": "(string -> enum vif_operations) map",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "links each of the running tasks using this object (by reference) to a current_operation enum which describes the nature of the task." } ] }, 
  { "name": "device",
    "description": "order in which VIF backends are created by xapi",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "order in which VIF backends are created by xapi" } ] }, 
  { "name": "network",
    "description": "virtual network to which this vif is connected",
    "type": "network ref",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "virtual network to which this vif is connected" } ] }, 
  { "name": "VM",
    "description": "virtual machine to which this vif is connected",
    "type": "VM ref",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "virtual machine to which this vif is connected" } ] }, 
  { "name": "MAC",
    "description": "ethernet MAC address of virtual interface, as exposed to guest",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "ethernet MAC address of virtual interface, as exposed to guest" } ] }, 
  { "name": "MTU",
    "description": "MTU in octets",
    "type": "int",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "MTU in octets" } ] }, 
  { "name": "other_config",
    "description": "additional configuration",
    "type": "(string -> string) map",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "additional configuration" } ] }, 
  { "name": "currently_attached",
    "description": "is the device currently attached (erased on reboot)",
    "type": "bool",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "is the device currently attached (erased on reboot)" } ] }, 
  { "name": "status_code",
    "description": "error/success code associated with last attach-operation (erased on reboot)",
    "type": "int",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "error/success code associated with last attach-operation (erased on reboot)" } ] }, 
  { "name": "status_detail",
    "description": "error/success information associated with last attach-operation status (erased on reboot)",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "error/success information associated with last attach-operation status (erased on reboot)" } ] }, 
  { "name": "runtime_properties",
    "description": "Device runtime properties",
    "type": "(string -> string) map",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Device runtime properties" } ] }, 
  { "name": "algorithm_type",
    "description": "QoS algorithm to use",
    "type": "string",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "QoS algorithm to use" } ] }, 
  { "name": "algorithm_params",
    "description": "parameters for chosen QoS algorithm",
    "type": "(string -> string) map",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "parameters for chosen QoS algorithm" } ] }, 
  { "name": "supported_algorithms",
    "description": "supported QoS algorithms for this VIF",
    "type": "string set",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "supported QoS algorithms for this VIF" } ] }, 
  { "name": "metrics",
    "description": "metrics associated with this VIF",
    "type": "VIF_metrics ref",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "metrics associated with this VIF" } ] }, 
  { "name": "MAC_autogenerated",
    "description": "true if the MAC was autogenerated; false indicates it was set manually",
    "type": "bool",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "george",
        "description": "true if the MAC was autogenerated; false indicates it was set manually" } ],
    "default": "false" }, 
  { "name": "locking_mode",
    "description": "current locking mode of the VIF",
    "type": "enum vif_locking_mode",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "tampa",
        "description": "current locking mode of the VIF" } ],
    "default": "network_default" }, 
  { "name": "ipv4_allowed",
    "description": "A list of IPv4 addresses which can be used to filter traffic passing through this VIF",
    "type": "string set",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "tampa",
        "description": "A list of IPv4 addresses which can be used to filter traffic passing through this VIF" } ],
    "default": "{}" }, 
  { "name": "ipv6_allowed",
    "description": "A list of IPv6 addresses which can be used to filter traffic passing through this VIF",
    "type": "string set",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "tampa",
        "description": "A list of IPv6 addresses which can be used to filter traffic passing through this VIF" } ],
    "default": "{}" } ],
"messages": [ 
  { "name": "remove_ipv6_allowed",
    "description": "Removes an IPv6 address from this VIF",
    "result": [ "void" ],
    "params": [ 
      { "type": "VIF ref",
        "name": "self",
        "doc": "The VIF from which the IP address will be removed" }, 
      { "type": "string",
        "name": "value",
        "doc": "The IP address which will be removed from the VIF" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "tampa",
        "description": "Removes an IPv6 address from this VIF" } ] }, 
  { "name": "add_ipv6_allowed",
    "description": "Associates an IPv6 address with this VIF",
    "result": [ "void" ],
    "params": [ 
      { "type": "VIF ref",
        "name": "self",
        "doc": "The VIF which the IP address will be associated with" }, 
      { "type": "string",
        "name": "value",
        "doc": "The IP address which will be associated with the VIF" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "tampa",
        "description": "Associates an IPv6 address with this VIF" } ] }, 
  { "name": "set_ipv6_allowed",
    "description": "Set the IPv6 addresses to which traffic on this VIF can be restricted",
    "result": [ "void" ],
    "params": [ 
      { "type": "VIF ref",
        "name": "self",
        "doc": "The VIF which the IP addresses will be associated with" }, 
      { "type": "string set",
        "name": "value",
        "doc": "The IP addresses which will be associated with the VIF" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "tampa",
        "description": "Set the IPv6 addresses to which traffic on this VIF can be restricted" } ] }, 
  { "name": "remove_ipv4_allowed",
    "description": "Removes an IPv4 address from this VIF",
    "result": [ "void" ],
    "params": [ 
      { "type": "VIF ref",
        "name": "self",
        "doc": "The VIF from which the IP address will be removed" }, 
      { "type": "string",
        "name": "value",
        "doc": "The IP address which will be removed from the VIF" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "tampa",
        "description": "Removes an IPv4 address from this VIF" } ] }, 
  { "name": "add_ipv4_allowed",
    "description": "Associates an IPv4 address with this VIF",
    "result": [ "void" ],
    "params": [ 
      { "type": "VIF ref",
        "name": "self",
        "doc": "The VIF which the IP address will be associated with" }, 
      { "type": "string",
        "name": "value",
        "doc": "The IP address which will be associated with the VIF" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "tampa",
        "description": "Associates an IPv4 address with this VIF" } ] }, 
  { "name": "set_ipv4_allowed",
    "description": "Set the IPv4 addresses to which traffic on this VIF can be restricted",
    "result": [ "void" ],
    "params": [ 
      { "type": "VIF ref",
        "name": "self",
        "doc": "The VIF which the IP addresses will be associated with" }, 
      { "type": "string set",
        "name": "value",
        "doc": "The IP addresses which will be associated with the VIF" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "tampa",
        "description": "Set the IPv4 addresses to which traffic on this VIF can be restricted" } ] }, 
  { "name": "set_locking_mode",
    "description": "Set the locking mode for this VIF",
    "result": [ "void" ],
    "params": [ 
      { "type": "VIF ref",
        "name": "self",
        "doc": "The VIF whose locking mode will be set" }, 
      { "type": "enum vif_locking_mode",
        "name": "value",
        "doc": "The new locking mode for the VIF" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "tampa",
        "description": "Set the locking mode for this VIF" } ] }, 
  { "name": "unplug_force",
    "description": "Forcibly unplug the specified VIF",
    "result": [ "void" ],
    "params": [ 
      { "type": "VIF ref",
        "name": "self",
        "doc": "The VIF to forcibly unplug" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "boston",
        "description": "Forcibly unplug the specified VIF" } ] }, 
  { "name": "unplug",
    "description": "Hot-unplug the specified VIF, dynamically unattaching it from the running VM",
    "result": [ "void" ],
    "params": [ 
      { "type": "VIF ref",
        "name": "self",
        "doc": "The VIF to hot-unplug" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Hot-unplug the specified VIF, dynamically unattaching it from the running VM" } ] }, 
  { "name": "plug",
    "description": "Hotplug the specified VIF, dynamically attaching it to the running VM",
    "result": [ "void" ],
    "params": [ 
      { "type": "VIF ref",
        "name": "self",
        "doc": "The VIF to hotplug" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Hotplug the specified VIF, dynamically attaching it to the running VM" } ] } ],
"enums": [ 
  { "name": "vif_operations",
    "values": [ 
      { "name": "attach",
        "doc": "Attempting to attach this VIF to a VM" }, 
      { "name": "plug",
        "doc": "Attempting to hotplug this VIF" }, 
      { "name": "unplug",
        "doc": "Attempting to hot unplug this VIF" } ] }, 
  { "name": "vif_locking_mode",
    "values": [ 
      { "name": "network_default",
        "doc": "No specific configuration set - default network policy applies" }, 
      { "name": "locked",
        "doc": "Only traffic to a specific MAC and a list of IPv4 or IPv6 addresses is permitted" }, 
      { "name": "unlocked",
        "doc": "All traffic is permitted" }, 
      { "name": "disabled",
        "doc": "No traffic is permitted" } ] } ],
"lifecycle": [ 
  { "transition": "published",
    "release": "rio",
    "description": "A virtual network interface" } ] }, { "name": "VIF_metrics",
"description": "The metrics associated with a virtual network device",
"fields": [ 
  { "name": "uuid",
    "description": "Unique identifier/object reference",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Unique identifier/object reference" } ] }, 
  { "name": "read_kbs",
    "description": "Read bandwidth (KiB/s)",
    "type": "float",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Read bandwidth (KiB/s)" } ] }, 
  { "name": "write_kbs",
    "description": "Write bandwidth (KiB/s)",
    "type": "float",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Write bandwidth (KiB/s)" } ] }, 
  { "name": "last_updated",
    "description": "Time at which this information was last updated",
    "type": "datetime",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Time at which this information was last updated" } ] }, 
  { "name": "other_config",
    "description": "additional configuration",
    "type": "(string -> string) map",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "additional configuration" } ],
    "default": "{}" } ],
"messages": [  ],
"enums": [  ],
"lifecycle": [ 
  { "transition": "published",
    "release": "rio",
    "description": "The metrics associated with a virtual network device" } ] }, { "name": "PIF",
"description": "A physical network interface (note separate VLANs are represented as several PIFs)",
"fields": [ 
  { "name": "uuid",
    "description": "Unique identifier/object reference",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Unique identifier/object reference" } ] }, 
  { "name": "device",
    "description": "machine-readable name of the interface (e.g. eth0)",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "machine-readable name of the interface (e.g. eth0)" } ] }, 
  { "name": "network",
    "description": "virtual network to which this pif is connected",
    "type": "network ref",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "virtual network to which this pif is connected" } ] }, 
  { "name": "host",
    "description": "physical machine to which this pif is connected",
    "type": "host ref",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "physical machine to which this pif is connected" } ] }, 
  { "name": "MAC",
    "description": "ethernet MAC address of physical interface",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "ethernet MAC address of physical interface" } ] }, 
  { "name": "MTU",
    "description": "MTU in octets",
    "type": "int",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "MTU in octets" } ] }, 
  { "name": "VLAN",
    "description": "VLAN tag for all traffic passing through this interface",
    "type": "int",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "VLAN tag for all traffic passing through this interface" } ] }, 
  { "name": "metrics",
    "description": "metrics associated with this PIF",
    "type": "PIF_metrics ref",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "metrics associated with this PIF" } ] }, 
  { "name": "physical",
    "description": "true if this represents a physical network interface",
    "type": "bool",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "miami",
        "description": "true if this represents a physical network interface" } ],
    "default": "false" }, 
  { "name": "currently_attached",
    "description": "true if this interface is online",
    "type": "bool",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "miami",
        "description": "true if this interface is online" } ],
    "default": "true" }, 
  { "name": "ip_configuration_mode",
    "description": "Sets if and how this interface gets an IP address",
    "type": "enum ip_configuration_mode",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "miami",
        "description": "Sets if and how this interface gets an IP address" } ],
    "default": "None" }, 
  { "name": "IP",
    "description": "IP address",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "miami",
        "description": "IP address" } ],
    "default": "\"\"" }, 
  { "name": "netmask",
    "description": "IP netmask",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "miami",
        "description": "IP netmask" } ],
    "default": "\"\"" }, 
  { "name": "gateway",
    "description": "IP gateway",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "miami",
        "description": "IP gateway" } ],
    "default": "\"\"" }, 
  { "name": "DNS",
    "description": "IP address of DNS servers to use",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "miami",
        "description": "IP address of DNS servers to use" } ],
    "default": "\"\"" }, 
  { "name": "bond_slave_of",
    "description": "Indicates which bond this interface is part of",
    "type": "Bond ref",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "miami",
        "description": "Indicates which bond this interface is part of" } ],
    "default": "Null" }, 
  { "name": "bond_master_of",
    "description": "Indicates this PIF represents the results of a bond",
    "type": "Bond ref set",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "miami",
        "description": "Indicates this PIF represents the results of a bond" } ] }, 
  { "name": "VLAN_master_of",
    "description": "Indicates wich VLAN this interface receives untagged traffic from",
    "type": "VLAN ref",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "miami",
        "description": "Indicates wich VLAN this interface receives untagged traffic from" } ],
    "default": "Null" }, 
  { "name": "VLAN_slave_of",
    "description": "Indicates which VLANs this interface transmits tagged traffic to",
    "type": "VLAN ref set",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "miami",
        "description": "Indicates which VLANs this interface transmits tagged traffic to" } ] }, 
  { "name": "management",
    "description": "Indicates whether the control software is listening for connections on this interface",
    "type": "bool",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "miami",
        "description": "Indicates whether the control software is listening for connections on this interface" } ],
    "default": "false" }, 
  { "name": "other_config",
    "description": "Additional configuration",
    "type": "(string -> string) map",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "miami",
        "description": "Additional configuration" } ],
    "default": "{}" }, 
  { "name": "disallow_unplug",
    "description": "Prevent this PIF from being unplugged; set this to notify the management tool-stack that the PIF has a special use and should not be unplugged under any circumstances (e.g. because you're running storage traffic over it)",
    "type": "bool",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "Prevent this PIF from being unplugged; set this to notify the management tool-stack that the PIF has a special use and should not be unplugged under any circumstances (e.g. because you're running storage traffic over it)" } ],
    "default": "false" }, 
  { "name": "tunnel_access_PIF_of",
    "description": "Indicates to which tunnel this PIF gives access",
    "type": "tunnel ref set",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "cowley",
        "description": "Indicates to which tunnel this PIF gives access" } ] }, 
  { "name": "tunnel_transport_PIF_of",
    "description": "Indicates to which tunnel this PIF provides transport",
    "type": "tunnel ref set",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "cowley",
        "description": "Indicates to which tunnel this PIF provides transport" } ] }, 
  { "name": "ipv6_configuration_mode",
    "description": "Sets if and how this interface gets an IPv6 address",
    "type": "enum ipv6_configuration_mode",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "prototyped",
        "release": "tampa",
        "description": "" } ],
    "default": "None" }, 
  { "name": "IPv6",
    "description": "IPv6 address",
    "type": "string set",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "prototyped",
        "release": "tampa",
        "description": "" } ],
    "default": "{}" }, 
  { "name": "ipv6_gateway",
    "description": "IPv6 gateway",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "prototyped",
        "release": "tampa",
        "description": "" } ],
    "default": "\"\"" }, 
  { "name": "primary_address_type",
    "description": "Which protocol should define the primary address of this interface",
    "type": "enum primary_address_type",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "prototyped",
        "release": "tampa",
        "description": "" } ],
    "default": "IPv4" }, 
  { "name": "managed",
    "description": "Indicates whether the interface is managed by xapi. If it is not, then xapi will not configure the interface, the commands PIF.plug/unplug/reconfigure_ip(v6) can not be used, nor can the interface be bonded or have VLANs based on top through xapi.",
    "type": "bool",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "vgpu-productisation",
        "description": "" } ],
    "default": "true" }, 
  { "name": "properties",
    "description": "Additional configuration properties for the interface.",
    "type": "(string -> string) map",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "creedence",
        "description": "" } ],
    "default": "{}" } ],
"messages": [ 
  { "name": "set_property",
    "description": "Set the value of a property of the PIF",
    "result": [ "void" ],
    "params": [ 
      { "type": "PIF ref",
        "name": "self",
        "doc": "The PIF" }, 
      { "type": "string",
        "name": "name",
        "doc": "The property name" }, 
      { "type": "string",
        "name": "value",
        "doc": "The property value" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "creedence",
        "description": "" } ] }, 
  { "name": "db_forget",
    "description": "Destroy a PIF database record.",
    "result": [ "void" ],
    "params": [ 
      { "type": "PIF ref",
        "name": "self",
        "doc": "The ref of the PIF whose database record should be destroyed" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "Destroy a PIF database record." } ] }, 
  { "name": "db_introduce",
    "description": "Create a new PIF record in the database only",
    "result": [ "PIF ref", "The ref of the newly created PIF record." ],
    "params": [ 
      { "type": "string",
        "name": "device",
        "doc": "" }, 
      { "type": "network ref",
        "name": "network",
        "doc": "" }, 
      { "type": "host ref",
        "name": "host",
        "doc": "" }, 
      { "type": "string",
        "name": "MAC",
        "doc": "" }, 
      { "type": "int",
        "name": "MTU",
        "doc": "" }, 
      { "type": "int",
        "name": "VLAN",
        "doc": "" }, 
      { "type": "bool",
        "name": "physical",
        "doc": "" }, 
      { "type": "enum ip_configuration_mode",
        "name": "ip_configuration_mode",
        "doc": "" }, 
      { "type": "string",
        "name": "IP",
        "doc": "" }, 
      { "type": "string",
        "name": "netmask",
        "doc": "" }, 
      { "type": "string",
        "name": "gateway",
        "doc": "" }, 
      { "type": "string",
        "name": "DNS",
        "doc": "" }, 
      { "type": "Bond ref",
        "name": "bond_slave_of",
        "doc": "" }, 
      { "type": "VLAN ref",
        "name": "VLAN_master_of",
        "doc": "" }, 
      { "type": "bool",
        "name": "management",
        "doc": "" }, 
      { "type": "(string -> string) map",
        "name": "other_config",
        "doc": "" }, 
      { "type": "bool",
        "name": "disallow_unplug",
        "doc": "" }, 
      { "type": "enum ipv6_configuration_mode",
        "name": "ipv6_configuration_mode",
        "doc": "" }, 
      { "type": "string set",
        "name": "IPv6",
        "doc": "" }, 
      { "type": "string",
        "name": "ipv6_gateway",
        "doc": "" }, 
      { "type": "enum primary_address_type",
        "name": "primary_address_type",
        "doc": "" }, 
      { "type": "bool",
        "name": "managed",
        "doc": "" }, 
      { "type": "(string -> string) map",
        "name": "properties",
        "doc": "" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "Create a new PIF record in the database only" } ] }, 
  { "name": "plug",
    "description": "Attempt to bring up a physical interface",
    "result": [ "void" ],
    "params": [ 
      { "type": "PIF ref",
        "name": "self",
        "doc": "the PIF object to plug" } ],
    "errors": [ 
      { "name": "TRANSPORT_PIF_NOT_CONFIGURED",
        "doc": "The tunnel transport PIF has no IP configuration set." } ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "miami",
        "description": "Attempt to bring up a physical interface" } ] }, 
  { "name": "unplug",
    "description": "Attempt to bring down a physical interface",
    "result": [ "void" ],
    "params": [ 
      { "type": "PIF ref",
        "name": "self",
        "doc": "the PIF object to unplug" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "miami",
        "description": "Attempt to bring down a physical interface" } ] }, 
  { "name": "forget",
    "description": "Destroy the PIF object matching a particular network interface",
    "result": [ "void" ],
    "params": [ 
      { "type": "PIF ref",
        "name": "self",
        "doc": "The PIF object to destroy" } ],
    "errors": [ 
      { "name": "PIF_TUNNEL_STILL_EXISTS",
        "doc": "Operation cannot proceed while a tunnel exists on this interface." } ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "miami",
        "description": "Destroy the PIF object matching a particular network interface" } ] }, 
  { "name": "introduce",
    "description": "Create a PIF object matching a particular network interface",
    "result": [ "PIF ref", "The reference of the created PIF object" ],
    "params": [ 
      { "type": "host ref",
        "name": "host",
        "doc": "The host on which the interface exists" }, 
      { "type": "string",
        "name": "MAC",
        "doc": "The MAC address of the interface" }, 
      { "type": "string",
        "name": "device",
        "doc": "The device name to use for the interface" }, 
      { "type": "bool",
        "name": "managed",
        "doc": "Indicates whether the interface is managed by xapi (defaults to \"true\")" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "miami",
        "description": "Create a PIF object matching a particular network interface" } ] }, 
  { "name": "scan",
    "description": "Scan for physical interfaces on a host and create PIF objects to represent them",
    "result": [ "void" ],
    "params": [ 
      { "type": "host ref",
        "name": "host",
        "doc": "The host on which to scan" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "miami",
        "description": "Scan for physical interfaces on a host and create PIF objects to represent them" } ] }, 
  { "name": "set_primary_address_type",
    "description": "Change the primary address type used by this PIF",
    "result": [ "void" ],
    "params": [ 
      { "type": "PIF ref",
        "name": "self",
        "doc": "the PIF object to reconfigure" }, 
      { "type": "enum primary_address_type",
        "name": "primary_address_type",
        "doc": "Whether to prefer IPv4 or IPv6 connections" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "prototyped",
        "release": "tampa",
        "description": "" } ] }, 
  { "name": "reconfigure_ipv6",
    "description": "Reconfigure the IPv6 address settings for this interface",
    "result": [ "void" ],
    "params": [ 
      { "type": "PIF ref",
        "name": "self",
        "doc": "the PIF object to reconfigure" }, 
      { "type": "enum ipv6_configuration_mode",
        "name": "mode",
        "doc": "whether to use dynamic/static/no-assignment" }, 
      { "type": "string",
        "name": "IPv6",
        "doc": "the new IPv6 address (in <addr>/<prefix length> format)" }, 
      { "type": "string",
        "name": "gateway",
        "doc": "the new gateway" }, 
      { "type": "string",
        "name": "DNS",
        "doc": "the new DNS settings" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "prototyped",
        "release": "tampa",
        "description": "" } ] }, 
  { "name": "reconfigure_ip",
    "description": "Reconfigure the IP address settings for this interface",
    "result": [ "void" ],
    "params": [ 
      { "type": "PIF ref",
        "name": "self",
        "doc": "the PIF object to reconfigure" }, 
      { "type": "enum ip_configuration_mode",
        "name": "mode",
        "doc": "whether to use dynamic/static/no-assignment" }, 
      { "type": "string",
        "name": "IP",
        "doc": "the new IP address" }, 
      { "type": "string",
        "name": "netmask",
        "doc": "the new netmask" }, 
      { "type": "string",
        "name": "gateway",
        "doc": "the new gateway" }, 
      { "type": "string",
        "name": "DNS",
        "doc": "the new DNS settings" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "miami",
        "description": "Reconfigure the IP address settings for this interface" } ] }, 
  { "name": "destroy",
    "description": "Destroy the PIF object (provided it is a VLAN interface). This call is deprecated: use VLAN.destroy or Bond.destroy instead",
    "result": [ "void" ],
    "params": [ 
      { "type": "PIF ref",
        "name": "self",
        "doc": "the PIF object to destroy" } ],
    "errors": [ 
      { "name": "PIF_IS_PHYSICAL",
        "doc": "You tried to destroy a PIF, but it represents an aspect of the physical host configuration, and so cannot be destroyed.  The parameter echoes the PIF handle you gave." } ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Destroy the PIF object (provided it is a VLAN interface)" }, 
      { "transition": "deprecated",
        "release": "miami",
        "description": "Replaced by VLAN.destroy and Bond.destroy" } ] }, 
  { "name": "create_VLAN",
    "description": "Create a VLAN interface from an existing physical interface. This call is deprecated: use VLAN.create instead",
    "result": [ "PIF ref", "The reference of the created PIF object" ],
    "params": [ 
      { "type": "string",
        "name": "device",
        "doc": "physical interface on which to create the VLAN interface" }, 
      { "type": "network ref",
        "name": "network",
        "doc": "network to which this interface should be connected" }, 
      { "type": "host ref",
        "name": "host",
        "doc": "physical machine to which this PIF is connected" }, 
      { "type": "int",
        "name": "VLAN",
        "doc": "VLAN tag for the new interface" } ],
    "errors": [ 
      { "name": "VLAN_TAG_INVALID",
        "doc": "You tried to create a VLAN, but the tag you gave was invalid -- it must be between 0 and 4094.  The parameter echoes the VLAN tag you gave." } ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Create a VLAN interface from an existing physical interface" }, 
      { "transition": "deprecated",
        "release": "miami",
        "description": "Replaced by VLAN.create" } ] } ],
"enums": [ 
  { "name": "ip_configuration_mode",
    "values": [ 
      { "name": "None",
        "doc": "Do not acquire an IP address" }, 
      { "name": "DHCP",
        "doc": "Acquire an IP address by DHCP" }, 
      { "name": "Static",
        "doc": "Static IP address configuration" } ] }, 
  { "name": "ipv6_configuration_mode",
    "values": [ 
      { "name": "None",
        "doc": "Do not acquire an IPv6 address" }, 
      { "name": "DHCP",
        "doc": "Acquire an IPv6 address by DHCP" }, 
      { "name": "Static",
        "doc": "Static IPv6 address configuration" }, 
      { "name": "Autoconf",
        "doc": "Router assigned prefix delegation IPv6 allocation" } ] }, 
  { "name": "primary_address_type",
    "values": [ 
      { "name": "IPv4",
        "doc": "Primary address is the IPv4 address" }, 
      { "name": "IPv6",
        "doc": "Primary address is the IPv6 address" } ] } ],
"lifecycle": [ 
  { "transition": "published",
    "release": "rio",
    "description": "A physical network interface (note separate VLANs are represented as several PIFs)" } ] }, { "name": "PIF_metrics",
"description": "The metrics associated with a physical network interface",
"fields": [ 
  { "name": "uuid",
    "description": "Unique identifier/object reference",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Unique identifier/object reference" } ] }, 
  { "name": "read_kbs",
    "description": "Read bandwidth (KiB/s)",
    "type": "float",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Read bandwidth (KiB/s)" } ] }, 
  { "name": "write_kbs",
    "description": "Write bandwidth (KiB/s)",
    "type": "float",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Write bandwidth (KiB/s)" } ] }, 
  { "name": "carrier",
    "description": "Report if the PIF got a carrier or not",
    "type": "bool",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Report if the PIF got a carrier or not" } ] }, 
  { "name": "vendor_id",
    "description": "Report vendor ID",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Report vendor ID" } ] }, 
  { "name": "vendor_name",
    "description": "Report vendor name",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Report vendor name" } ] }, 
  { "name": "device_id",
    "description": "Report device ID",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Report device ID" } ] }, 
  { "name": "device_name",
    "description": "Report device name",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Report device name" } ] }, 
  { "name": "speed",
    "description": "Speed of the link (if available)",
    "type": "int",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Speed of the link (if available)" } ] }, 
  { "name": "duplex",
    "description": "Full duplex capability of the link (if available)",
    "type": "bool",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Full duplex capability of the link (if available)" } ] }, 
  { "name": "pci_bus_path",
    "description": "PCI bus path of the pif (if available)",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "PCI bus path of the pif (if available)" } ] }, 
  { "name": "last_updated",
    "description": "Time at which this information was last updated",
    "type": "datetime",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Time at which this information was last updated" } ] }, 
  { "name": "other_config",
    "description": "additional configuration",
    "type": "(string -> string) map",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "additional configuration" } ],
    "default": "{}" } ],
"messages": [  ],
"enums": [  ],
"lifecycle": [ 
  { "transition": "published",
    "release": "rio",
    "description": "The metrics associated with a physical network interface" } ] }, { "name": "Bond",
"description": "",
"fields": [ 
  { "name": "uuid",
    "description": "Unique identifier/object reference",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Unique identifier/object reference" } ] }, 
  { "name": "master",
    "description": "The bonded interface",
    "type": "PIF ref",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "miami",
        "description": "The bonded interface" } ],
    "default": "Null" }, 
  { "name": "slaves",
    "description": "The interfaces which are part of this bond",
    "type": "PIF ref set",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "miami",
        "description": "The interfaces which are part of this bond" } ] }, 
  { "name": "other_config",
    "description": "additional configuration",
    "type": "(string -> string) map",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "miami",
        "description": "additional configuration" } ],
    "default": "{}" }, 
  { "name": "primary_slave",
    "description": "The PIF of which the IP configuration and MAC were copied to the bond, and which will receive all configuration/VLANs/VIFs on the bond if the bond is destroyed",
    "type": "PIF ref",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "boston",
        "description": "" } ],
    "default": "OpaqueRef:NULL" }, 
  { "name": "mode",
    "description": "The algorithm used to distribute traffic among the bonded NICs",
    "type": "enum bond_mode",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "boston",
        "description": "" } ],
    "default": "balance-slb" }, 
  { "name": "properties",
    "description": "Additional configuration properties specific to the bond mode.",
    "type": "(string -> string) map",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "tampa",
        "description": "Additional configuration properties specific to the bond mode." } ],
    "default": "{}" }, 
  { "name": "links_up",
    "description": "Number of links up in this bond",
    "type": "int",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "tampa",
        "description": "Number of links up in this bond" } ],
    "default": "0" } ],
"messages": [ 
  { "name": "set_property",
    "description": "Set the value of a property of the bond",
    "result": [ "void" ],
    "params": [ 
      { "type": "Bond ref",
        "name": "self",
        "doc": "The bond" }, 
      { "type": "string",
        "name": "name",
        "doc": "The property name" }, 
      { "type": "string",
        "name": "value",
        "doc": "The property value" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "tampa",
        "description": "Set the value of a property of the bond" } ] }, 
  { "name": "set_mode",
    "description": "Change the bond mode",
    "result": [ "void" ],
    "params": [ 
      { "type": "Bond ref",
        "name": "self",
        "doc": "The bond" }, 
      { "type": "enum bond_mode",
        "name": "value",
        "doc": "The new bond mode" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "boston",
        "description": "" } ] }, 
  { "name": "destroy",
    "description": "Destroy an interface bond",
    "result": [ "void" ],
    "params": [ 
      { "type": "Bond ref",
        "name": "self",
        "doc": "Bond to destroy" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "miami",
        "description": "Destroy an interface bond" } ] }, 
  { "name": "create",
    "description": "Create an interface bond",
    "result": [ "Bond ref", "The reference of the created Bond object" ],
    "params": [ 
      { "type": "network ref",
        "name": "network",
        "doc": "Network to add the bonded PIF to" }, 
      { "type": "PIF ref set",
        "name": "members",
        "doc": "PIFs to add to this bond" }, 
      { "type": "string",
        "name": "MAC",
        "doc": "The MAC address to use on the bond itself. If this parameter is the empty string then the bond will inherit its MAC address from the primary slave." }, 
      { "type": "enum bond_mode",
        "name": "mode",
        "doc": "Bonding mode to use for the new bond" }, 
      { "type": "(string -> string) map",
        "name": "properties",
        "doc": "Additional configuration parameters specific to the bond mode" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "miami",
        "description": "Create an interface bond" } ] } ],
"enums": [ 
  { "name": "bond_mode",
    "values": [ 
      { "name": "balance-slb",
        "doc": "Source-level balancing" }, 
      { "name": "active-backup",
        "doc": "Active/passive bonding: only one NIC is carrying traffic" }, 
      { "name": "lacp",
        "doc": "Link aggregation control protocol" } ] } ],
"lifecycle": [ 
  { "transition": "published",
    "release": "miami",
    "description": "" } ] }, { "name": "VLAN",
"description": "A VLAN mux/demux",
"fields": [ 
  { "name": "uuid",
    "description": "Unique identifier/object reference",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Unique identifier/object reference" } ] }, 
  { "name": "tagged_PIF",
    "description": "interface on which traffic is tagged",
    "type": "PIF ref",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "miami",
        "description": "interface on which traffic is tagged" } ],
    "default": "Null" }, 
  { "name": "untagged_PIF",
    "description": "interface on which traffic is untagged",
    "type": "PIF ref",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "miami",
        "description": "interface on which traffic is untagged" } ],
    "default": "Null" }, 
  { "name": "tag",
    "description": "VLAN tag in use",
    "type": "int",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "miami",
        "description": "VLAN tag in use" } ],
    "default": "-1" }, 
  { "name": "other_config",
    "description": "additional configuration",
    "type": "(string -> string) map",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "miami",
        "description": "additional configuration" } ],
    "default": "{}" } ],
"messages": [ 
  { "name": "destroy",
    "description": "Destroy a VLAN mux/demuxer",
    "result": [ "void" ],
    "params": [ 
      { "type": "VLAN ref",
        "name": "self",
        "doc": "VLAN mux/demuxer to destroy" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "miami",
        "description": "Destroy a VLAN mux/demuxer" } ] }, 
  { "name": "create",
    "description": "Create a VLAN mux/demuxer",
    "result": [ "VLAN ref", "The reference of the created VLAN object" ],
    "params": [ 
      { "type": "PIF ref",
        "name": "tagged_PIF",
        "doc": "PIF which receives the tagged traffic" }, 
      { "type": "int",
        "name": "tag",
        "doc": "VLAN tag to use" }, 
      { "type": "network ref",
        "name": "network",
        "doc": "Network to receive the untagged traffic" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "miami",
        "description": "Create a VLAN mux/demuxer" } ] } ],
"enums": [  ],
"lifecycle": [ 
  { "transition": "published",
    "release": "miami",
    "description": "A VLAN mux/demux" } ] }, { "name": "SM",
"description": "A storage manager plugin",
"fields": [ 
  { "name": "uuid",
    "description": "Unique identifier/object reference",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Unique identifier/object reference" } ] }, 
  { "name": "label",
    "description": "a human-readable name",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "a human-readable name" } ],
    "default": "\"\"" }, 
  { "name": "description",
    "description": "a notes field containing human-readable description",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "a notes field containing human-readable description" } ],
    "default": "\"\"" }, 
  { "name": "type",
    "description": "SR.type",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "SR.type" } ] }, 
  { "name": "vendor",
    "description": "Vendor who created this plugin",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Vendor who created this plugin" } ] }, 
  { "name": "copyright",
    "description": "Entity which owns the copyright of this plugin",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Entity which owns the copyright of this plugin" } ] }, 
  { "name": "version",
    "description": "Version of the plugin",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Version of the plugin" } ] }, 
  { "name": "required_api_version",
    "description": "Minimum SM API version required on the server",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Minimum SM API version required on the server" } ] }, 
  { "name": "configuration",
    "description": "names and descriptions of device config keys",
    "type": "(string -> string) map",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "names and descriptions of device config keys" } ] }, 
  { "name": "capabilities",
    "description": "capabilities of the SM plugin",
    "type": "string set",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "deprecated",
        "release": "clearwater",
        "description": "Use SM.features instead" } ],
    "default": "{}" }, 
  { "name": "features",
    "description": "capabilities of the SM plugin, with capability version numbers",
    "type": "(string -> int) map",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "clearwater",
        "description": "capabilities of the SM plugin, with capability version numbers" } ],
    "default": "{}" }, 
  { "name": "other_config",
    "description": "additional configuration",
    "type": "(string -> string) map",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "miami",
        "description": "additional configuration" } ],
    "default": "{}" }, 
  { "name": "driver_filename",
    "description": "filename of the storage driver",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "filename of the storage driver" } ],
    "default": "\"\"" } ],
"messages": [  ],
"enums": [  ],
"lifecycle": [ 
  { "transition": "published",
    "release": "rio",
    "description": "A storage manager plugin" } ] }, { "name": "SR",
"description": "A storage repository",
"fields": [ 
  { "name": "uuid",
    "description": "Unique identifier/object reference",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Unique identifier/object reference" } ] }, 
  { "name": "label",
    "description": "a human-readable name",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "a human-readable name" } ],
    "default": "\"\"" }, 
  { "name": "description",
    "description": "a notes field containing human-readable description",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "a notes field containing human-readable description" } ],
    "default": "\"\"" }, 
  { "name": "allowed_operations",
    "description": "list of the operations allowed in this state. This list is advisory only and the server state may have changed by the time this field is read by a client.",
    "type": "enum storage_operations set",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "list of the operations allowed in this state. This list is advisory only and the server state may have changed by the time this field is read by a client." } ] }, 
  { "name": "current_operations",
    "description": "links each of the running tasks using this object (by reference) to a current_operation enum which describes the nature of the task.",
    "type": "(string -> enum storage_operations) map",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "links each of the running tasks using this object (by reference) to a current_operation enum which describes the nature of the task." } ] }, 
  { "name": "VDIs",
    "description": "all virtual disks known to this storage repository",
    "type": "VDI ref set",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "all virtual disks known to this storage repository" } ] }, 
  { "name": "PBDs",
    "description": "describes how particular hosts can see this storage repository",
    "type": "PBD ref set",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "describes how particular hosts can see this storage repository" } ] }, 
  { "name": "virtual_allocation",
    "description": "sum of virtual_sizes of all VDIs in this storage repository (in bytes)",
    "type": "int",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "sum of virtual_sizes of all VDIs in this storage repository (in bytes)" } ] }, 
  { "name": "physical_utilisation",
    "description": "physical space currently utilised on this storage repository (in bytes). Note that for sparse disk formats, physical_utilisation may be less than virtual_allocation",
    "type": "int",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "physical space currently utilised on this storage repository (in bytes). Note that for sparse disk formats, physical_utilisation may be less than virtual_allocation" } ] }, 
  { "name": "physical_size",
    "description": "total physical size of the repository (in bytes)",
    "type": "int",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "total physical size of the repository (in bytes)" } ] }, 
  { "name": "type",
    "description": "type of the storage repository",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "type of the storage repository" } ] }, 
  { "name": "content_type",
    "description": "the type of the SR's content, if required (e.g. ISOs)",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "the type of the SR's content, if required (e.g. ISOs)" } ] }, 
  { "name": "shared",
    "description": "true if this SR is (capable of being) shared between multiple hosts",
    "type": "bool",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "true if this SR is (capable of being) shared between multiple hosts" } ] }, 
  { "name": "other_config",
    "description": "additional configuration",
    "type": "(string -> string) map",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "additional configuration" } ] }, 
  { "name": "tags",
    "description": "user-specified tags for categorization purposes",
    "type": "string set",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "user-specified tags for categorization purposes" } ],
    "default": "{}" }, 
  { "name": "sm_config",
    "description": "SM dependent data",
    "type": "(string -> string) map",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "miami",
        "description": "SM dependent data" } ],
    "default": "{}" }, 
  { "name": "blobs",
    "description": "Binary blobs associated with this SR",
    "type": "(string -> blob ref) map",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "Binary blobs associated with this SR" } ],
    "default": "{}" }, 
  { "name": "local_cache_enabled",
    "description": "True if this SR is assigned to be the local cache for its host",
    "type": "bool",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "cowley",
        "description": "True if this SR is assigned to be the local cache for its host" } ],
    "default": "false" }, 
  { "name": "introduced_by",
    "description": "The disaster recovery task which introduced this SR",
    "type": "DR_task ref",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "boston",
        "description": "The disaster recovery task which introduced this SR" } ],
    "default": "OpaqueRef:NULL" } ],
"messages": [ 
  { "name": "disable_database_replication",
    "description": "",
    "result": [ "void" ],
    "params": [ 
      { "type": "SR ref",
        "name": "sr",
        "doc": "The SR to which metadata should be no longer replicated" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "boston",
        "description": "" } ] }, 
  { "name": "enable_database_replication",
    "description": "",
    "result": [ "void" ],
    "params": [ 
      { "type": "SR ref",
        "name": "sr",
        "doc": "The SR to which metadata should be replicated" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "boston",
        "description": "" } ] }, 
  { "name": "assert_supports_database_replication",
    "description": "Returns successfully if the given SR supports database replication. Otherwise returns an error to explain why not.",
    "result": [ "void" ],
    "params": [ 
      { "type": "SR ref",
        "name": "sr",
        "doc": "The SR to query" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "boston",
        "description": "Returns successfully if the given SR supports database replication. Otherwise returns an error to explain why not." } ] }, 
  { "name": "assert_can_host_ha_statefile",
    "description": "Returns successfully if the given SR can host an HA statefile. Otherwise returns an error to explain why not",
    "result": [ "void" ],
    "params": [ 
      { "type": "SR ref",
        "name": "sr",
        "doc": "The SR to query" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "Returns successfully if the given SR can host an HA statefile. Otherwise returns an error to explain why not" } ] }, 
  { "name": "set_physical_utilisation",
    "description": "Sets the SR's physical_utilisation field",
    "result": [ "void" ],
    "params": [ 
      { "type": "SR ref",
        "name": "self",
        "doc": "The SR to modify" }, 
      { "type": "int",
        "name": "value",
        "doc": "The new value of the SR's physical utilisation" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "miami",
        "description": "Sets the SR's physical_utilisation field" } ] }, 
  { "name": "set_virtual_allocation",
    "description": "Sets the SR's virtual_allocation field",
    "result": [ "void" ],
    "params": [ 
      { "type": "SR ref",
        "name": "self",
        "doc": "The SR to modify" }, 
      { "type": "int",
        "name": "value",
        "doc": "The new value of the SR's virtual_allocation" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "miami",
        "description": "Sets the SR's virtual_allocation field" } ] }, 
  { "name": "set_physical_size",
    "description": "Sets the SR's physical_size field",
    "result": [ "void" ],
    "params": [ 
      { "type": "SR ref",
        "name": "self",
        "doc": "The SR to modify" }, 
      { "type": "int",
        "name": "value",
        "doc": "The new value of the SR's physical_size" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "miami",
        "description": "Sets the SR's physical_size field" } ] }, 
  { "name": "create_new_blob",
    "description": "Create a placeholder for a named binary blob of data that is associated with this SR",
    "result": [ "blob ref", "The reference of the blob, needed for populating its data" ],
    "params": [ 
      { "type": "SR ref",
        "name": "sr",
        "doc": "The SR" }, 
      { "type": "string",
        "name": "name",
        "doc": "The name associated with the blob" }, 
      { "type": "string",
        "name": "mime_type",
        "doc": "The mime type for the data. Empty string translates to application/octet-stream" }, 
      { "type": "bool",
        "name": "public",
        "doc": "True if the blob should be publicly available" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "Create a placeholder for a named binary blob of data that is associated with this SR" } ] }, 
  { "name": "set_name_description",
    "description": "Set the name description of the SR",
    "result": [ "void" ],
    "params": [ 
      { "type": "SR ref",
        "name": "sr",
        "doc": "The SR" }, 
      { "type": "string",
        "name": "value",
        "doc": "The name description for the SR" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Set the name description of the SR" } ] }, 
  { "name": "set_name_label",
    "description": "Set the name label of the SR",
    "result": [ "void" ],
    "params": [ 
      { "type": "SR ref",
        "name": "sr",
        "doc": "The SR" }, 
      { "type": "string",
        "name": "value",
        "doc": "The name label for the SR" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Set the name label of the SR" } ] }, 
  { "name": "set_shared",
    "description": "Sets the shared flag on the SR",
    "result": [ "void" ],
    "params": [ 
      { "type": "SR ref",
        "name": "sr",
        "doc": "The SR" }, 
      { "type": "bool",
        "name": "value",
        "doc": "True if the SR is shared" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Sets the shared flag on the SR" } ] }, 
  { "name": "probe",
    "description": "Perform a backend-specific scan, using the given device_config.  If the device_config is complete, then this will return a list of the SRs present of this type on the device, if any.  If the device_config is partial, then a backend-specific scan will be performed, returning results that will guide the user in improving the device_config.",
    "result": [ "string", "An XML fragment containing the scan results.  These are specific to the scan being performed, and the backend." ],
    "params": [ 
      { "type": "host ref",
        "name": "host",
        "doc": "The host to create/make the SR on" }, 
      { "type": "(string -> string) map",
        "name": "device_config",
        "doc": "The device config string that will be passed to backend SR driver" }, 
      { "type": "string",
        "name": "type",
        "doc": "The type of the SR; used to specify the SR backend driver to use" }, 
      { "type": "(string -> string) map",
        "name": "sm_config",
        "doc": "Storage backend specific configuration options" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "miami",
        "description": "Perform a backend-specific scan, using the given device_config.  If the device_config is complete, then this will return a list of the SRs present of this type on the device, if any.  If the device_config is partial, then a backend-specific scan will be performed, returning results that will guide the user in improving the device_config." } ] }, 
  { "name": "scan",
    "description": "Refreshes the list of VDIs associated with an SR",
    "result": [ "void" ],
    "params": [ 
      { "type": "SR ref",
        "name": "sr",
        "doc": "The SR to scan" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Refreshes the list of VDIs associated with an SR" } ] }, 
  { "name": "get_supported_types",
    "description": "Return a set of all the SR types supported by the system",
    "result": [ "string set", "the supported SR types" ],
    "params": [  ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin", "vm-operator", "read-only" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Return a set of all the SR types supported by the system" } ] }, 
  { "name": "update",
    "description": "Refresh the fields on the SR object",
    "result": [ "void" ],
    "params": [ 
      { "type": "SR ref",
        "name": "sr",
        "doc": "The SR whose fields should be refreshed" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "symc",
        "description": "Refresh the fields on the SR object" } ] }, 
  { "name": "forget",
    "description": "Removing specified SR-record from database, without attempting to remove SR from disk",
    "result": [ "void" ],
    "params": [ 
      { "type": "SR ref",
        "name": "sr",
        "doc": "The SR to destroy" } ],
    "errors": [ 
      { "name": "SR_HAS_PBD",
        "doc": "The SR is still connected to a host via a PBD. It cannot be destroyed or forgotten." } ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Removing specified SR-record from database, without attempting to remove SR from disk" } ] }, 
  { "name": "destroy",
    "description": "Destroy specified SR, removing SR-record from database and remove SR from disk. (In order to affect this operation the appropriate device_config is read from the specified SR's PBD on current host)",
    "result": [ "void" ],
    "params": [ 
      { "type": "SR ref",
        "name": "sr",
        "doc": "The SR to destroy" } ],
    "errors": [ 
      { "name": "SR_HAS_PBD",
        "doc": "The SR is still connected to a host via a PBD. It cannot be destroyed or forgotten." } ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Destroy specified SR, removing SR-record from database and remove SR from disk. (In order to affect this operation the appropriate device_config is read from the specified SR's PBD on current host)" } ] }, 
  { "name": "make",
    "description": "Create a new Storage Repository on disk. This call is deprecated: use SR.create instead.",
    "result": [ "string", "The uuid of the newly created Storage Repository." ],
    "params": [ 
      { "type": "host ref",
        "name": "host",
        "doc": "The host to create/make the SR on" }, 
      { "type": "(string -> string) map",
        "name": "device_config",
        "doc": "The device config string that will be passed to backend SR driver" }, 
      { "type": "int",
        "name": "physical_size",
        "doc": "The physical size of the new storage repository" }, 
      { "type": "string",
        "name": "name_label",
        "doc": "The name of the new storage repository" }, 
      { "type": "string",
        "name": "name_description",
        "doc": "The description of the new storage repository" }, 
      { "type": "string",
        "name": "type",
        "doc": "The type of the SR; used to specify the SR backend driver to use" }, 
      { "type": "string",
        "name": "content_type",
        "doc": "The type of the new SRs content, if required (e.g. ISOs)" }, 
      { "type": "(string -> string) map",
        "name": "sm_config",
        "doc": "Storage backend specific configuration options" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Create a new Storage Repository on disk" }, 
      { "transition": "deprecated",
        "release": "miami",
        "description": "Use SR.create instead" } ] }, 
  { "name": "introduce",
    "description": "Introduce a new Storage Repository into the managed system",
    "result": [ "SR ref", "The reference of the newly introduced Storage Repository." ],
    "params": [ 
      { "type": "string",
        "name": "uuid",
        "doc": "The uuid assigned to the introduced SR" }, 
      { "type": "string",
        "name": "name_label",
        "doc": "The name of the new storage repository" }, 
      { "type": "string",
        "name": "name_description",
        "doc": "The description of the new storage repository" }, 
      { "type": "string",
        "name": "type",
        "doc": "The type of the SR; used to specify the SR backend driver to use" }, 
      { "type": "string",
        "name": "content_type",
        "doc": "The type of the new SRs content, if required (e.g. ISOs)" }, 
      { "type": "bool",
        "name": "shared",
        "doc": "True if the SR (is capable of) being shared by multiple hosts" }, 
      { "type": "(string -> string) map",
        "name": "sm_config",
        "doc": "Storage backend specific configuration options" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Introduce a new Storage Repository into the managed system" } ] }, 
  { "name": "create",
    "description": "Create a new Storage Repository and introduce it into the managed system, creating both SR record and PBD record to attach it to current host (with specified device_config parameters)",
    "result": [ "SR ref", "The reference of the newly created Storage Repository." ],
    "params": [ 
      { "type": "host ref",
        "name": "host",
        "doc": "The host to create/make the SR on" }, 
      { "type": "(string -> string) map",
        "name": "device_config",
        "doc": "The device config string that will be passed to backend SR driver" }, 
      { "type": "int",
        "name": "physical_size",
        "doc": "The physical size of the new storage repository" }, 
      { "type": "string",
        "name": "name_label",
        "doc": "The name of the new storage repository" }, 
      { "type": "string",
        "name": "name_description",
        "doc": "The description of the new storage repository" }, 
      { "type": "string",
        "name": "type",
        "doc": "The type of the SR; used to specify the SR backend driver to use" }, 
      { "type": "string",
        "name": "content_type",
        "doc": "The type of the new SRs content, if required (e.g. ISOs)" }, 
      { "type": "bool",
        "name": "shared",
        "doc": "True if the SR (is capable of) being shared by multiple hosts" }, 
      { "type": "(string -> string) map",
        "name": "sm_config",
        "doc": "Storage backend specific configuration options" } ],
    "errors": [ 
      { "name": "SR_UNKNOWN_DRIVER",
        "doc": "The SR could not be connected because the driver was not recognised." } ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Create a new Storage Repository and introduce it into the managed system, creating both SR record and PBD record to attach it to current host (with specified device_config parameters)" } ] } ],
"enums": [ 
  { "name": "storage_operations",
    "values": [ 
      { "name": "scan",
        "doc": "Scanning backends for new or deleted VDIs" }, 
      { "name": "destroy",
        "doc": "Destroying the SR" }, 
      { "name": "forget",
        "doc": "Forgetting about SR" }, 
      { "name": "plug",
        "doc": "Plugging a PBD into this SR" }, 
      { "name": "unplug",
        "doc": "Unplugging a PBD from this SR" }, 
      { "name": "update",
        "doc": "Refresh the fields on the SR" }, 
      { "name": "vdi_create",
        "doc": "Creating a new VDI" }, 
      { "name": "vdi_introduce",
        "doc": "Introducing a new VDI" }, 
      { "name": "vdi_destroy",
        "doc": "Destroying a VDI" }, 
      { "name": "vdi_resize",
        "doc": "Resizing a VDI" }, 
      { "name": "vdi_clone",
        "doc": "Cloneing a VDI" }, 
      { "name": "vdi_snapshot",
        "doc": "Snapshotting a VDI" }, 
      { "name": "pbd_create",
        "doc": "Creating a PBD for this SR" }, 
      { "name": "pbd_destroy",
        "doc": "Destroying one of this SR's PBDs" } ] } ],
"lifecycle": [ 
  { "transition": "published",
    "release": "rio",
    "description": "A storage repository" } ] }, { "name": "VDI",
"description": "A virtual disk image",
"fields": [ 
  { "name": "uuid",
    "description": "Unique identifier/object reference",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Unique identifier/object reference" } ] }, 
  { "name": "label",
    "description": "a human-readable name",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "a human-readable name" } ],
    "default": "\"\"" }, 
  { "name": "description",
    "description": "a notes field containing human-readable description",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "a notes field containing human-readable description" } ],
    "default": "\"\"" }, 
  { "name": "allowed_operations",
    "description": "list of the operations allowed in this state. This list is advisory only and the server state may have changed by the time this field is read by a client.",
    "type": "enum vdi_operations set",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "list of the operations allowed in this state. This list is advisory only and the server state may have changed by the time this field is read by a client." } ] }, 
  { "name": "current_operations",
    "description": "links each of the running tasks using this object (by reference) to a current_operation enum which describes the nature of the task.",
    "type": "(string -> enum vdi_operations) map",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "links each of the running tasks using this object (by reference) to a current_operation enum which describes the nature of the task." } ] }, 
  { "name": "SR",
    "description": "storage repository in which the VDI resides",
    "type": "SR ref",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "storage repository in which the VDI resides" } ] }, 
  { "name": "VBDs",
    "description": "list of vbds that refer to this disk",
    "type": "VBD ref set",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "list of vbds that refer to this disk" } ] }, 
  { "name": "crash_dumps",
    "description": "list of crash dumps that refer to this disk",
    "type": "crashdump ref set",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "list of crash dumps that refer to this disk" } ] }, 
  { "name": "virtual_size",
    "description": "size of disk as presented to the guest (in bytes). Note that, depending on storage backend type, requested size may not be respected exactly",
    "type": "int",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "size of disk as presented to the guest (in bytes). Note that, depending on storage backend type, requested size may not be respected exactly" } ] }, 
  { "name": "physical_utilisation",
    "description": "amount of physical space that the disk image is currently taking up on the storage repository (in bytes)",
    "type": "int",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "amount of physical space that the disk image is currently taking up on the storage repository (in bytes)" } ] }, 
  { "name": "type",
    "description": "type of the VDI",
    "type": "enum vdi_type",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "type of the VDI" } ] }, 
  { "name": "sharable",
    "description": "true if this disk may be shared",
    "type": "bool",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "true if this disk may be shared" } ] }, 
  { "name": "read_only",
    "description": "true if this disk may ONLY be mounted read-only",
    "type": "bool",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "true if this disk may ONLY be mounted read-only" } ] }, 
  { "name": "other_config",
    "description": "additional configuration",
    "type": "(string -> string) map",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "additional configuration" } ] }, 
  { "name": "storage_lock",
    "description": "true if this disk is locked at the storage level",
    "type": "bool",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "true if this disk is locked at the storage level" } ] }, 
  { "name": "location",
    "description": "location information",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "miami",
        "description": "location information" } ],
    "default": "\"\"" }, 
  { "name": "managed",
    "description": "",
    "type": "bool",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "" } ] }, 
  { "name": "missing",
    "description": "true if SR scan operation reported this VDI as not present on disk",
    "type": "bool",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "true if SR scan operation reported this VDI as not present on disk" } ] }, 
  { "name": "parent",
    "description": "References the parent disk, if this VDI is part of a chain",
    "type": "VDI ref",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "References the parent disk, if this VDI is part of a chain" } ] }, 
  { "name": "xenstore_data",
    "description": "data to be inserted into the xenstore tree (/local/domain/0/backend/vbd/<domid>/<device-id>/sm-data) after the VDI is attached. This is generally set by the SM backends on vdi_attach.",
    "type": "(string -> string) map",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "miami",
        "description": "data to be inserted into the xenstore tree (/local/domain/0/backend/vbd/<domid>/<device-id>/sm-data) after the VDI is attached. This is generally set by the SM backends on vdi_attach." } ],
    "default": "{}" }, 
  { "name": "sm_config",
    "description": "SM dependent data",
    "type": "(string -> string) map",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "miami",
        "description": "SM dependent data" } ],
    "default": "{}" }, 
  { "name": "is_a_snapshot",
    "description": "true if this is a snapshot.",
    "type": "bool",
    "qualifier": "read only",
    "tag": "snapshots",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "true if this is a snapshot." } ],
    "default": "false" }, 
  { "name": "snapshot_of",
    "description": "Ref pointing to the VDI this snapshot is of.",
    "type": "VDI ref",
    "qualifier": "read only",
    "tag": "snapshots",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "Ref pointing to the VDI this snapshot is of." } ],
    "default": "Null" }, 
  { "name": "snapshots",
    "description": "List pointing to all the VDIs snapshots.",
    "type": "VDI ref set",
    "qualifier": "read only",
    "tag": "snapshots",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "List pointing to all the VDIs snapshots." } ] }, 
  { "name": "snapshot_time",
    "description": "Date/time when this snapshot was created.",
    "type": "datetime",
    "qualifier": "read only",
    "tag": "snapshots",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "Date/time when this snapshot was created." } ],
    "default": "19700101T00:00:00Z" }, 
  { "name": "tags",
    "description": "user-specified tags for categorization purposes",
    "type": "string set",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "user-specified tags for categorization purposes" } ],
    "default": "{}" }, 
  { "name": "allow_caching",
    "description": "true if this VDI is to be cached in the local cache SR",
    "type": "bool",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "cowley",
        "description": "true if this VDI is to be cached in the local cache SR" } ],
    "default": "false" }, 
  { "name": "on_boot",
    "description": "The behaviour of this VDI on a VM boot",
    "type": "enum on_boot",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "cowley",
        "description": "The behaviour of this VDI on a VM boot" } ],
    "default": "persist" }, 
  { "name": "metadata_of_pool",
    "description": "The pool whose metadata is contained in this VDI",
    "type": "pool ref",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "boston",
        "description": "The pool whose metadata is contained in this VDI" } ],
    "default": "OpaqueRef:NULL" }, 
  { "name": "metadata_latest",
    "description": "Whether this VDI contains the latest known accessible metadata for the pool",
    "type": "bool",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "boston",
        "description": "Whether this VDI contains the latest known accessible metadata for the pool" } ],
    "default": "false" } ],
"messages": [ 
  { "name": "pool_migrate",
    "description": "Migrate a VDI, which may be attached to a running guest, to a different SR. The destination SR must be visible to the guest.",
    "result": [ "VDI ref", "The new reference of the migrated VDI." ],
    "params": [ 
      { "type": "VDI ref",
        "name": "vdi",
        "doc": "The VDI to migrate" }, 
      { "type": "SR ref",
        "name": "sr",
        "doc": "The destination SR" }, 
      { "type": "(string -> string) map",
        "name": "options",
        "doc": "Other parameters" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "tampa",
        "description": "Migrate a VDI, which may be attached to a running guest, to a different SR. The destination SR must be visible to the guest." } ] }, 
  { "name": "read_database_pool_uuid",
    "description": "Check the VDI cache for the pool UUID of the database on this VDI.",
    "result": [ "string", "The cached pool UUID of the database on the VDI." ],
    "params": [ 
      { "type": "VDI ref",
        "name": "self",
        "doc": "The metadata VDI to look up in the cache." } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin", "vm-operator", "read-only" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "boston",
        "description": "Check the VDI cache for the pool UUID of the database on this VDI." } ] }, 
  { "name": "open_database",
    "description": "Load the metadata found on the supplied VDI and return a session reference which can be used in XenAPI calls to query its contents.",
    "result": [ "session ref", "A session which can be used to query the database" ],
    "params": [ 
      { "type": "VDI ref",
        "name": "self",
        "doc": "The VDI which contains the database to open" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "boston",
        "description": "Load the metadata found on the supplied VDI and return a session reference which can be used in XenAPI calls to query its contents." } ] }, 
  { "name": "set_allow_caching",
    "description": "Set the value of the allow_caching parameter. This value can only be changed when the VDI is not attached to a running VM. The caching behaviour is only affected by this flag for VHD-based VDIs that have one parent and no child VHDs. Moreover, caching only takes place when the host running the VM containing this VDI has a nominated SR for local caching.",
    "result": [ "void" ],
    "params": [ 
      { "type": "VDI ref",
        "name": "self",
        "doc": "The VDI to modify" }, 
      { "type": "bool",
        "name": "value",
        "doc": "The value to set" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "cowley",
        "description": "Set the value of the allow_caching parameter. This value can only be changed when the VDI is not attached to a running VM. The caching behaviour is only affected by this flag for VHD-based VDIs that have one parent and no child VHDs. Moreover, caching only takes place when the host running the VM containing this VDI has a nominated SR for local caching." } ] }, 
  { "name": "set_on_boot",
    "description": "Set the value of the on_boot parameter. This value can only be changed when the VDI is not attached to a running VM.",
    "result": [ "void" ],
    "params": [ 
      { "type": "VDI ref",
        "name": "self",
        "doc": "The VDI to modify" }, 
      { "type": "enum on_boot",
        "name": "value",
        "doc": "The value to set" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "cowley",
        "description": "Set the value of the on_boot parameter. This value can only be changed when the VDI is not attached to a running VM." } ] }, 
  { "name": "set_name_description",
    "description": "Set the name description of the VDI. This can only happen when its SR is currently attached.",
    "result": [ "void" ],
    "params": [ 
      { "type": "VDI ref",
        "name": "self",
        "doc": "The VDI to modify" }, 
      { "type": "string",
        "name": "value",
        "doc": "The name description for the VDI" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Set the name description of the VDI. This can only happen when its SR is currently attached." } ] }, 
  { "name": "set_name_label",
    "description": "Set the name label of the VDI. This can only happen when then its SR is currently attached.",
    "result": [ "void" ],
    "params": [ 
      { "type": "VDI ref",
        "name": "self",
        "doc": "The VDI to modify" }, 
      { "type": "string",
        "name": "value",
        "doc": "The name lable for the VDI" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Set the name label of the VDI. This can only happen when then its SR is currently attached." } ] }, 
  { "name": "set_metadata_of_pool",
    "description": "Records the pool whose metadata is contained by this VDI.",
    "result": [ "void" ],
    "params": [ 
      { "type": "VDI ref",
        "name": "self",
        "doc": "The VDI to modify" }, 
      { "type": "pool ref",
        "name": "value",
        "doc": "The pool whose metadata is contained by this VDI" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "boston",
        "description": "Records the pool whose metadata is contained by this VDI." } ] }, 
  { "name": "set_snapshot_time",
    "description": "Sets the snapshot time of this VDI.",
    "result": [ "void" ],
    "params": [ 
      { "type": "VDI ref",
        "name": "self",
        "doc": "The VDI to modify" }, 
      { "type": "datetime",
        "name": "value",
        "doc": "The snapshot time of this VDI." } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "boston",
        "description": "Sets the snapshot time of this VDI." } ] }, 
  { "name": "set_snapshot_of",
    "description": "Sets the VDI of which this VDI is a snapshot",
    "result": [ "void" ],
    "params": [ 
      { "type": "VDI ref",
        "name": "self",
        "doc": "The VDI to modify" }, 
      { "type": "VDI ref",
        "name": "value",
        "doc": "The VDI of which this VDI is a snapshot" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "boston",
        "description": "Sets the VDI of which this VDI is a snapshot" } ] }, 
  { "name": "set_is_a_snapshot",
    "description": "Sets whether this VDI is a snapshot",
    "result": [ "void" ],
    "params": [ 
      { "type": "VDI ref",
        "name": "self",
        "doc": "The VDI to modify" }, 
      { "type": "bool",
        "name": "value",
        "doc": "The new value indicating whether this VDI is a snapshot" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "boston",
        "description": "Sets whether this VDI is a snapshot" } ] }, 
  { "name": "set_physical_utilisation",
    "description": "Sets the VDI's physical_utilisation field",
    "result": [ "void" ],
    "params": [ 
      { "type": "VDI ref",
        "name": "self",
        "doc": "The VDI to modify" }, 
      { "type": "int",
        "name": "value",
        "doc": "The new value of the VDI's physical utilisation" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "miami",
        "description": "Sets the VDI's physical_utilisation field" } ] }, 
  { "name": "set_virtual_size",
    "description": "Sets the VDI's virtual_size field",
    "result": [ "void" ],
    "params": [ 
      { "type": "VDI ref",
        "name": "self",
        "doc": "The VDI to modify" }, 
      { "type": "int",
        "name": "value",
        "doc": "The new value of the VDI's virtual size" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "miami",
        "description": "Sets the VDI's virtual_size field" } ] }, 
  { "name": "set_missing",
    "description": "Sets the VDI's missing field",
    "result": [ "void" ],
    "params": [ 
      { "type": "VDI ref",
        "name": "self",
        "doc": "The VDI to modify" }, 
      { "type": "bool",
        "name": "value",
        "doc": "The new value of the VDI's missing field" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "miami",
        "description": "Sets the VDI's missing field" } ] }, 
  { "name": "set_read_only",
    "description": "Sets the VDI's read_only field",
    "result": [ "void" ],
    "params": [ 
      { "type": "VDI ref",
        "name": "self",
        "doc": "The VDI to modify" }, 
      { "type": "bool",
        "name": "value",
        "doc": "The new value of the VDI's read_only field" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Sets the VDI's read_only field" } ] }, 
  { "name": "set_sharable",
    "description": "Sets the VDI's sharable field",
    "result": [ "void" ],
    "params": [ 
      { "type": "VDI ref",
        "name": "self",
        "doc": "The VDI to modify" }, 
      { "type": "bool",
        "name": "value",
        "doc": "The new value of the VDI's sharable field" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "george",
        "description": "Sets the VDI's sharable field" } ] }, 
  { "name": "forget",
    "description": "Removes a VDI record from the database",
    "result": [ "void" ],
    "params": [ 
      { "type": "VDI ref",
        "name": "vdi",
        "doc": "The VDI to forget about" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Removes a VDI record from the database" } ] }, 
  { "name": "set_managed",
    "description": "Sets the VDI's managed field",
    "result": [ "void" ],
    "params": [ 
      { "type": "VDI ref",
        "name": "self",
        "doc": "The VDI to modify" }, 
      { "type": "bool",
        "name": "value",
        "doc": "The new value of the VDI's managed field" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Sets the VDI's managed field" } ] }, 
  { "name": "copy",
    "description": "Copy either a full VDI or the block differences between two VDIs into either a fresh VDI or an existing VDI.",
    "result": [ "VDI ref", "The reference of the VDI where the blocks were written." ],
    "params": [ 
      { "type": "VDI ref",
        "name": "vdi",
        "doc": "The VDI to copy" }, 
      { "type": "SR ref",
        "name": "sr",
        "doc": "The destination SR (only required if the destination VDI is not specified" }, 
      { "type": "VDI ref",
        "name": "base_vdi",
        "doc": "The base VDI (only required if copying only changed blocks, by default all blocks will be copied)" }, 
      { "type": "VDI ref",
        "name": "into_vdi",
        "doc": "The destination VDI to copy blocks into (if omitted then a destination SR must be provided and a fresh VDI will be created)" } ],
    "errors": [ 
      { "name": "VDI_READONLY",
        "doc": "The operation required write access but this VDI is read-only" }, 
      { "name": "VDI_TOO_SMALL",
        "doc": "The VDI is too small. Please resize it to at least the minimum size." }, 
      { "name": "VDI_NOT_SPARSE",
        "doc": "The VDI is not stored using a sparse format. It is not possible to query and manipulate only the changed blocks (or 'block differences' or 'disk deltas') between two VDIs. Please select a VDI which uses a sparse-aware technology such as VHD." } ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Copies a VDI to an SR. There must be a host that can see both the source and destination SRs simultaneously" }, 
      { "transition": "extended",
        "release": "cowley",
        "description": "The copy can now be performed between any two SRs." }, 
      { "transition": "extended",
        "release": "clearwater-felton",
        "description": "The copy can now be performed into a pre-created VDI. It is now possible to request copying only changed blocks from a base VDI" } ] }, 
  { "name": "update",
    "description": "Ask the storage backend to refresh the fields in the VDI object",
    "result": [ "void" ],
    "params": [ 
      { "type": "VDI ref",
        "name": "vdi",
        "doc": "The VDI whose stats (eg size) should be updated" } ],
    "errors": [ 
      { "name": "SR_OPERATION_NOT_SUPPORTED",
        "doc": "The SR backend does not support the operation (check the SR's allowed operations)" } ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "symc",
        "description": "Ask the storage backend to refresh the fields in the VDI object" } ] }, 
  { "name": "db_forget",
    "description": "Removes a VDI record from the database",
    "result": [ "void" ],
    "params": [ 
      { "type": "VDI ref",
        "name": "vdi",
        "doc": "The VDI to forget about" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "miami",
        "description": "Removes a VDI record from the database" } ] }, 
  { "name": "db_introduce",
    "description": "Create a new VDI record in the database only",
    "result": [ "VDI ref", "The ref of the newly created VDI record." ],
    "params": [ 
      { "type": "string",
        "name": "uuid",
        "doc": "The uuid of the disk to introduce" }, 
      { "type": "string",
        "name": "name_label",
        "doc": "The name of the disk record" }, 
      { "type": "string",
        "name": "name_description",
        "doc": "The description of the disk record" }, 
      { "type": "SR ref",
        "name": "SR",
        "doc": "The SR that the VDI is in" }, 
      { "type": "enum vdi_type",
        "name": "type",
        "doc": "The type of the VDI" }, 
      { "type": "bool",
        "name": "sharable",
        "doc": "true if this disk may be shared" }, 
      { "type": "bool",
        "name": "read_only",
        "doc": "true if this disk may ONLY be mounted read-only" }, 
      { "type": "(string -> string) map",
        "name": "other_config",
        "doc": "additional configuration" }, 
      { "type": "string",
        "name": "location",
        "doc": "location information" }, 
      { "type": "(string -> string) map",
        "name": "xenstore_data",
        "doc": "Data to insert into xenstore" }, 
      { "type": "(string -> string) map",
        "name": "sm_config",
        "doc": "Storage-specific config" }, 
      { "type": "bool",
        "name": "managed",
        "doc": "Storage-specific config" }, 
      { "type": "int",
        "name": "virtual_size",
        "doc": "Storage-specific config" }, 
      { "type": "int",
        "name": "physical_utilisation",
        "doc": "Storage-specific config" }, 
      { "type": "pool ref",
        "name": "metadata_of_pool",
        "doc": "Storage-specific config" }, 
      { "type": "bool",
        "name": "is_a_snapshot",
        "doc": "Storage-specific config" }, 
      { "type": "datetime",
        "name": "snapshot_time",
        "doc": "Storage-specific config" }, 
      { "type": "VDI ref",
        "name": "snapshot_of",
        "doc": "Storage-specific config" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Create a new VDI record in the database only" } ] }, 
  { "name": "introduce",
    "description": "Create a new VDI record in the database only",
    "result": [ "VDI ref", "The ref of the newly created VDI record." ],
    "params": [ 
      { "type": "string",
        "name": "uuid",
        "doc": "The uuid of the disk to introduce" }, 
      { "type": "string",
        "name": "name_label",
        "doc": "The name of the disk record" }, 
      { "type": "string",
        "name": "name_description",
        "doc": "The description of the disk record" }, 
      { "type": "SR ref",
        "name": "SR",
        "doc": "The SR that the VDI is in" }, 
      { "type": "enum vdi_type",
        "name": "type",
        "doc": "The type of the VDI" }, 
      { "type": "bool",
        "name": "sharable",
        "doc": "true if this disk may be shared" }, 
      { "type": "bool",
        "name": "read_only",
        "doc": "true if this disk may ONLY be mounted read-only" }, 
      { "type": "(string -> string) map",
        "name": "other_config",
        "doc": "additional configuration" }, 
      { "type": "string",
        "name": "location",
        "doc": "location information" }, 
      { "type": "(string -> string) map",
        "name": "xenstore_data",
        "doc": "Data to insert into xenstore" }, 
      { "type": "(string -> string) map",
        "name": "sm_config",
        "doc": "Storage-specific config" }, 
      { "type": "bool",
        "name": "managed",
        "doc": "Storage-specific config" }, 
      { "type": "int",
        "name": "virtual_size",
        "doc": "Storage-specific config" }, 
      { "type": "int",
        "name": "physical_utilisation",
        "doc": "Storage-specific config" }, 
      { "type": "pool ref",
        "name": "metadata_of_pool",
        "doc": "Storage-specific config" }, 
      { "type": "bool",
        "name": "is_a_snapshot",
        "doc": "Storage-specific config" }, 
      { "type": "datetime",
        "name": "snapshot_time",
        "doc": "Storage-specific config" }, 
      { "type": "VDI ref",
        "name": "snapshot_of",
        "doc": "Storage-specific config" } ],
    "errors": [ 
      { "name": "SR_OPERATION_NOT_SUPPORTED",
        "doc": "The SR backend does not support the operation (check the SR's allowed operations)" } ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "miami",
        "description": "Create a new VDI record in the database only" } ] }, 
  { "name": "resize_online",
    "description": "Resize the VDI which may or may not be attached to running guests.",
    "result": [ "void" ],
    "params": [ 
      { "type": "VDI ref",
        "name": "vdi",
        "doc": "The VDI to resize" }, 
      { "type": "int",
        "name": "size",
        "doc": "The new size of the VDI" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Resize the VDI which may or may not be attached to running guests." } ] }, 
  { "name": "resize",
    "description": "Resize the VDI.",
    "result": [ "void" ],
    "params": [ 
      { "type": "VDI ref",
        "name": "vdi",
        "doc": "The VDI to resize" }, 
      { "type": "int",
        "name": "size",
        "doc": "The new size of the VDI" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Resize the VDI." } ] }, 
  { "name": "clone",
    "description": "Take an exact copy of the VDI and return a reference to the new disk. If any driver_params are specified then these are passed through to the storage-specific substrate driver that implements the clone operation. NB the clone lives in the same Storage Repository as its parent.",
    "result": [ "VDI ref", "The ID of the newly created VDI." ],
    "params": [ 
      { "type": "VDI ref",
        "name": "vdi",
        "doc": "The VDI to clone" }, 
      { "type": "(string -> string) map",
        "name": "driver_params",
        "doc": "Optional parameters that are passed through to the backend driver in order to specify storage-type-specific clone options" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin" ],
    "tag": "snapshots",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Take an exact copy of the VDI and return a reference to the new disk. If any driver_params are specified then these are passed through to the storage-specific substrate driver that implements the clone operation. NB the clone lives in the same Storage Repository as its parent." } ] }, 
  { "name": "snapshot",
    "description": "Take a read-only snapshot of the VDI, returning a reference to the snapshot. If any driver_params are specified then these are passed through to the storage-specific substrate driver that takes the snapshot. NB the snapshot lives in the same Storage Repository as its parent.",
    "result": [ "VDI ref", "The ID of the newly created VDI." ],
    "params": [ 
      { "type": "VDI ref",
        "name": "vdi",
        "doc": "The VDI to snapshot" }, 
      { "type": "(string -> string) map",
        "name": "driver_params",
        "doc": "Optional parameters that can be passed through to backend driver in order to specify storage-type-specific snapshot options" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin" ],
    "tag": "snapshots",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Take a read-only snapshot of the VDI, returning a reference to the snapshot. If any driver_params are specified then these are passed through to the storage-specific substrate driver that takes the snapshot. NB the snapshot lives in the same Storage Repository as its parent." } ] } ],
"enums": [ 
  { "name": "vdi_operations",
    "values": [ 
      { "name": "scan",
        "doc": "Scanning backends for new or deleted VDIs" }, 
      { "name": "clone",
        "doc": "Cloning the VDI" }, 
      { "name": "copy",
        "doc": "Copying the VDI" }, 
      { "name": "resize",
        "doc": "Resizing the VDI" }, 
      { "name": "resize_online",
        "doc": "Resizing the VDI which may or may not be online" }, 
      { "name": "snapshot",
        "doc": "Snapshotting the VDI" }, 
      { "name": "destroy",
        "doc": "Destroying the VDI" }, 
      { "name": "forget",
        "doc": "Forget about the VDI" }, 
      { "name": "update",
        "doc": "Refreshing the fields of the VDI" }, 
      { "name": "force_unlock",
        "doc": "Forcibly unlocking the VDI" }, 
      { "name": "generate_config",
        "doc": "Generating static configuration" }, 
      { "name": "blocked",
        "doc": "Operations on this VDI are temporarily blocked" } ] }, 
  { "name": "vdi_type",
    "values": [ 
      { "name": "system",
        "doc": "a disk that may be replaced on upgrade" }, 
      { "name": "user",
        "doc": "a disk that is always preserved on upgrade" }, 
      { "name": "ephemeral",
        "doc": "a disk that may be reformatted on upgrade" }, 
      { "name": "suspend",
        "doc": "a disk that stores a suspend image" }, 
      { "name": "crashdump",
        "doc": "a disk that stores VM crashdump information" }, 
      { "name": "ha_statefile",
        "doc": "a disk used for HA storage heartbeating" }, 
      { "name": "metadata",
        "doc": "a disk used for HA Pool metadata" }, 
      { "name": "redo_log",
        "doc": "a disk used for a general metadata redo-log" } ] }, 
  { "name": "on_boot",
    "values": [ 
      { "name": "reset",
        "doc": "When a VM containing this VDI is started, the contents of the VDI are reset to the state they were in when this flag was last set." }, 
      { "name": "persist",
        "doc": "Standard behaviour." } ] } ],
"lifecycle": [ 
  { "transition": "published",
    "release": "rio",
    "description": "A virtual disk image" } ] }, { "name": "VBD",
"description": "A virtual block device",
"fields": [ 
  { "name": "uuid",
    "description": "Unique identifier/object reference",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Unique identifier/object reference" } ] }, 
  { "name": "allowed_operations",
    "description": "list of the operations allowed in this state. This list is advisory only and the server state may have changed by the time this field is read by a client.",
    "type": "enum vbd_operations set",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "list of the operations allowed in this state. This list is advisory only and the server state may have changed by the time this field is read by a client." } ] }, 
  { "name": "current_operations",
    "description": "links each of the running tasks using this object (by reference) to a current_operation enum which describes the nature of the task.",
    "type": "(string -> enum vbd_operations) map",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "links each of the running tasks using this object (by reference) to a current_operation enum which describes the nature of the task." } ] }, 
  { "name": "VM",
    "description": "the virtual machine",
    "type": "VM ref",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "the virtual machine" } ] }, 
  { "name": "VDI",
    "description": "the virtual disk",
    "type": "VDI ref",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "the virtual disk" } ] }, 
  { "name": "device",
    "description": "device seen by the guest e.g. hda1",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "device seen by the guest e.g. hda1" } ] }, 
  { "name": "userdevice",
    "description": "user-friendly device name e.g. 0,1,2,etc.",
    "type": "string",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "user-friendly device name e.g. 0,1,2,etc." } ] }, 
  { "name": "bootable",
    "description": "true if this VBD is bootable",
    "type": "bool",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "true if this VBD is bootable" } ] }, 
  { "name": "mode",
    "description": "the mode the VBD should be mounted with",
    "type": "enum vbd_mode",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "the mode the VBD should be mounted with" } ] }, 
  { "name": "type",
    "description": "how the VBD will appear to the guest (e.g. disk or CD)",
    "type": "enum vbd_type",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "how the VBD will appear to the guest (e.g. disk or CD)" } ] }, 
  { "name": "unpluggable",
    "description": "true if this VBD will support hot-unplug",
    "type": "bool",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "miami",
        "description": "true if this VBD will support hot-unplug" } ],
    "default": "true" }, 
  { "name": "storage_lock",
    "description": "true if a storage level lock was acquired",
    "type": "bool",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "true if a storage level lock was acquired" } ] }, 
  { "name": "empty",
    "description": "if true this represents an empty drive",
    "type": "bool",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "if true this represents an empty drive" } ] }, 
  { "name": "other_config",
    "description": "additional configuration",
    "type": "(string -> string) map",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "additional configuration" } ] }, 
  { "name": "currently_attached",
    "description": "is the device currently attached (erased on reboot)",
    "type": "bool",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "is the device currently attached (erased on reboot)" } ] }, 
  { "name": "status_code",
    "description": "error/success code associated with last attach-operation (erased on reboot)",
    "type": "int",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "error/success code associated with last attach-operation (erased on reboot)" } ] }, 
  { "name": "status_detail",
    "description": "error/success information associated with last attach-operation status (erased on reboot)",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "error/success information associated with last attach-operation status (erased on reboot)" } ] }, 
  { "name": "runtime_properties",
    "description": "Device runtime properties",
    "type": "(string -> string) map",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Device runtime properties" } ] }, 
  { "name": "algorithm_type",
    "description": "QoS algorithm to use",
    "type": "string",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "QoS algorithm to use" } ] }, 
  { "name": "algorithm_params",
    "description": "parameters for chosen QoS algorithm",
    "type": "(string -> string) map",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "parameters for chosen QoS algorithm" } ] }, 
  { "name": "supported_algorithms",
    "description": "supported QoS algorithms for this VBD",
    "type": "string set",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "supported QoS algorithms for this VBD" } ] }, 
  { "name": "metrics",
    "description": "metrics associated with this VBD",
    "type": "VBD_metrics ref",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "metrics associated with this VBD" } ] } ],
"messages": [ 
  { "name": "assert_attachable",
    "description": "Throws an error if this VBD could not be attached to this VM if the VM were running. Intended for debugging.",
    "result": [ "void" ],
    "params": [ 
      { "type": "VBD ref",
        "name": "self",
        "doc": "The VBD to query" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Throws an error if this VBD could not be attached to this VM if the VM were running. Intended for debugging." } ] }, 
  { "name": "unplug_force",
    "description": "Forcibly unplug the specified VBD",
    "result": [ "void" ],
    "params": [ 
      { "type": "VBD ref",
        "name": "self",
        "doc": "The VBD to forcibly unplug" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Forcibly unplug the specified VBD" } ] }, 
  { "name": "unplug",
    "description": "Hot-unplug the specified VBD, dynamically unattaching it from the running VM",
    "result": [ "void" ],
    "params": [ 
      { "type": "VBD ref",
        "name": "self",
        "doc": "The VBD to hot-unplug" } ],
    "errors": [ 
      { "name": "DEVICE_DETACH_REJECTED",
        "doc": "The VM rejected the attempt to detach the device." }, 
      { "name": "DEVICE_ALREADY_DETACHED",
        "doc": "The device is not currently attached" } ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Hot-unplug the specified VBD, dynamically unattaching it from the running VM" } ] }, 
  { "name": "plug",
    "description": "Hotplug the specified VBD, dynamically attaching it to the running VM",
    "result": [ "void" ],
    "params": [ 
      { "type": "VBD ref",
        "name": "self",
        "doc": "The VBD to hotplug" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Hotplug the specified VBD, dynamically attaching it to the running VM" } ] }, 
  { "name": "insert",
    "description": "Insert new media into the device",
    "result": [ "void" ],
    "params": [ 
      { "type": "VBD ref",
        "name": "vbd",
        "doc": "The vbd representing the CDROM-like device" }, 
      { "type": "VDI ref",
        "name": "vdi",
        "doc": "The new VDI to 'insert'" } ],
    "errors": [ 
      { "name": "VBD_NOT_REMOVABLE_MEDIA",
        "doc": "Media could not be ejected because it is not removable" }, 
      { "name": "VBD_NOT_EMPTY",
        "doc": "Operation could not be performed because the drive is not empty" } ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin", "vm-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Insert new media into the device" } ] }, 
  { "name": "eject",
    "description": "Remove the media from the device and leave it empty",
    "result": [ "void" ],
    "params": [ 
      { "type": "VBD ref",
        "name": "vbd",
        "doc": "The vbd representing the CDROM-like device" } ],
    "errors": [ 
      { "name": "VBD_NOT_REMOVABLE_MEDIA",
        "doc": "Media could not be ejected because it is not removable" }, 
      { "name": "VBD_IS_EMPTY",
        "doc": "Operation could not be performed because the drive is empty" } ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin", "vm-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Remove the media from the device and leave it empty" } ] } ],
"enums": [ 
  { "name": "vbd_type",
    "values": [ 
      { "name": "CD",
        "doc": "VBD will appear to guest as CD" }, 
      { "name": "Disk",
        "doc": "VBD will appear to guest as disk" }, 
      { "name": "Floppy",
        "doc": "VBD will appear as a floppy" } ] }, 
  { "name": "vbd_mode",
    "values": [ 
      { "name": "RO",
        "doc": "only read-only access will be allowed" }, 
      { "name": "RW",
        "doc": "read-write access will be allowed" } ] }, 
  { "name": "vbd_operations",
    "values": [ 
      { "name": "attach",
        "doc": "Attempting to attach this VBD to a VM" }, 
      { "name": "eject",
        "doc": "Attempting to eject the media from this VBD" }, 
      { "name": "insert",
        "doc": "Attempting to insert new media into this VBD" }, 
      { "name": "plug",
        "doc": "Attempting to hotplug this VBD" }, 
      { "name": "unplug",
        "doc": "Attempting to hot unplug this VBD" }, 
      { "name": "unplug_force",
        "doc": "Attempting to forcibly unplug this VBD" }, 
      { "name": "pause",
        "doc": "Attempting to pause a block device backend" }, 
      { "name": "unpause",
        "doc": "Attempting to unpause a block device backend" } ] } ],
"lifecycle": [ 
  { "transition": "published",
    "release": "rio",
    "description": "A virtual block device" } ] }, { "name": "VBD_metrics",
"description": "The metrics associated with a virtual block device",
"fields": [ 
  { "name": "uuid",
    "description": "Unique identifier/object reference",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Unique identifier/object reference" } ] }, 
  { "name": "read_kbs",
    "description": "Read bandwidth (KiB/s)",
    "type": "float",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Read bandwidth (KiB/s)" } ] }, 
  { "name": "write_kbs",
    "description": "Write bandwidth (KiB/s)",
    "type": "float",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Write bandwidth (KiB/s)" } ] }, 
  { "name": "last_updated",
    "description": "Time at which this information was last updated",
    "type": "datetime",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Time at which this information was last updated" } ] }, 
  { "name": "other_config",
    "description": "additional configuration",
    "type": "(string -> string) map",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "additional configuration" } ],
    "default": "{}" } ],
"messages": [  ],
"enums": [  ],
"lifecycle": [ 
  { "transition": "published",
    "release": "rio",
    "description": "The metrics associated with a virtual block device" } ] }, { "name": "PBD",
"description": "The physical block devices through which hosts access SRs",
"fields": [ 
  { "name": "uuid",
    "description": "Unique identifier/object reference",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Unique identifier/object reference" } ] }, 
  { "name": "host",
    "description": "physical machine on which the pbd is available",
    "type": "host ref",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "physical machine on which the pbd is available" } ] }, 
  { "name": "SR",
    "description": "the storage repository that the pbd realises",
    "type": "SR ref",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "the storage repository that the pbd realises" } ] }, 
  { "name": "device_config",
    "description": "a config string to string map that is provided to the host's SR-backend-driver",
    "type": "(string -> string) map",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "a config string to string map that is provided to the host's SR-backend-driver" } ] }, 
  { "name": "currently_attached",
    "description": "is the SR currently attached on this host?",
    "type": "bool",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "is the SR currently attached on this host?" } ] }, 
  { "name": "other_config",
    "description": "additional configuration",
    "type": "(string -> string) map",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "miami",
        "description": "additional configuration" } ],
    "default": "{}" } ],
"messages": [ 
  { "name": "set_device_config",
    "description": "Sets the PBD's device_config field",
    "result": [ "void" ],
    "params": [ 
      { "type": "PBD ref",
        "name": "self",
        "doc": "The PBD to modify" }, 
      { "type": "(string -> string) map",
        "name": "value",
        "doc": "The new value of the PBD's device_config" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "miami",
        "description": "Sets the PBD's device_config field" } ] }, 
  { "name": "unplug",
    "description": "Deactivate the specified PBD, causing the referenced SR to be detached and nolonger scanned",
    "result": [ "void" ],
    "params": [ 
      { "type": "PBD ref",
        "name": "self",
        "doc": "The PBD to deactivate" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Deactivate the specified PBD, causing the referenced SR to be detached and nolonger scanned" } ] }, 
  { "name": "plug",
    "description": "Activate the specified PBD, causing the referenced SR to be attached and scanned",
    "result": [ "void" ],
    "params": [ 
      { "type": "PBD ref",
        "name": "self",
        "doc": "The PBD to activate" } ],
    "errors": [ 
      { "name": "SR_UNKNOWN_DRIVER",
        "doc": "The SR could not be connected because the driver was not recognised." } ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Activate the specified PBD, causing the referenced SR to be attached and scanned" } ] } ],
"enums": [  ],
"lifecycle": [ 
  { "transition": "published",
    "release": "rio",
    "description": "The physical block devices through which hosts access SRs" } ] }, { "name": "crashdump",
"description": "A VM crashdump",
"fields": [ 
  { "name": "uuid",
    "description": "Unique identifier/object reference",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Unique identifier/object reference" } ] }, 
  { "name": "VM",
    "description": "the virtual machine",
    "type": "VM ref",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "the virtual machine" } ] }, 
  { "name": "VDI",
    "description": "the virtual disk",
    "type": "VDI ref",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "the virtual disk" } ] }, 
  { "name": "other_config",
    "description": "additional configuration",
    "type": "(string -> string) map",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "miami",
        "description": "additional configuration" } ],
    "default": "{}" } ],
"messages": [ 
  { "name": "destroy",
    "description": "Destroy the specified crashdump",
    "result": [ "void" ],
    "params": [ 
      { "type": "crashdump ref",
        "name": "self",
        "doc": "The crashdump to destroy" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Destroy the specified crashdump" } ] } ],
"enums": [  ],
"lifecycle": [ 
  { "transition": "published",
    "release": "rio",
    "description": "A VM crashdump" } ] }, { "name": "VTPM",
"description": "A virtual TPM device",
"fields": [ 
  { "name": "uuid",
    "description": "Unique identifier/object reference",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Unique identifier/object reference" } ] }, 
  { "name": "VM",
    "description": "the virtual machine",
    "type": "VM ref",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "the virtual machine" } ] }, 
  { "name": "backend",
    "description": "the domain where the backend is located",
    "type": "VM ref",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "the domain where the backend is located" } ] } ],
"messages": [  ],
"enums": [  ],
"lifecycle": [ 
  { "transition": "published",
    "release": "rio",
    "description": "A virtual TPM device" } ] }, { "name": "console",
"description": "A console",
"fields": [ 
  { "name": "uuid",
    "description": "Unique identifier/object reference",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Unique identifier/object reference" } ] }, 
  { "name": "protocol",
    "description": "the protocol used by this console",
    "type": "enum console_protocol",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "the protocol used by this console" } ] }, 
  { "name": "location",
    "description": "URI for the console service",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "URI for the console service" } ] }, 
  { "name": "VM",
    "description": "VM to which this console is attached",
    "type": "VM ref",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "VM to which this console is attached" } ] }, 
  { "name": "other_config",
    "description": "additional configuration",
    "type": "(string -> string) map",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "additional configuration" } ] } ],
"messages": [  ],
"enums": [ 
  { "name": "console_protocol",
    "values": [ 
      { "name": "vt100",
        "doc": "VT100 terminal" }, 
      { "name": "rfb",
        "doc": "Remote FrameBuffer protocol (as used in VNC)" }, 
      { "name": "rdp",
        "doc": "Remote Desktop Protocol" } ] } ],
"lifecycle": [ 
  { "transition": "published",
    "release": "rio",
    "description": "A console" } ] }, { "name": "user",
"description": "A user of the system",
"fields": [ 
  { "name": "uuid",
    "description": "Unique identifier/object reference",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Unique identifier/object reference" } ] }, 
  { "name": "short_name",
    "description": "short name (e.g. userid)",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "short name (e.g. userid)" } ] }, 
  { "name": "fullname",
    "description": "full name",
    "type": "string",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "full name" } ] }, 
  { "name": "other_config",
    "description": "additional configuration",
    "type": "(string -> string) map",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "additional configuration" } ],
    "default": "{}" } ],
"messages": [  ],
"enums": [  ],
"lifecycle": [ 
  { "transition": "published",
    "release": "rio",
    "description": "A user of the system" }, 
  { "transition": "deprecated",
    "release": "george",
    "description": "Deprecated in favor of subject" } ] }, { "name": "data_source",
"description": "Data sources for logging in RRDs",
"fields": [ 
  { "name": "label",
    "description": "a human-readable name",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "a human-readable name" } ],
    "default": "\"\"" }, 
  { "name": "description",
    "description": "a notes field containing human-readable description",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "a notes field containing human-readable description" } ],
    "default": "\"\"" }, 
  { "name": "enabled",
    "description": "true if the data source is being logged",
    "type": "bool",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "true if the data source is being logged" } ] }, 
  { "name": "standard",
    "description": "true if the data source is enabled by default. Non-default data sources cannot be disabled",
    "type": "bool",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "true if the data source is enabled by default. Non-default data sources cannot be disabled" } ] }, 
  { "name": "units",
    "description": "the units of the value",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "the units of the value" } ] }, 
  { "name": "min",
    "description": "the minimum value of the data source",
    "type": "float",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "the minimum value of the data source" } ] }, 
  { "name": "max",
    "description": "the maximum value of the data source",
    "type": "float",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "the maximum value of the data source" } ] }, 
  { "name": "value",
    "description": "current value of the data source",
    "type": "float",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "current value of the data source" } ] } ],
"messages": [  ],
"enums": [  ],
"lifecycle": [ 
  { "transition": "published",
    "release": "orlando",
    "description": "Data sources for logging in RRDs" } ] }, { "name": "blob",
"description": "A placeholder for a binary blob",
"fields": [ 
  { "name": "uuid",
    "description": "Unique identifier/object reference",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Unique identifier/object reference" } ] }, 
  { "name": "label",
    "description": "a human-readable name",
    "type": "string",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "a human-readable name" } ],
    "default": "\"\"" }, 
  { "name": "description",
    "description": "a notes field containing human-readable description",
    "type": "string",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "a notes field containing human-readable description" } ],
    "default": "\"\"" }, 
  { "name": "size",
    "description": "Size of the binary data, in bytes",
    "type": "int",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Size of the binary data, in bytes" } ] }, 
  { "name": "public",
    "description": "True if the blob is publicly accessible",
    "type": "bool",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "tampa",
        "description": "True if the blob is publicly accessible" } ],
    "default": "false" }, 
  { "name": "last_updated",
    "description": "Time at which the data in the blob was last updated",
    "type": "datetime",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Time at which the data in the blob was last updated" } ] }, 
  { "name": "mime_type",
    "description": "The mime type associated with this object. Defaults to 'application/octet-stream' if the empty string is supplied",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "The mime type associated with this object. Defaults to 'application/octet-stream' if the empty string is supplied" } ] } ],
"messages": [ 
  { "name": "destroy",
    "description": "",
    "result": [ "void" ],
    "params": [ 
      { "type": "blob ref",
        "name": "self",
        "doc": "The reference of the blob to destroy" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "" } ] }, 
  { "name": "create",
    "description": "Create a placeholder for a binary blob",
    "result": [ "blob ref", "The reference to the created blob" ],
    "params": [ 
      { "type": "string",
        "name": "mime_type",
        "doc": "The mime-type of the blob. Defaults to 'application/octet-stream' if the empty string is supplied" }, 
      { "type": "bool",
        "name": "public",
        "doc": "True if the blob should be publicly available" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "Create a placeholder for a binary blob" } ] } ],
"enums": [  ],
"lifecycle": [ 
  { "transition": "published",
    "release": "orlando",
    "description": "A placeholder for a binary blob" } ] }, { "name": "message",
"description": "An message for the attention of the administrator",
"fields": [ 
  { "name": "uuid",
    "description": "Unique identifier/object reference",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Unique identifier/object reference" } ] }, 
  { "name": "name",
    "description": "The name of the message",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "The name of the message" } ] }, 
  { "name": "priority",
    "description": "The message priority, 0 being low priority",
    "type": "int",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "The message priority, 0 being low priority" } ] }, 
  { "name": "cls",
    "description": "The class of the object this message is associated with",
    "type": "enum cls",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "The class of the object this message is associated with" } ] }, 
  { "name": "obj_uuid",
    "description": "The uuid of the object this message is associated with",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "The uuid of the object this message is associated with" } ] }, 
  { "name": "timestamp",
    "description": "The time at which the message was created",
    "type": "datetime",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "The time at which the message was created" } ] }, 
  { "name": "body",
    "description": "The body of the message",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "The body of the message" } ] } ],
"messages": [ 
  { "name": "get_all_records_where",
    "description": "",
    "result": [ "(message ref -> message record) map", "The messages" ],
    "params": [ 
      { "type": "string",
        "name": "expr",
        "doc": "The expression to match (not currently used)" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin", "vm-operator", "read-only" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "" } ] }, 
  { "name": "get_all_records",
    "description": "",
    "result": [ "(message ref -> message record) map", "The messages" ],
    "params": [  ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin", "vm-operator", "read-only" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "" } ] }, 
  { "name": "get_by_uuid",
    "description": "",
    "result": [ "message ref", "The message reference" ],
    "params": [ 
      { "type": "string",
        "name": "uuid",
        "doc": "The uuid of the message" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin", "vm-operator", "read-only" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "" } ] }, 
  { "name": "get_record",
    "description": "",
    "result": [ "message record", "The message record" ],
    "params": [ 
      { "type": "message ref",
        "name": "self",
        "doc": "The reference to the message" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin", "vm-operator", "read-only" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "" } ] }, 
  { "name": "get_since",
    "description": "",
    "result": [ "(message ref -> message record) map", "The relevant messages" ],
    "params": [ 
      { "type": "datetime",
        "name": "since",
        "doc": "The cutoff time" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin", "vm-operator", "read-only" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "" } ] }, 
  { "name": "get_all",
    "description": "",
    "result": [ "message ref set", "The references to the messages" ],
    "params": [  ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin", "vm-operator", "read-only" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "" } ] }, 
  { "name": "get",
    "description": "",
    "result": [ "(message ref -> message record) map", "The relevant messages" ],
    "params": [ 
      { "type": "enum cls",
        "name": "cls",
        "doc": "The class of object" }, 
      { "type": "string",
        "name": "obj_uuid",
        "doc": "The uuid of the object" }, 
      { "type": "datetime",
        "name": "since",
        "doc": "The cutoff time" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin", "vm-operator", "read-only" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "" } ] }, 
  { "name": "destroy",
    "description": "",
    "result": [ "void" ],
    "params": [ 
      { "type": "message ref",
        "name": "self",
        "doc": "The reference of the message to destroy" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "" } ] }, 
  { "name": "create",
    "description": "",
    "result": [ "message ref", "The reference of the created message" ],
    "params": [ 
      { "type": "string",
        "name": "name",
        "doc": "The name of the message" }, 
      { "type": "int",
        "name": "priority",
        "doc": "The priority of the message" }, 
      { "type": "enum cls",
        "name": "cls",
        "doc": "The class of object this message is associated with" }, 
      { "type": "string",
        "name": "obj_uuid",
        "doc": "The uuid of the object this message is associated with" }, 
      { "type": "string",
        "name": "body",
        "doc": "The body of the message" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "orlando",
        "description": "" } ] } ],
"enums": [ 
  { "name": "cls",
    "values": [ 
      { "name": "VM",
        "doc": "VM" }, 
      { "name": "Host",
        "doc": "Host" }, 
      { "name": "SR",
        "doc": "SR" }, 
      { "name": "Pool",
        "doc": "Pool" }, 
      { "name": "VMPP",
        "doc": "VMPP" } ] } ],
"lifecycle": [ 
  { "transition": "published",
    "release": "orlando",
    "description": "An message for the attention of the administrator" } ] }, { "name": "secret",
"description": "A secret",
"fields": [ 
  { "name": "uuid",
    "description": "Unique identifier/object reference",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "Unique identifier/object reference" } ] }, 
  { "name": "value",
    "description": "the secret",
    "type": "string",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "the secret" } ] }, 
  { "name": "other_config",
    "description": "other_config",
    "type": "(string -> string) map",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "rio",
        "description": "other_config" } ],
    "default": "{}" } ],
"messages": [  ],
"enums": [  ],
"lifecycle": [ 
  { "transition": "published",
    "release": "midnight-ride",
    "description": "A secret" } ] }, { "name": "tunnel",
"description": "A tunnel for network traffic",
"fields": [ 
  { "name": "uuid",
    "description": "Unique identifier/object reference",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "cowley",
        "description": "Unique identifier/object reference" } ] }, 
  { "name": "access_PIF",
    "description": "The interface through which the tunnel is accessed",
    "type": "PIF ref",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "cowley",
        "description": "The interface through which the tunnel is accessed" } ],
    "default": "Null" }, 
  { "name": "transport_PIF",
    "description": "The interface used by the tunnel",
    "type": "PIF ref",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "cowley",
        "description": "The interface used by the tunnel" } ],
    "default": "Null" }, 
  { "name": "status",
    "description": "Status information about the tunnel",
    "type": "(string -> string) map",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "cowley",
        "description": "Status information about the tunnel" } ],
    "default": "{\"active\" -> \"false\"}" }, 
  { "name": "other_config",
    "description": "Additional configuration",
    "type": "(string -> string) map",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "cowley",
        "description": "Additional configuration" } ],
    "default": "{}" } ],
"messages": [ 
  { "name": "destroy",
    "description": "Destroy a tunnel",
    "result": [ "void" ],
    "params": [ 
      { "type": "tunnel ref",
        "name": "self",
        "doc": "tunnel to destroy" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "cowley",
        "description": "Destroy a tunnel" } ] }, 
  { "name": "create",
    "description": "Create a tunnel",
    "result": [ "tunnel ref", "The reference of the created tunnel object" ],
    "params": [ 
      { "type": "PIF ref",
        "name": "transport_PIF",
        "doc": "PIF which receives the tagged traffic" }, 
      { "type": "network ref",
        "name": "network",
        "doc": "Network to receive the tunnelled traffic" } ],
    "errors": [ 
      { "name": "OPENVSWITCH_NOT_ACTIVE",
        "doc": "This operation needs the OpenVSwitch networking backend to be enabled on all hosts in the pool." }, 
      { "name": "TRANSPORT_PIF_NOT_CONFIGURED",
        "doc": "The tunnel transport PIF has no IP configuration set." }, 
      { "name": "IS_TUNNEL_ACCESS_PIF",
        "doc": "You tried to create a VLAN or tunnel on top of a tunnel access PIF - use the underlying transport PIF instead." } ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "cowley",
        "description": "Create a tunnel" } ] } ],
"enums": [  ],
"lifecycle": [ 
  { "transition": "published",
    "release": "cowley",
    "description": "A tunnel for network traffic" } ] }, { "name": "PCI",
"description": "A PCI device",
"fields": [ 
  { "name": "uuid",
    "description": "Unique identifier/object reference",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "boston",
        "description": "" } ] }, 
  { "name": "class_name",
    "description": "PCI class name",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "boston",
        "description": "" } ],
    "default": "\"\"" }, 
  { "name": "vendor_name",
    "description": "Vendor name",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "boston",
        "description": "" } ],
    "default": "\"\"" }, 
  { "name": "device_name",
    "description": "Device name",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "boston",
        "description": "" } ],
    "default": "\"\"" }, 
  { "name": "host",
    "description": "Physical machine that owns the PCI device",
    "type": "host ref",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "boston",
        "description": "" } ],
    "default": "OpaqueRef:NULL" }, 
  { "name": "pci_id",
    "description": "PCI ID of the physical device",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "boston",
        "description": "" } ],
    "default": "\"\"" }, 
  { "name": "dependencies",
    "description": "List of dependent PCI devices",
    "type": "PCI ref set",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "boston",
        "description": "" } ] }, 
  { "name": "other_config",
    "description": "Additional configuration",
    "type": "(string -> string) map",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "boston",
        "description": "" } ],
    "default": "{}" }, 
  { "name": "subsystem_vendor_name",
    "description": "Subsystem vendor name",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "clearwater-whetstone",
        "description": "" } ],
    "default": "\"\"" }, 
  { "name": "subsystem_device_name",
    "description": "Subsystem device name",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "clearwater-whetstone",
        "description": "" } ],
    "default": "\"\"" } ],
"messages": [  ],
"enums": [  ],
"lifecycle": [ 
  { "transition": "published",
    "release": "boston",
    "description": "" } ] }, { "name": "PGPU",
"description": "A physical GPU (pGPU)",
"fields": [ 
  { "name": "uuid",
    "description": "Unique identifier/object reference",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "boston",
        "description": "" } ] }, 
  { "name": "PCI",
    "description": "Link to underlying PCI device",
    "type": "PCI ref",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "boston",
        "description": "" } ],
    "default": "OpaqueRef:NULL" }, 
  { "name": "GPU_group",
    "description": "GPU group the pGPU is contained in",
    "type": "GPU_group ref",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "boston",
        "description": "" } ],
    "default": "OpaqueRef:NULL" }, 
  { "name": "host",
    "description": "Host that own the GPU",
    "type": "host ref",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "boston",
        "description": "" } ],
    "default": "OpaqueRef:NULL" }, 
  { "name": "other_config",
    "description": "Additional configuration",
    "type": "(string -> string) map",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "boston",
        "description": "" } ],
    "default": "{}" }, 
  { "name": "supported_VGPU_types",
    "description": "List of VGPU types supported by the underlying hardware",
    "type": "VGPU_type ref set",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "vgpu-tech-preview",
        "description": "" } ] }, 
  { "name": "enabled_VGPU_types",
    "description": "List of VGPU types which have been enabled for this PGPU",
    "type": "VGPU_type ref set",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "vgpu-tech-preview",
        "description": "" } ] }, 
  { "name": "resident_VGPUs",
    "description": "List of VGPUs running on this PGPU",
    "type": "VGPU ref set",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "vgpu-tech-preview",
        "description": "" } ] }, 
  { "name": "supported_VGPU_max_capacities",
    "description": "A map relating each VGPU type supported on this GPU to the maximum number of VGPUs of that type which can run simultaneously on this GPU",
    "type": "(VGPU_type ref -> int) map",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "vgpu-productisation",
        "description": "" } ],
    "default": "{}" }, 
  { "name": "dom0_access",
    "description": "The accessibility of this device from dom0",
    "type": "enum pgpu_dom0_access",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "cream",
        "description": "" } ],
    "default": "enabled" }, 
  { "name": "is_system_display_device",
    "description": "Is this device the system display device",
    "type": "bool",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "cream",
        "description": "" } ],
    "default": "false" } ],
"messages": [ 
  { "name": "disable_dom0_access",
    "description": "",
    "result": [ "enum pgpu_dom0_access", "The accessibility of this PGPU from dom0" ],
    "params": [ 
      { "type": "PGPU ref",
        "name": "self",
        "doc": "The PGPU to which dom0 will be denied access" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "cream",
        "description": "" } ] }, 
  { "name": "enable_dom0_access",
    "description": "",
    "result": [ "enum pgpu_dom0_access", "The accessibility of this PGPU from dom0" ],
    "params": [ 
      { "type": "PGPU ref",
        "name": "self",
        "doc": "The PGPU to which dom0 will be granted access" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "cream",
        "description": "" } ] }, 
  { "name": "get_remaining_capacity",
    "description": "",
    "result": [ "int", "The number of VGPUs of the specified type which can still be started on this PGPU" ],
    "params": [ 
      { "type": "PGPU ref",
        "name": "self",
        "doc": "The PGPU to query" }, 
      { "type": "VGPU_type ref",
        "name": "vgpu_type",
        "doc": "The VGPU type for which we want to find the number of VGPUs which can still be started on this PGPU" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin", "vm-operator", "read-only" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "vgpu-tech-preview",
        "description": "" } ] }, 
  { "name": "set_GPU_group",
    "description": "",
    "result": [ "void" ],
    "params": [ 
      { "type": "PGPU ref",
        "name": "self",
        "doc": "The PGPU to move to a new group" }, 
      { "type": "GPU_group ref",
        "name": "value",
        "doc": "The group to which the PGPU will be moved" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "vgpu-tech-preview",
        "description": "" } ] }, 
  { "name": "set_enabled_VGPU_types",
    "description": "",
    "result": [ "void" ],
    "params": [ 
      { "type": "PGPU ref",
        "name": "self",
        "doc": "The PGPU on which we are enabling a set of VGPU types" }, 
      { "type": "VGPU_type ref set",
        "name": "value",
        "doc": "The VGPU types to enable" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "vgpu-tech-preview",
        "description": "" } ] }, 
  { "name": "remove_enabled_VGPU_types",
    "description": "",
    "result": [ "void" ],
    "params": [ 
      { "type": "PGPU ref",
        "name": "self",
        "doc": "The PGPU from which we are removing an enabled VGPU type" }, 
      { "type": "VGPU_type ref",
        "name": "value",
        "doc": "The VGPU type to disable" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "vgpu-tech-preview",
        "description": "" } ] }, 
  { "name": "add_enabled_VGPU_types",
    "description": "",
    "result": [ "void" ],
    "params": [ 
      { "type": "PGPU ref",
        "name": "self",
        "doc": "The PGPU to which we are adding an enabled VGPU type" }, 
      { "type": "VGPU_type ref",
        "name": "value",
        "doc": "The VGPU type to enable" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "vgpu-tech-preview",
        "description": "" } ] } ],
"enums": [ 
  { "name": "pgpu_dom0_access",
    "values": [ 
      { "name": "enabled",
        "doc": "dom0 can access this device as normal" }, 
      { "name": "disable_on_reboot",
        "doc": "On host reboot dom0 will be blocked from accessing this device" }, 
      { "name": "disabled",
        "doc": "dom0 cannot access this device" }, 
      { "name": "enable_on_reboot",
        "doc": "On host reboot dom0 will be allowed to access this device" } ] } ],
"lifecycle": [ 
  { "transition": "published",
    "release": "boston",
    "description": "" } ] }, { "name": "GPU_group",
"description": "A group of compatible GPUs across the resource pool",
"fields": [ 
  { "name": "uuid",
    "description": "Unique identifier/object reference",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "boston",
        "description": "" } ] }, 
  { "name": "label",
    "description": "a human-readable name",
    "type": "string",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "boston",
        "description": "" } ],
    "default": "\"\"" }, 
  { "name": "description",
    "description": "a notes field containing human-readable description",
    "type": "string",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "boston",
        "description": "" } ],
    "default": "\"\"" }, 
  { "name": "PGPUs",
    "description": "List of pGPUs in the group",
    "type": "PGPU ref set",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "boston",
        "description": "" } ] }, 
  { "name": "VGPUs",
    "description": "List of vGPUs using the group",
    "type": "VGPU ref set",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "boston",
        "description": "" } ] }, 
  { "name": "GPU_types",
    "description": "List of GPU types (vendor+device ID) that can be in this group",
    "type": "string set",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "boston",
        "description": "" } ],
    "default": "{}" }, 
  { "name": "other_config",
    "description": "Additional configuration",
    "type": "(string -> string) map",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "boston",
        "description": "" } ],
    "default": "{}" }, 
  { "name": "allocation_algorithm",
    "description": "Current allocation of vGPUs to pGPUs for this group",
    "type": "enum allocation_algorithm",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "vgpu-tech-preview",
        "description": "" } ],
    "default": "depth_first" }, 
  { "name": "supported_VGPU_types",
    "description": "vGPU types supported on at least one of the pGPUs in this group",
    "type": "VGPU_type ref set",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "vgpu-productisation",
        "description": "" } ] }, 
  { "name": "enabled_VGPU_types",
    "description": "vGPU types supported on at least one of the pGPUs in this group",
    "type": "VGPU_type ref set",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "vgpu-productisation",
        "description": "" } ] } ],
"messages": [ 
  { "name": "get_remaining_capacity",
    "description": "",
    "result": [ "int", "The number of VGPUs of the given type which can still be started on the PGPUs in the group" ],
    "params": [ 
      { "type": "GPU_group ref",
        "name": "self",
        "doc": "The GPU group to query" }, 
      { "type": "VGPU_type ref",
        "name": "vgpu_type",
        "doc": "The VGPU_type for which the remaining capacity will be calculated" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator", "vm-power-admin", "vm-admin", "vm-operator", "read-only" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "vgpu-tech-preview",
        "description": "" } ] }, 
  { "name": "destroy",
    "description": "",
    "result": [ "void" ],
    "params": [ 
      { "type": "GPU_group ref",
        "name": "self",
        "doc": "The vGPU to destroy" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "boston",
        "description": "" } ] }, 
  { "name": "create",
    "description": "",
    "result": [ "GPU_group ref", "" ],
    "params": [ 
      { "type": "string",
        "name": "name_label",
        "doc": "" }, 
      { "type": "string",
        "name": "name_description",
        "doc": "" }, 
      { "type": "(string -> string) map",
        "name": "other_config",
        "doc": "" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "boston",
        "description": "" } ] } ],
"enums": [ 
  { "name": "allocation_algorithm",
    "values": [ 
      { "name": "breadth_first",
        "doc": "vGPUs of a given type are allocated evenly across supporting pGPUs." }, 
      { "name": "depth_first",
        "doc": "vGPUs of a given type are allocated on supporting pGPUs until they are full." } ] } ],
"lifecycle": [ 
  { "transition": "published",
    "release": "boston",
    "description": "" } ] }, { "name": "VGPU",
"description": "A virtual GPU (vGPU)",
"fields": [ 
  { "name": "uuid",
    "description": "Unique identifier/object reference",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "boston",
        "description": "" } ] }, 
  { "name": "VM",
    "description": "VM that owns the vGPU",
    "type": "VM ref",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "boston",
        "description": "" } ] }, 
  { "name": "GPU_group",
    "description": "GPU group used by the vGPU",
    "type": "GPU_group ref",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "boston",
        "description": "" } ] }, 
  { "name": "device",
    "description": "Order in which the devices are plugged into the VM",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "boston",
        "description": "" } ],
    "default": "\"0\"" }, 
  { "name": "currently_attached",
    "description": "Reflects whether the virtual device is currently connected to a physical device",
    "type": "bool",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "boston",
        "description": "" } ],
    "default": "false" }, 
  { "name": "other_config",
    "description": "Additional configuration",
    "type": "(string -> string) map",
    "qualifier": "read/write",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "boston",
        "description": "" } ],
    "default": "{}" }, 
  { "name": "type",
    "description": "Preset type for this VGPU",
    "type": "VGPU_type ref",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "vgpu-tech-preview",
        "description": "" } ],
    "default": "OpaqueRef:NULL" }, 
  { "name": "resident_on",
    "description": "The PGPU on which this VGPU is running",
    "type": "PGPU ref",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "vgpu-tech-preview",
        "description": "" } ],
    "default": "OpaqueRef:NULL" } ],
"messages": [ 
  { "name": "destroy",
    "description": "",
    "result": [ "void" ],
    "params": [ 
      { "type": "VGPU ref",
        "name": "self",
        "doc": "The vGPU to destroy" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "boston",
        "description": "" } ] }, 
  { "name": "create",
    "description": "",
    "result": [ "VGPU ref", "reference to the newly created object" ],
    "params": [ 
      { "type": "VM ref",
        "name": "VM",
        "doc": "" }, 
      { "type": "GPU_group ref",
        "name": "GPU_group",
        "doc": "" }, 
      { "type": "string",
        "name": "device",
        "doc": "" }, 
      { "type": "(string -> string) map",
        "name": "other_config",
        "doc": "" }, 
      { "type": "VGPU_type ref",
        "name": "type",
        "doc": "" } ],
    "errors": [  ],
    "roles": [ "pool-admin", "pool-operator" ],
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "boston",
        "description": "" } ] } ],
"enums": [  ],
"lifecycle": [ 
  { "transition": "published",
    "release": "boston",
    "description": "" } ] }, { "name": "VGPU_type",
"description": "A type of virtual GPU",
"fields": [ 
  { "name": "uuid",
    "description": "Unique identifier/object reference",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "vgpu-tech-preview",
        "description": "" } ] }, 
  { "name": "vendor_name",
    "description": "Name of VGPU vendor",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "vgpu-tech-preview",
        "description": "" } ],
    "default": "\"\"" }, 
  { "name": "model_name",
    "description": "Model name associated with the VGPU type",
    "type": "string",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "vgpu-tech-preview",
        "description": "" } ],
    "default": "\"\"" }, 
  { "name": "framebuffer_size",
    "description": "Framebuffer size of the VGPU type, in bytes",
    "type": "int",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "vgpu-tech-preview",
        "description": "" } ],
    "default": "0" }, 
  { "name": "max_heads",
    "description": "Maximum number of displays supported by the VGPU type",
    "type": "int",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "vgpu-tech-preview",
        "description": "" } ],
    "default": "0" }, 
  { "name": "max_resolution_x",
    "description": "Maximum resultion (width) supported by the VGPU type",
    "type": "int",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "vgpu-productisation",
        "description": "" } ],
    "default": "0" }, 
  { "name": "max_resolution_y",
    "description": "Maximum resoltion (height) supported by the VGPU type",
    "type": "int",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "vgpu-productisation",
        "description": "" } ],
    "default": "0" }, 
  { "name": "supported_on_PGPUs",
    "description": "List of PGPUs that support this VGPU type",
    "type": "PGPU ref set",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "vgpu-tech-preview",
        "description": "" } ] }, 
  { "name": "enabled_on_PGPUs",
    "description": "List of PGPUs that have this VGPU type enabled",
    "type": "PGPU ref set",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "vgpu-tech-preview",
        "description": "" } ] }, 
  { "name": "VGPUs",
    "description": "List of VGPUs of this type",
    "type": "VGPU ref set",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "vgpu-tech-preview",
        "description": "" } ] }, 
  { "name": "supported_on_GPU_groups",
    "description": "List of GPU groups in which at least one PGPU supports this VGPU type",
    "type": "GPU_group ref set",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "vgpu-productisation",
        "description": "" } ] }, 
  { "name": "enabled_on_GPU_groups",
    "description": "List of GPU groups in which at least one have this VGPU type enabled",
    "type": "GPU_group ref set",
    "qualifier": "read only",
    "tag": "",
    "lifecycle": [ 
      { "transition": "published",
        "release": "vgpu-productisation",
        "description": "" } ] } ],
"messages": [  ],
"enums": [  ],
"lifecycle": [ 
  { "transition": "published",
    "release": "vgpu-tech-preview",
    "description": "" } ] } ]
