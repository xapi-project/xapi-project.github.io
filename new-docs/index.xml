<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>XAPI Toolstack Developer Guide :: XAPI Toolstack Developer Documentation</title><link>https://xapi-project.github.io/new-docs/index.html</link><description>The XAPI Toolstack:
Forms the control plane of both XenServer as well as xcp-ng, manages clusters of Xen hosts with shared storage and networking, has a full-featured API, used by clients such as XenCenter and Xen Orchestra. The XAPI Toolstack is an open-source project developed by the xapi project, a sub-project of the Linux Foundation Xen Project.
The source code is available on Github under the xapi-project. the main repository is xen-api.</description><generator>Hugo</generator><language>en-us</language><atom:link href="https://xapi-project.github.io/new-docs/index.xml" rel="self" type="application/rss+xml"/><item><title>The XAPI Toolstack</title><link>https://xapi-project.github.io/new-docs/toolstack/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://xapi-project.github.io/new-docs/toolstack/index.html</guid><description>Responsibilities High-level architecture Environment Daemons Interfaces Features Disaster Recovery Event handling High-Availability Multi-version drivers NUMA Snapshots vGPU Xapi Storage Migration</description></item><item><title>Xapi</title><link>https://xapi-project.github.io/new-docs/xapi/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://xapi-project.github.io/new-docs/xapi/index.html</guid><description>Xapi is the xapi-project host and cluster manager.
Xapi is responsible for:
providing a stable interface (the XenAPI) allowing one client to manage multiple hosts hosting the “xe” CLI authenticating users and applying role-based access control locking resources (in particular disks) allowing storage to be managed through plugins planning and coping with host failures (“High Availability”) storing VM and host configuration generating alerts managing software patching Principles The XenAPI interface must remain backwards compatible, allowing older clients to continue working Xapi delegates all Xenstore/libxc/libxl access to Xenopsd, so Xapi could be run in an unprivileged helper domain Xapi delegates the low-level storage manipulation to SM plugins.</description></item><item><title>Xenopsd</title><link>https://xapi-project.github.io/new-docs/xenopsd/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://xapi-project.github.io/new-docs/xenopsd/index.html</guid><description>Xenopsd is the VM manager of the XAPI Toolstack. Xenopsd is responsible for:
Starting, stopping, rebooting, suspending, resuming, migrating VMs. (Hot-)plugging and unplugging devices such as VBDs, VIFs, vGPUs and PCI devices. Setting up VM consoles. Running bootloaders. Setting QoS parameters. Configuring SMBIOS tables. Handling crashes. etc. Check out the full features list.
The code is in ocaml/xenopsd.
Principles Do no harm: Xenopsd should never touch domains/VMs which it hasn’t been asked to manage.</description></item><item><title>Networkd</title><link>https://xapi-project.github.io/new-docs/xcp-networkd/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://xapi-project.github.io/new-docs/xcp-networkd/index.html</guid><description>The xcp-networkd daemon (hereafter simply called “networkd”) is a component in the xapi toolstack that is responsible for configuring network interfaces and virtual switches (bridges) on a host.
The code is in ocaml/networkd.
Principles Distro-agnostic. Networkd is meant to work on at least CentOS/RHEL as well a Debian/Ubuntu based distros. It therefore should not use any network configuration features specific to those distros.
Stateless. By default, networkd should not maintain any state.</description></item><item><title>Squeezed</title><link>https://xapi-project.github.io/new-docs/squeezed/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://xapi-project.github.io/new-docs/squeezed/index.html</guid><description>Squeezed is the XAPI Toolstack’s host memory manager (aka balloon driver). Squeezed uses ballooning to move memory between running VMs, to avoid wasting host memory.
Principles Avoid wasting host memory: unused memory should be put to use by returning it to VMs. Memory should be shared in proportion to the configured policy. Operate entirely at the level of domains (not VMs), and be independent of Xen toolstack.</description></item><item><title>Xapi-guard</title><link>https://xapi-project.github.io/new-docs/xapi-guard/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://xapi-project.github.io/new-docs/xapi-guard/index.html</guid><description>The xapi-guard daemon is the component in the xapi toolstack that is responsible for handling persistence requests from VMs (domains). Currently these are UEFI vars and vTPM updates.
The code is in ocaml/xapi-guard. When the daemon managed only with UEFI updates it was called varstored-guard. Some files and package names still use the previous name.
Principles Calls from domains must be limited in privilege to do certain API calls, and to read and write from their corresponding VM in xapi’s database only.</description></item><item><title>Design Documents</title><link>https://xapi-project.github.io/new-docs/design/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://xapi-project.github.io/new-docs/design/index.html</guid><description>Key: Revision Proposed Confirmed Released (vA.B) Unrecognised status Improving snapshot revert behaviour v1 confirmed Multiple Cluster Managers v2 confirmed SR-Level RRDs v11 confirmed Backtrace support v1 confirmed Add qcow tool to allow VDI import/export v1 proposed Aggregated Local Storage and Host Reboots v3 proposed Code Coverage Profiling v2 proposed Distributed database v1 proposed FCoE capable NICs v3 proposed Local database v1 proposed Management Interface on VLAN v3 proposed Multiple device emulators v1 proposed OCFS2 storage v1 proposed patches in VDIs v1 proposed PCI passthrough support v1 proposed Pool-wide SSH v1 proposed Process events from xenopsd in a timely manner v1 proposed RRDD plugin protocol v3 v1 proposed Schedule Snapshot Design v2 proposed Specifying Emulated PCI Devices v1 proposed thin LVHD storage v3 proposed XenPrep v2 proposed TLS vertification for intra-pool communications v2 released (22.</description></item><item><title>Libraries</title><link>https://xapi-project.github.io/new-docs/lib/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://xapi-project.github.io/new-docs/lib/index.html</guid><description>libxenctrlXen Control library for controlling the Xen hypervisor</description></item><item><title>Python</title><link>https://xapi-project.github.io/new-docs/python/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://xapi-project.github.io/new-docs/python/index.html</guid><description>Introduction Most Python3 scripts and plugins shall be located below the python3 directory. The structure of the directory is as follows:
python3/bin: This contains files installed in /opt/xensource/bin and are meant to be run by users python3/libexec: This contains files installed in /opt/xensource/libexec and are meant to only be run by xapi and other daemons. python3/packages: Contains files to be installed in python’s site-packages are meant to be modules and packages to be imported by other scripts or executed via python3 -m python3/plugins: This contains files that are meant to be xapi plugins python3/tests: Tests for testing and covering the Python scripts and plugins Dependencies for development and testing In GitHub CI and local testing, we can use pre-commit to execute the tests.</description></item><item><title>RRDD</title><link>https://xapi-project.github.io/new-docs/xcp-rrdd/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://xapi-project.github.io/new-docs/xcp-rrdd/index.html</guid><description>The xcp-rrdd daemon (hereafter simply called “rrdd”) is a component in the xapi toolstack that is responsible for collecting metrics, storing them as “Round-Robin Databases” (RRDs) and exposing these to clients.
The code is in ocaml/xcp-rrdd.</description></item><item><title>XenAPI</title><link>https://xapi-project.github.io/new-docs/xen-api/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://xapi-project.github.io/new-docs/xen-api/index.html</guid><description>XenAPI Basics Wire Protocol Overview of the XenAPI API evolution Using the API XenAPI Reference XenAPI Releases Topics</description></item></channel></rss>