<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Operation Walk-Throughs :: XAPI Toolstack Developer Documentation</title><link>https://xapi-project.github.io/new-docs/xenopsd/walkthroughs/index.html</link><description>Letâ€™s trace through interesting operations to see how the whole system works.
Starting a VM Migrating a VM Shutting down a VM and waiting for it to happen A VM wants to reboot itself A disk is hotplugged A disk refuses to hotunplug A VM is suspended</description><generator>Hugo</generator><language>en-us</language><atom:link href="https://xapi-project.github.io/new-docs/xenopsd/walkthroughs/index.xml" rel="self" type="application/rss+xml"/><item><title>Live Migration Sequence Diagram</title><link>https://xapi-project.github.io/new-docs/xenopsd/walkthroughs/live-migration/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://xapi-project.github.io/new-docs/xenopsd/walkthroughs/live-migration/index.html</guid><description>sequenceDiagram autonumber participant tx as sender participant rx0 as receiver thread 0 participant rx1 as receiver thread 1 participant rx2 as receiver thread 2 activate tx tx->>rx0: VM.import_metadata tx->>tx: Squash memory to dynamic-min tx->>rx1: HTTP /migrate/vm activate rx1 rx1->>rx1: VM_receive_memory&lt;br/>VM_create (00000001)&lt;br/>VM_restore_vifs rx1->>tx: handshake (control channel)&lt;br/>Synchronisation point 1 tx->>rx2: HTTP /migrate/mem activate rx2 rx2->>tx: handshake (memory channel)&lt;br/>Synchronisation point 1-mem tx->>rx1: handshake (control channel)&lt;br/>Synchronisation point 1-mem ACK rx2->>rx1: memory fd tx->>rx1: VM_save/VM_restore&lt;br/>Synchronisation point 2 tx->>tx: VM_rename rx1->>rx2: exit deactivate rx2 tx->>rx1: handshake (control channel)&lt;br/>Synchronisation point 3 rx1->>rx1: VM_rename&lt;br/>VM_restore_devices&lt;br/>VM_unpause&lt;br/>VM_set_domain_action_request rx1->>tx: handshake (control channel)&lt;br/>Synchronisation point 4 deactivate rx1 tx->>tx: VM_shutdown&lt;br/>VM_remove deactivate tx</description></item><item><title>Walkthrough: Migrating a VM</title><link>https://xapi-project.github.io/new-docs/xenopsd/walkthroughs/VM.migrate/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://xapi-project.github.io/new-docs/xenopsd/walkthroughs/VM.migrate/index.html</guid><description>A XenAPI client wishes to migrate a VM from one host to another within the same pool.
The client will issue a command to migrate the VM and it will be dispatched by the autogenerated dispatch_call function from xapi/server.ml. For more information about the generated functions you can have a look to XAPI IDL model.
The command will trigger the operation VM_migrate that has low level operations performed by the backend.</description></item><item><title>Walkthrough: Starting a VM</title><link>https://xapi-project.github.io/new-docs/xenopsd/walkthroughs/VM.start/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://xapi-project.github.io/new-docs/xenopsd/walkthroughs/VM.start/index.html</guid><description>A Xenopsd client wishes to start a VM. They must first tell Xenopsd the VM configuration to use. A VM configuration is broken down into objects:
VM: A device-less Virtual Machine VBD: A virtual block device for a VM VIF: A virtual network interface for a VM PCI: A virtual PCI device for a VM Treating devices as first-class objects is convenient because we wish to expose operations on the devices such as hotplug, unplug, eject (for removable media), carrier manipulation (for network interfaces) etc.</description></item></channel></rss>