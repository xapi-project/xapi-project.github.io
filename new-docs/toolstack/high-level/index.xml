<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>High-level architecture :: XAPI Toolstack Developer Documentation</title><link>https://xapi-project.github.io/new-docs/toolstack/high-level/index.html</link><description>The XAPI Toolstack manages a cluster of hosts, network switches and storage on behalf of clients such as XenCenter and Xen Orchestra.
The most fundamental concept is of a Resource pool: the whole cluster managed as a single entity. The following diagram shows a cluster of hosts running xapi, all sharing some storage:
At any time, at most one host is known as the pool coordinator (formerly known as “master”) and is responsible for coordination and locking resources within the pool.</description><generator>Hugo</generator><language>en-us</language><atom:link href="https://xapi-project.github.io/new-docs/toolstack/high-level/index.xml" rel="self" type="application/rss+xml"/><item><title>Environment</title><link>https://xapi-project.github.io/new-docs/toolstack/high-level/environment/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://xapi-project.github.io/new-docs/toolstack/high-level/environment/index.html</guid><description>The Toolstack runs in an environment on a server (host) that has:
Physical hardware. The Xen hypervisor. The control domain (domain 0): the privileged domain that the Toolstack runs in. Other, mostly unprivileged domains, usually for guests (VMs). The Toolstack relies on various bits of software inside the control domain, and directly communicates with most of these:
Linux kernel including drivers for hardware and Xen paravirtualised devices (e.g. netback and blkback).</description></item><item><title>Daemons</title><link>https://xapi-project.github.io/new-docs/toolstack/high-level/daemons/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://xapi-project.github.io/new-docs/toolstack/high-level/daemons/index.html</guid><description>The Toolstack consists of a set of co-operating daemons:
xapi manages clusters of hosts, co-ordinating access to shared storage and networking. xenopsd a low-level “domain manager” which takes care of creating, suspending, resuming, migrating, rebooting domains by interacting with Xen via libxc and libxl. xcp-rrdd a performance counter monitoring daemon which aggregates “datasources” defined via a plugin API and records history for each. There are various rrdd-plugin daemons: xcp-rrdd-gpumon xcp-rrdd-iostat xcp-rrdd-squeezed xcp-rrdd-xenpm xcp-rrdd-dcmi xcp-rrdd-netdev xcp-rrdd-cpu xcp-networkd a host network manager which takes care of configuring interfaces, bridges and OpenVSwitch instances squeezed a daemon in charge of VM memory management xapi-storage-script for storage manipulation over SMAPIv3 message-switch exchanges messages between the daemons on a host xapi-guard forwards uefi and vtpm persistence calls from domains to xapi v6d controls which features are enabled.</description></item><item><title>Interfaces</title><link>https://xapi-project.github.io/new-docs/toolstack/high-level/interfaces/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://xapi-project.github.io/new-docs/toolstack/high-level/interfaces/index.html</guid><description>Communication between the Toolstack daemon is built upon libraries from a component called xapi-idl.
Abstracts communication between daemons over the message-switch using JSON/RPC. Contains the definition of the interfaces exposed by the daemons (except xapi).</description></item></channel></rss>