<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Xapi on XAPI Toolstack Developer Documentation</title><link>https://xapi-project.github.io/new-docs/xapi/index.html</link><description>Recent content in Xapi on XAPI Toolstack Developer Documentation</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://xapi-project.github.io/new-docs/xapi/index.xml" rel="self" type="application/rss+xml"/><item><title>Guides</title><link>https://xapi-project.github.io/new-docs/xapi/guides/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://xapi-project.github.io/new-docs/xapi/guides/index.html</guid><description>Helpful guides for xapi developers.
How to add.... Adding a Class to the API Adding a field to the API Adding a function to the API Adding a XenAPI extension</description></item><item><title>Database</title><link>https://xapi-project.github.io/new-docs/xapi/database/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://xapi-project.github.io/new-docs/xapi/database/index.html</guid><description/></item><item><title>Host memory accounting</title><link>https://xapi-project.github.io/new-docs/xapi/memory/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://xapi-project.github.io/new-docs/xapi/memory/index.html</guid><description>Memory is used for many things:
the hypervisor code: this is the Xen executable itself the hypervisor heap: this is needed for per-domain structures and per-vCPU structures the crash kernel: this is needed to collect information after a host crash domain RAM: this is the memory the VM believes it has shadow memory: for HVM guests running on hosts without hardware assisted paging (HAP) Xen uses shadow to optimise page table updates.</description></item><item><title>XAPI requests walk-throughs</title><link>https://xapi-project.github.io/new-docs/xapi/walkthroughs/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://xapi-project.github.io/new-docs/xapi/walkthroughs/index.html</guid><description>Let&amp;rsquo;s detail the handling process of an XML request within XAPI. The first document uses the migration as an example of such request.
How the migration request goes through Xen API?</description></item><item><title>XAPI's Storage Layers</title><link>https://xapi-project.github.io/new-docs/xapi/storage/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://xapi-project.github.io/new-docs/xapi/storage/index.html</guid><description>Info The links in this page point to the source files of xapi v1.127.0, and xcp-idl v1.62.0, not to the latest source code.
In the beginning of 2023, significant changes have been made in the layering. In particular, the wrapper code from storage_impl.ml has been pushed down the stack, below the mux, such that it only covers the SMAPIv1 backend and not SMAPIv3. Also, all of the code (from xcp-idl etc) is now present in this repo (xen-api).</description></item><item><title>XE CLI architecture</title><link>https://xapi-project.github.io/new-docs/xapi/cli/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://xapi-project.github.io/new-docs/xapi/cli/index.html</guid><description>Info The links in this page point to the source files of xapi v1.132.0, not to the latest source code. Meanwhile, the CLI server code in xapi has been moved to a library separate from the main xapi binary, and has its own subdirectory ocaml/xapi-cli-server.
Architecture The actual CLI is a very lightweight binary in ocaml/xe-cli
It is just a dumb client, that does everything that xapi tells it to do This is a security issue We must trust the xenserver that we connect to, because it can tell xe to read local files, download files, &amp;hellip; When it is first called, it takes the few command-line arguments it needs, and then passes the rest to xapi in a HTTP PUT request Each argument is in a separate line Then it loops doing what xapi tells it to do, in a loop, until xapi tells it to exit or an exception happens The protocol description is in ocaml/xapi-cli-protocol/cli_protocol.</description></item></channel></rss>