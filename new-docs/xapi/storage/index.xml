<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>XAPI's Storage Layers :: XAPI Toolstack Developer Documentation</title><link>https://xapi-project.github.io/new-docs/xapi/storage/index.html</link><description>Info The links in this page point to the source files of xapi v25.11.0.
Xapi directly communicates only with the SMAPIv2 layer. There are no plugins directly implementing the SMAPIv2 interface, but the plugins in other layers are accessed through it:
graph TD A[xapi] --> B[SMAPIv2 interface] B --> C[SMAPIv2 &lt;-> SMAPIv1 state machine: storage_smapiv1_wrapper.ml] C --> G[SMAPIv2 &lt;-> SMAPIv1 translation: storage_smapiv1.ml] B --> D[SMAPIv2 &lt;-> SMAPIv3 translation: xapi-storage-script] G --> E[SMAPIv1 plugins] D --> F[SMAPIv3 plugins] SMAPIv1 These are the files related to SMAPIv1 in xen-api/ocaml/xapi/:</description><generator>Hugo</generator><language>en-us</language><atom:link href="https://xapi-project.github.io/new-docs/xapi/storage/index.xml" rel="self" type="application/rss+xml"/><item><title>Storage migration</title><link>https://xapi-project.github.io/new-docs/xapi/storage/sxm/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://xapi-project.github.io/new-docs/xapi/storage/sxm/index.html</guid><description>Overview SXM Multiplexing Motivation But we have storage_mux.ml Thought experiments on an alternative design Design SMAPIv1 migration Preparation Establishing mirror Mirror Snapshot Copy and compose Finish SMAPIv3 migration Preparation Establishing mirror Limitations Finish Error Handling Preparation (SMAPIv1 and SMAPIv3) Snapshot and mirror failure (SMAPIv1) Mirror failure (SMAPIv3) Copy failure (SMAPIv1) SMAPIv1 Migration implementation detail Receiving SXM Xapi code Storage code Copying a VDI Mirroring a VDI Code walkthrough DATA.copy DATA.</description></item></channel></rss>